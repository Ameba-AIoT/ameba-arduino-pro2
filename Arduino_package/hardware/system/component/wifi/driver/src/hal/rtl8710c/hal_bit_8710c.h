#ifndef __INC_RTL8710C_BIT_H
#define __INC_RTL8710C_BIT_H

#define CPU_OPT_WIDTH 0x1F

//2 REG_NOT_VALID

//2 REG_SYS_PWC_CTRL/ REG_SYS_ISO_CTRL
#define BIT_ISO_IP2MAC_WA2PP_8710C BIT(12)
#define BIT_ISO_PD_WLN_8710C BIT(9)
#define BIT_ISO_PD_WLD_8710C BIT(8)
#define BIT_PC_WLOFF_EN_8710C BIT(0)

//2 REG_WL_CLK_CTRL
#define BIT_WL_CKSL_CKTSF_8710C BIT(8)
#define BIT_WL_CKMCU_EN_8710C BIT(2)
#define BIT_WL_CKSEC_EN_8710C BIT(1)
#define BIT_WL_CKMAC_EN_8710C BIT(0)

//2 REG_WL_FUNC_EN (REG_WL_MAC_EN/ REG_WL_PHY_EN/ REG_RF_CTRL)
#define BIT_RF_SDMRSTB_8710C BIT(26)
#define BIT_RF_RSTB_8710C BIT(25)
#define BIT_RF_EN_8710C BIT(24)
#define BIT_FEN_BBRSTB_8710C BIT(17)
#define BIT_FEN_BB_GLB_RSTN_8710C BIT(16)
#define BIT_FEN_MACPOF_8710C BIT(4)
#define BIT_FEN_MACPON_8710C BIT(3)
#define BIT_FEN_MACREG_8710C BIT(2)
#define BIT_FEN_MAC_DCORE_8710C BIT(0)

//2 REG_WL_CKDIV_CTRL
#define BIT_WL_CLK_SYNC_8710C BIT(15)

#define BIT_SHIFT_WL_40M_PHASE 4
#define BIT_MASK_WL_40M_PHASE 0xf
#define BIT_WL_40M_PHASE(x) (((x) & BIT_MASK_WL_40M_PHASE) << BIT_SHIFT_WL_40M_PHASE)


#define BIT_SHIFT_WL_80M_PHASE 0
#define BIT_MASK_WL_80M_PHASE 0xf
#define BIT_WL_80M_PHASE(x) (((x) & BIT_MASK_WL_80M_PHASE) << BIT_SHIFT_WL_80M_PHASE)


//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_WL_PMC_CTRL
#define BIT_WL_LOP_WL_PWR_DOWN_8710C BIT(17)
#define BIT_WL_LOP_MAC_FUNC_RST_8710C BIT(16)

#define BIT_SHIFT_WL_PMC_CNT_PAR 8
#define BIT_MASK_WL_PMC_CNT_PAR 0x3
#define BIT_WL_PMC_CNT_PAR(x) (((x) & BIT_MASK_WL_PMC_CNT_PAR) << BIT_SHIFT_WL_PMC_CNT_PAR)

#define BIT_WL_PMC_LPS_EN_8710C BIT(2)
#define BIT_WL_PMC_OFFMAC_8710C BIT(1)
#define BIT_WL_APMC_ONMAC_8710C BIT(0)

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_BT_STATUS
#define BIT_BT2WL_INT_CLR_8710C BIT(17)
#define BIT_BT2WL_INT_MSK_EN_8710C BIT(16)
#define BIT_BT_INT_EN_8710C BIT(15)

#define BIT_SHIFT_RD_WR_WIFI_BT_INFO 8
#define BIT_MASK_RD_WR_WIFI_BT_INFO 0x7f
#define BIT_RD_WR_WIFI_BT_INFO(x) (((x) & BIT_MASK_RD_WR_WIFI_BT_INFO) << BIT_SHIFT_RD_WR_WIFI_BT_INFO)

#define BIT_SOC_HST_WAKE_BT_8710C BIT(4)
#define BIT_40M_CLK_REQ_8710C BIT(1)
#define BIT_BT_WAKE_HST_8710C BIT(0)

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_WL_AFE_CTRL
#define BIT_CK40M_EN_8710C BIT(31)
#define BIT_CK80M_EN_8710C BIT(30)

#define BIT_SHIFT_REG_CP_BIA 27
#define BIT_MASK_REG_CP_BIA 0x7
#define BIT_REG_CP_BIA(x) (((x) & BIT_MASK_REG_CP_BIA) << BIT_SHIFT_REG_CP_BIA)

#define BIT_REG_EN_MON_8710C BIT(26)

#define BIT_SHIFT_BTCK320M_PS 24
#define BIT_MASK_BTCK320M_PS 0x3
#define BIT_BTCK320M_PS(x) (((x) & BIT_MASK_BTCK320M_PS) << BIT_SHIFT_BTCK320M_PS)

#define BIT_BTCK320M_EN_8710C BIT(23)

#define BIT_SHIFT_REG_PS 20
#define BIT_MASK_REG_PS 0x7
#define BIT_REG_PS(x) (((x) & BIT_MASK_REG_PS) << BIT_SHIFT_REG_PS)

#define BIT_REG_PS_EN_8710C BIT(19)

#define BIT_SHIFT_REG_MONCKSEL 16
#define BIT_MASK_REG_MONCKSEL 0x7
#define BIT_REG_MONCKSEL(x) (((x) & BIT_MASK_REG_MONCKSEL) << BIT_SHIFT_REG_MONCKSEL)

#define BIT_AFE_WLPLL_EN_8710C BIT(9)
#define BIT_AFE_ALDO_EN_8710C BIT(8)
#define BIT_XTAL_EN_8710C BIT(2)
#define BIT_XTAL_GATE_RF_8710C BIT(1)
#define BIT_XTAL_GATE_AFE_8710C BIT(0)

#ifndef __HAL_COMMON_REG_H__
//2 REG_WL_AFE_CTRL1

#define BIT_SHIFT_DIVN 29
#define BIT_MASK_DIVN 0x7
#define BIT_DIVN(x) (((x) & BIT_MASK_DIVN) << BIT_SHIFT_DIVN)


#define BIT_SHIFT_BB_DBG_SEL_AFE_SDM 25
#define BIT_MASK_BB_DBG_SEL_AFE_SDM 0xf
#define BIT_BB_DBG_SEL_AFE_SDM(x) (((x) & BIT_MASK_BB_DBG_SEL_AFE_SDM) << BIT_SHIFT_BB_DBG_SEL_AFE_SDM)

#define BIT_RFE_SEL_SDM_8710C BIT(24)

#define BIT_SHIFT_RFE_SEL_AFE_SDM 20
#define BIT_MASK_RFE_SEL_AFE_SDM 0xf
#define BIT_RFE_SEL_AFE_SDM(x) (((x) & BIT_MASK_RFE_SEL_AFE_SDM) << BIT_SHIFT_RFE_SEL_AFE_SDM)

#define BIT_CK320M_AFE_EN_8710C BIT(19)
#define BIT_CK5M_EN_8710C BIT(18)
#define BIT_CK320M_EN_8710C BIT(17)
#define BIT_REG_FREF_EDGE_8710C BIT(16)
#define BIT_CK5M_EN_8710C BIT(15)
#define BIT_REG_CP_OFFSET_8710C BIT(14)

#define BIT_SHIFT_REG_RS_SET 11
#define BIT_MASK_REG_RS_SET 0x7
#define BIT_REG_RS_SET(x) (((x) & BIT_MASK_REG_RS_SET) << BIT_SHIFT_REG_RS_SET)


#define BIT_SHIFT_REG_R3_SET 8
#define BIT_MASK_REG_R3_SET 0x7
#define BIT_REG_R3_SET(x) (((x) & BIT_MASK_REG_R3_SET) << BIT_SHIFT_REG_R3_SET)


#define BIT_SHIFT_REG_CS_SET 6
#define BIT_MASK_REG_CS_SET 0x3
#define BIT_REG_CS_SET(x) (((x) & BIT_MASK_REG_CS_SET) << BIT_SHIFT_REG_CS_SET)


#define BIT_SHIFT_REG_CP_SET 4
#define BIT_MASK_REG_CP_SET 0x3
#define BIT_REG_CP_SET(x) (((x) & BIT_MASK_REG_CP_SET) << BIT_SHIFT_REG_CP_SET)


#define BIT_SHIFT_REG_C3_SET 2
#define BIT_MASK_REG_C3_SET 0x3
#define BIT_REG_C3_SET(x) (((x) & BIT_MASK_REG_C3_SET) << BIT_SHIFT_REG_C3_SET)

#define BIT_REG_CK320_SEL_8710C BIT(1)
#define BIT_REG_DOGENB_8710C BIT(0)

//2 REG_WL_AFE_CTRL2

#define BIT_SHIFT_CK320M_PS 30
#define BIT_MASK_CK320M_PS 0x3
#define BIT_CK320M_PS(x) (((x) & BIT_MASK_CK320M_PS) << BIT_SHIFT_CK320M_PS)


#define BIT_SHIFT_REG_CP_IOFFSET 25
#define BIT_MASK_REG_CP_IOFFSET 0x1f
#define BIT_REG_CP_IOFFSET(x) (((x) & BIT_MASK_REG_CP_IOFFSET) << BIT_SHIFT_REG_CP_IOFFSET)


#define BIT_SHIFT_DIV_SBRB 23
#define BIT_MASK_DIV_SBRB 0x3
#define BIT_DIV_SBRB(x) (((x) & BIT_MASK_DIV_SBRB) << BIT_SHIFT_DIV_SBRB)


#define BIT_SHIFT_DITHER 19
#define BIT_MASK_DITHER 0xf
#define BIT_DITHER(x) (((x) & BIT_MASK_DITHER) << BIT_SHIFT_DITHER)


#define BIT_SHIFT_F0N 16
#define BIT_MASK_F0N 0x7
#define BIT_F0N(x) (((x) & BIT_MASK_F0N) << BIT_SHIFT_F0N)


#define BIT_SHIFT_F0F 3
#define BIT_MASK_F0F 0x1fff
#define BIT_F0F(x) (((x) & BIT_MASK_F0F) << BIT_SHIFT_F0F)


#define BIT_SHIFT_DIVN 0
#define BIT_MASK_DIVN 0x7
#define BIT_DIVN(x) (((x) & BIT_MASK_DIVN) << BIT_SHIFT_DIVN)

#endif //#ifndef __HAL_COMMON_REG_H__


//2 REG_WL_AFE_CTRL3

#define BIT_SHIFT_LDO_VOLT_SEL 8
#define BIT_MASK_LDO_VOLT_SEL 0x3
#define BIT_LDO_VOLT_SEL(x) (((x) & BIT_MASK_LDO_VOLT_SEL) << BIT_SHIFT_LDO_VOLT_SEL)

#define BIT_LDO_SEL_8710C BIT(7)
#define BIT_SEL_8715_LUT_8710C BIT(6)
#define BIT_ORDER_SDM_8710C BIT(5)

#define BIT_SHIFT_S 3
#define BIT_MASK_S 0x3
#define BIT_S(x) (((x) & BIT_MASK_S) << BIT_SHIFT_S)

#define BIT_GPO_8710C BIT(2)
#define BIT_GPE_8710C BIT(1)
#define BIT_REG_CP_IDOUBLE_8710C BIT(0)

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

#ifndef __HAL_COMMON_REG_H__

//2 REG_WL_PIN_FUNC_CTRL0

#define BIT_SHIFT_WL_DBG_SEL 24
#define BIT_MASK_WL_DBG_SEL 0xff
#define BIT_WL_DBG_SEL(x) (((x) & BIT_MASK_WL_DBG_SEL) << BIT_SHIFT_WL_DBG_SEL)

#define BIT_WL_LED0DIS_8710C BIT(7)
#define BIT_WL_LED0PL_8710C BIT(4)
#define BIT_WL_LED0SV_8710C BIT(3)

#define BIT_SHIFT_WL_LED0CM 0
#define BIT_MASK_WL_LED0CM 0x7
#define BIT_WL_LED0CM(x) (((x) & BIT_MASK_WL_LED0CM) << BIT_SHIFT_WL_LED0CM)


//2 REG_WL_PIN_FUNC_CTRL1
#define BIT_BB2_BT_CTRL_SEL_8710C BIT(26)
#define BIT_BB1_BT_CTRL_SEL_8710C BIT(25)
#define BIT_BB0_BT_CTRL_SEL_8710C BIT(24)

#define BIT_SHIFT_BTMODE 17
#define BIT_MASK_BTMODE 0x3
#define BIT_BTMODE(x) (((x) & BIT_MASK_BTMODE) << BIT_SHIFT_BTMODE)

#define BIT_ENBT_8710C BIT(16)
#define BIT_SW_CTRL_DATA_8710C BIT(13)
#define BIT_BB2_CTRL_SEL_8710C BIT(12)
#define BIT_SW_CTRL_DATA_8710C BIT(11)
#define BIT_BB1_CTRL_SEL_8710C BIT(10)
#define BIT_SW_CTRL_DATA_8710C BIT(9)
#define BIT_BB0_CTRL_SEL_8710C BIT(8)
#define BIT_SW_DPDT2_SEL_DATA_8710C BIT(5)
#define BIT_DTDP2_MUX_SEL_8710C BIT(4)
#define BIT_SW_DPDT1_SEL_DATA_8710C BIT(3)
#define BIT_DTDP1_MUX_SEL_8710C BIT(2)
#define BIT_SW_DPDT0_SEL_DATA_8710C BIT(1)
#define BIT_DTDP0_MUX_SEL_8710C BIT(0)

#endif //#ifndef __HAL_COMMON_REG_H__

//2 REG_RSVD

//2 REG_RSVD

//2 REG_WL_PMC_IMR
#define BIT_WLMCU_ERR_MSK_8710C BIT(29)
#define BIT_EVTQ_DONE_MSK_8710C BIT(28)
#define BIT_EVTQ_START_MSK_8710C BIT(27)
#define BIT_FWMSG_MSK_8710C BIT(26)
#define BIT_HCPWM2_MSK_8710C BIT(25)
#define BIT_HCPWM_MSK_8710C BIT(24)
#define BIT_RXFF_FULL_MSK_8710C BIT(23)
#define BIT_RDE_ERR_MSK_8710C BIT(22)
#define BIT_TDE_ERR_MSK_8710C BIT(21)
#define BIT_TXBCN0_ERR_MSK_8710C BIT(20)
#define BIT_TXBCN0_OK_MSK_8710C BIT(19)
#define BIT_TXFF_FIFO_MSK_8710C BIT(18)
#define BIT_TSF_BIT32_TOGGLE_MSK_8710C BIT(17)
#define BIT_TIMEOUT2_MSK_8710C BIT(16)
#define BIT_TIMEOUT1_MSK_8710C BIT(15)
#define BIT_TIMEOUT0_MSK_8710C BIT(14)
#define BIT_CTWEND_MSK_8710C BIT(13)
#define BIT_DWWIN_END_MSK_8710C BIT(12)
#define BIT_ATIMEND1_MSK_8710C BIT(11)
#define BIT_ATIMEND0_MSK_8710C BIT(10)
#define BIT_BCNERLY9_MSK_8710C BIT(9)
#define BIT_BCNERLY8_MSK_8710C BIT(8)
#define BIT_BCNERLY7_MSK_8710C BIT(7)
#define BIT_BCNERLY6_MSK_8710C BIT(6)
#define BIT_BCNERLY5_MSK_8710C BIT(5)
#define BIT_BCNERLY4_MSK_8710C BIT(4)
#define BIT_BCNERLY3_MSK_8710C BIT(3)
#define BIT_BCNERLY2_MSK_8710C BIT(2)
#define BIT_BCNERLY1_MSK_8710C BIT(1)
#define BIT_BCNERLY0_MSK_8710C BIT(0)

//2 REG_WL_PMC_ISR
#define BIT_WLMCU_ERR_INT_8710C BIT(29)
#define BIT_EVTQ_DONE_INT_8710C BIT(28)
#define BIT_EVTQ_START_INT_8710C BIT(27)
#define BIT_FWMSG_INT_8710C BIT(26)
#define BIT_HCPWM2_INT_8710C BIT(25)
#define BIT_HCPWM_INT_8710C BIT(24)
#define BIT_RXFF_FULL_INT_8710C BIT(23)
#define BIT_RDE_ERR_INT_8710C BIT(22)
#define BIT_TDE_ERR_INT_8710C BIT(21)
#define BIT_TXBCN0_ERR_INT_8710C BIT(20)
#define BIT_TXBCN0_OK_INT_8710C BIT(19)
#define BIT_TXFF_FIFO_INT_8710C BIT(18)
#define BIT_TSF_BIT32_TOGGLE_INT_8710C BIT(17)
#define BIT_TIMEOUT2_INT_8710C BIT(16)
#define BIT_TIMEOUT1_INT_8710C BIT(15)
#define BIT_TIMEOUT0_INT_8710C BIT(14)
#define BIT_CTWEND_INT_8710C BIT(13)
#define BIT_DWWIN_END_INT_8710C BIT(12)
#define BIT_ATIMEND1_INT_8710C BIT(11)
#define BIT_ATIMEND0_INT_8710C BIT(10)
#define BIT_BCNERLY9_INT_8710C BIT(9)
#define BIT_BCNERLY8_INT_8710C BIT(8)
#define BIT_BCNERLY7_INT_8710C BIT(7)
#define BIT_BCNERLY6_INT_8710C BIT(6)
#define BIT_BCNERLY5_INT_8710C BIT(5)
#define BIT_BCNERLY4_INT_8710C BIT(4)
#define BIT_BCNERLY3_INT_8710C BIT(3)
#define BIT_BCNERLY2_INT_8710C BIT(2)
#define BIT_BCNERLY1_INT_8710C BIT(1)
#define BIT_BCNERLY0_INT_8710C BIT(0)

//2 REG_RSVD

//2 REG_RPWM_V1

#define BIT_SHIFT_RPWM2_V1 16
#define BIT_MASK_RPWM2_V1 0xffff
#define BIT_RPWM2_V1(x) (((x) & BIT_MASK_RPWM2_V1) << BIT_SHIFT_RPWM2_V1)


#define BIT_SHIFT_RPWM_V1 8
#define BIT_MASK_RPWM_V1 0xff
#define BIT_RPWM_V1(x) (((x) & BIT_MASK_RPWM_V1) << BIT_SHIFT_RPWM_V1)


//2 REG_8051FW_CTRL_V1
#define BIT_FEN_CPUEN_V1_8710C BIT(24)
#define BIT_CPRST_8710C BIT(23)
#define BIT_ROM_DLEN_8710C BIT(19)

#define BIT_SHIFT_ROM_PGE 16
#define BIT_MASK_ROM_PGE 0x7
#define BIT_ROM_PGE(x) (((x) & BIT_MASK_ROM_PGE) << BIT_SHIFT_ROM_PGE)


#define BIT_SHIFT_MCUFWDL_DMA_2K_SEL 14
#define BIT_MASK_MCUFWDL_DMA_2K_SEL 0x3
#define BIT_MCUFWDL_DMA_2K_SEL(x) (((x) & BIT_MASK_MCUFWDL_DMA_2K_SEL) << BIT_SHIFT_MCUFWDL_DMA_2K_SEL)

#define BIT_MCUFWDL_DMA_EN_8710C BIT(13)
#define BIT_FWDL_RSVDPAGE_RDY_8710C BIT(12)
#define BIT_R_8051_ROMDLFW_EN_8710C BIT(11)
#define BIT_R_8051_INIT_RDY_8710C BIT(10)
#define BIT_R_8051_GAT_8710C BIT(8)
#define BIT_RAM_DL_SEL_8710C BIT(7)
#define BIT_WINTINI_RDY_8710C BIT(6)
#define BIT_RFINI_RDY_8710C BIT(5)
#define BIT_BBINI_RDY_8710C BIT(4)
#define BIT_MACINI_RDY_8710C BIT(3)
#define BIT_FWDL_CHK_RPT_8710C BIT(2)
#define BIT_MCUFWDL_RDY_8710C BIT(1)
#define BIT_MCUFWDL_EN_8710C BIT(0)

//2 REG_8051FW_TST_CONFIG

#define BIT_SHIFT_SYM_8051CODE_OFS 16
#define BIT_MASK_SYM_8051CODE_OFS 0xffff
#define BIT_SYM_8051CODE_OFS(x) (((x) & BIT_MASK_SYM_8051CODE_OFS) << BIT_SHIFT_SYM_8051CODE_OFS)


#define BIT_SHIFT_SYM_MCUTST_LBKIDX 0
#define BIT_MASK_SYM_MCUTST_LBKIDX 0xffff
#define BIT_SYM_MCUTST_LBKIDX(x) (((x) & BIT_MASK_SYM_MCUTST_LBKIDX) << BIT_SHIFT_SYM_MCUTST_LBKIDX)


//2 REG_C2H_EVENT_1

#define BIT_SHIFT_SYM_C2H_EVT_1 0
#define BIT_MASK_SYM_C2H_EVT_1 0xffffffffL
#define BIT_SYM_C2H_EVT_1(x) (((x) & BIT_MASK_SYM_C2H_EVT_1) << BIT_SHIFT_SYM_C2H_EVT_1)


//2 REG_USB_HOST_INDIRECT_DATA

#define BIT_SHIFT_USB_HOST_INDIRECT_DATA 0
#define BIT_MASK_USB_HOST_INDIRECT_DATA 0xffffffffL
#define BIT_USB_HOST_INDIRECT_DATA(x) (((x) & BIT_MASK_USB_HOST_INDIRECT_DATA) << BIT_SHIFT_USB_HOST_INDIRECT_DATA)


//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_BIST_RPT

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_RSVD

//2 REG_WL_STATUS
#define BIT_CLK_TSF_IS32K_8710C BIT(8)
#define BIT_MCLK_VLD_8710C BIT(0)

//2 REG_WL_PMCFSM_MON

#define BIT_SHIFT_WL_PMCFSM_SEL 24
#define BIT_MASK_WL_PMCFSM_SEL 0xf
#define BIT_WL_PMCFSM_SEL(x) (((x) & BIT_MASK_WL_PMCFSM_SEL) << BIT_SHIFT_WL_PMCFSM_SEL)

#define BIT_WL_PMCFSM_UPD_8710C BIT(16)
#define BIT_WL_LPS_8710C BIT(14)
#define BIT_WL_POF_8710C BIT(13)
#define BIT_WL_PON_8710C BIT(12)
#define BIT_WLPST_IS_LPS_8710C BIT(10)

#define BIT_SHIFT_WLPST 8
#define BIT_MASK_WLPST 0x3
#define BIT_WLPST(x) (((x) & BIT_MASK_WLPST) << BIT_SHIFT_WLPST)

#define BIT_WRMSK_8710C BIT(7)

#define BIT_SHIFT_PMC_STATE 0
#define BIT_MASK_PMC_STATE 0x7f
#define BIT_PMC_STATE(x) (((x) & BIT_MASK_PMC_STATE) << BIT_SHIFT_PMC_STATE)


//2 REG_USB_HOST_INDIRECT_ADDR

#define BIT_SHIFT_USB_HOST_INDIRECT_ADDR 0
#define BIT_MASK_USB_HOST_INDIRECT_ADDR 0xffffffffL
#define BIT_USB_HOST_INDIRECT_ADDR(x) (((x) & BIT_MASK_USB_HOST_INDIRECT_ADDR) << BIT_SHIFT_USB_HOST_INDIRECT_ADDR)


//2 REG_RSVD

#define BIT_SHIFT_CHIP_ID 0
#define BIT_MASK_CHIP_ID 0xff
#define BIT_CHIP_ID(x) (((x) & BIT_MASK_CHIP_ID) << BIT_SHIFT_CHIP_ID)


//2 REG_CR

#define BIT_SHIFT_LBMODE 24
#define BIT_MASK_LBMODE 0x1f
#define BIT_LBMODE(x) (((x) & BIT_MASK_LBMODE) << BIT_SHIFT_LBMODE)


#define BIT_SHIFT_NETYPE1 18
#define BIT_MASK_NETYPE1 0x3
#define BIT_NETYPE1(x) (((x) & BIT_MASK_NETYPE1) << BIT_SHIFT_NETYPE1)


#define BIT_SHIFT_NETYPE0 16
#define BIT_MASK_NETYPE0 0x3
#define BIT_NETYPE0(x) (((x) & BIT_MASK_NETYPE0) << BIT_SHIFT_NETYPE0)

#define BIT_PTA_I2C_MBOX_EN_8710C BIT(12)
#define BIT_32K_CAL_TMR_EN_8710C BIT(10)
#define BIT_MAC_SEC_EN_8710C BIT(9)
#define BIT_ENSWBCN_8710C BIT(8)
#define BIT_MACRXEN_8710C BIT(7)
#define BIT_MACTXEN_8710C BIT(6)
#define BIT_SCHEDULE_EN_8710C BIT(5)
#define BIT_PROTOCOL_EN_8710C BIT(4)
#define BIT_RXDMA_EN_8710C BIT(3)
#define BIT_TXDMA_EN_8710C BIT(2)
#define BIT_HCI_RXDMA_EN_8710C BIT(1)
#define BIT_HCI_TXDMA_EN_8710C BIT(0)

//2 REG_NOT_VALID

//2 REG_PKT_BUFF_ACCESS_CTRL

#define BIT_SHIFT_PKT_BUFF_ACCESS_CTRL 0
#define BIT_MASK_PKT_BUFF_ACCESS_CTRL 0xff
#define BIT_PKT_BUFF_ACCESS_CTRL(x) (((x) & BIT_MASK_PKT_BUFF_ACCESS_CTRL) << BIT_SHIFT_PKT_BUFF_ACCESS_CTRL)


//2 REG_NOT_VALID
#define BIT_SRAM_SEL_8710C BIT(0)

//2 REG_PBP

#define BIT_SHIFT_PSTX 4
#define BIT_MASK_PSTX 0xf
#define BIT_PSTX(x) (((x) & BIT_MASK_PSTX) << BIT_SHIFT_PSTX)


#define BIT_SHIFT_PSRX 0
#define BIT_MASK_PSRX 0xf
#define BIT_PSRX(x) (((x) & BIT_MASK_PSRX) << BIT_SHIFT_PSRX)


//2 REG_TSF_CLK_STATE

//2 REG_TXDMA_PQ_MAP

#define BIT_SHIFT_TXDMA_CMQ_MAP 16
#define BIT_MASK_TXDMA_CMQ_MAP 0x3
#define BIT_TXDMA_CMQ_MAP(x) (((x) & BIT_MASK_TXDMA_CMQ_MAP) << BIT_SHIFT_TXDMA_CMQ_MAP)


#define BIT_SHIFT_TXDMA_HIQ_MAP 14
#define BIT_MASK_TXDMA_HIQ_MAP 0x3
#define BIT_TXDMA_HIQ_MAP(x) (((x) & BIT_MASK_TXDMA_HIQ_MAP) << BIT_SHIFT_TXDMA_HIQ_MAP)


#define BIT_SHIFT_TXDMA_MGQ_MAP 12
#define BIT_MASK_TXDMA_MGQ_MAP 0x3
#define BIT_TXDMA_MGQ_MAP(x) (((x) & BIT_MASK_TXDMA_MGQ_MAP) << BIT_SHIFT_TXDMA_MGQ_MAP)


#define BIT_SHIFT_TXDMA_BKQ_MAP 10
#define BIT_MASK_TXDMA_BKQ_MAP 0x3
#define BIT_TXDMA_BKQ_MAP(x) (((x) & BIT_MASK_TXDMA_BKQ_MAP) << BIT_SHIFT_TXDMA_BKQ_MAP)


#define BIT_SHIFT_TXDMA_BEQ_MAP 8
#define BIT_MASK_TXDMA_BEQ_MAP 0x3
#define BIT_TXDMA_BEQ_MAP(x) (((x) & BIT_MASK_TXDMA_BEQ_MAP) << BIT_SHIFT_TXDMA_BEQ_MAP)


#define BIT_SHIFT_TXDMA_VIQ_MAP 6
#define BIT_MASK_TXDMA_VIQ_MAP 0x3
#define BIT_TXDMA_VIQ_MAP(x) (((x) & BIT_MASK_TXDMA_VIQ_MAP) << BIT_SHIFT_TXDMA_VIQ_MAP)


#define BIT_SHIFT_TXDMA_VOQ_MAP 4
#define BIT_MASK_TXDMA_VOQ_MAP 0x3
#define BIT_TXDMA_VOQ_MAP(x) (((x) & BIT_MASK_TXDMA_VOQ_MAP) << BIT_SHIFT_TXDMA_VOQ_MAP)

#define BIT_RXDMA_AGG_EN_8710C BIT(2)
#define BIT_RXSHFT_EN_8710C BIT(1)
#define BIT_RXDMA_ARBBW_EN_8710C BIT(0)

//2 REG_TRXFF_BNDY

#define BIT_SHIFT_RXFF0_BNDY 16
#define BIT_MASK_RXFF0_BNDY 0xffff
#define BIT_RXFF0_BNDY(x) (((x) & BIT_MASK_RXFF0_BNDY) << BIT_SHIFT_RXFF0_BNDY)


#define BIT_SHIFT_RXFFOVFL_RSV 8
#define BIT_MASK_RXFFOVFL_RSV 0xf
#define BIT_RXFFOVFL_RSV(x) (((x) & BIT_MASK_RXFFOVFL_RSV) << BIT_SHIFT_RXFFOVFL_RSV)


#define BIT_SHIFT_TXPKTBUF_PGBNDY 0
#define BIT_MASK_TXPKTBUF_PGBNDY 0xff
#define BIT_TXPKTBUF_PGBNDY(x) (((x) & BIT_MASK_TXPKTBUF_PGBNDY) << BIT_SHIFT_TXPKTBUF_PGBNDY)


//2 REG_PTA_I2C_MBOX

#define BIT_SHIFT_I2C_M_STATUS 8
#define BIT_MASK_I2C_M_STATUS 0xf
#define BIT_I2C_M_STATUS(x) (((x) & BIT_MASK_I2C_M_STATUS) << BIT_SHIFT_I2C_M_STATUS)


#define BIT_SHIFT_I2C_M_BUS_GNT 4
#define BIT_MASK_I2C_M_BUS_GNT 0x7
#define BIT_I2C_M_BUS_GNT(x) (((x) & BIT_MASK_I2C_M_BUS_GNT) << BIT_SHIFT_I2C_M_BUS_GNT)

#define BIT_I2C_GNT_FW_8710C BIT(3)

#define BIT_SHIFT_I2C_DATA_RATE 1
#define BIT_MASK_I2C_DATA_RATE 0x3
#define BIT_I2C_DATA_RATE(x) (((x) & BIT_MASK_I2C_DATA_RATE) << BIT_SHIFT_I2C_DATA_RATE)

#define BIT_I2C_SW_CONTROL_UNLOCK_8710C BIT(0)

//2 REG_RXFF_PTR

#define BIT_SHIFT_RXFF0_RDPTR 16
#define BIT_MASK_RXFF0_RDPTR 0xffff
#define BIT_RXFF0_RDPTR(x) (((x) & BIT_MASK_RXFF0_RDPTR) << BIT_SHIFT_RXFF0_RDPTR)


#define BIT_SHIFT_RXFF0_WTPTR 0
#define BIT_MASK_RXFF0_WTPTR 0xffff
#define BIT_RXFF0_WTPTR(x) (((x) & BIT_MASK_RXFF0_WTPTR) << BIT_SHIFT_RXFF0_WTPTR)


//2 REG_FEIMR
#define BIT_TBTTINT_P1_MSK_8710C BIT(13)
#define BIT_LTE_COEX_EN_8710C BIT(3)
#define BIT_REG_MAILBOX_TO_I2C_INT_8710C BIT(2)
#define BIT_TRPC_TO_INT_EN_8710C BIT(1)
#define BIT_BIT_RPC_O_T_INT_EN_8710C BIT(0)

//2 REG_FEISR
#define BIT_TBTTINT_P1_INT_8710C BIT(13)
#define BIT_LTE_COEX_8710C BIT(3)
#define BIT_MAILBOX_TO_I2C_8710C BIT(2)
#define BIT_TRPC_TO_INT_8710C BIT(1)
#define BIT_RPC_O_T_INT_8710C BIT(0)

//2 REG_NOT_VALID

//2 REG_CPWM
#define BIT_CPWM_TOGGLING_8710C BIT(31)

#define BIT_SHIFT_CPWM_MOD 24
#define BIT_MASK_CPWM_MOD 0x7f
#define BIT_CPWM_MOD(x) (((x) & BIT_MASK_CPWM_MOD) << BIT_SHIFT_CPWM_MOD)


//2 REG_FWIMR
#define BIT_PCIE_BCNDMAERR_INT_EN_8710C BIT(31)
#define BIT_SOUND_DONE_MSK_8710C BIT(30)
#define BIT_TRY_DONE_MSK_8710C BIT(29)
#define BIT_TXRPT_CNT_FULL_MSK_8710C BIT(28)
#define BIT_WLACTOFF_INT_EN_8710C BIT(27)
#define BIT_WLACTON_INT_EN_8710C BIT(26)
#define BIT_TXPKTIN_INT_EN_8710C BIT(25)
#define BIT_TXBCNOK_MSK_8710C BIT(24)
#define BIT_TXBCNERR_MSK_8710C BIT(23)
#define BIT_RX_UMD0_EN_8710C BIT(22)
#define BIT_RX_UMD1_EN_8710C BIT(21)
#define BIT_RX_BMD0_EN_8710C BIT(20)
#define BIT_RX_BMD1_EN_8710C BIT(19)
#define BIT_BCN_RX_INT_EN_8710C BIT(18)
#define BIT_TBTTINT_MSK_8710C BIT(17)
#define BIT_BCNERLY_MSK_8710C BIT(16)
#define BIT_BCNDMA7_MSK_8710C BIT(15)
#define BIT_BCNDMA6_MSK_8710C BIT(14)
#define BIT_BCNDMA5_MSK_8710C BIT(13)
#define BIT_BCNDMA4_MSK_8710C BIT(12)
#define BIT_BCNDMA3_MSK_8710C BIT(11)
#define BIT_BCNDMA2_MSK_8710C BIT(10)
#define BIT_BCNDMA1_MSK_8710C BIT(9)
#define BIT_BCNDMA0_MSK_8710C BIT(8)
#define BIT_LP_STBY_MSK_8710C BIT(7)
#define BIT_CTWENDINT_MSK_8710C BIT(6)
#define BIT_HRCV_MSK_8710C BIT(5)
#define BIT_H2CCMD_MSK_8710C BIT(4)
#define BIT_RXDONE_MSK_8710C BIT(3)
#define BIT_ERRORHDL_MSK_8710C BIT(2)
#define BIT_TXCCX_MSK_FW_8710C BIT(1)
#define BIT_TXCLOSE_MSK_8710C BIT(0)

//2 REG_FWISR
#define BIT_PCIE_BCNDMAERR_INT_8710C BIT(31)
#define BIT_SOUND_DONE_INT_8710C BIT(30)
#define BIT_TRY_DONE_INT_8710C BIT(29)
#define BIT_TXRPT_CNT_FULL_INT_8710C BIT(28)
#define BIT_WLACTOFF_INT_8710C BIT(27)
#define BIT_WLACTON_INT_8710C BIT(26)
#define BIT_TXPKTIN_INT_8710C BIT(25)
#define BIT_TXBCNOK_INT_8710C BIT(24)
#define BIT_TXBCNERR_INT_8710C BIT(23)
#define BIT_RX_UMD0_INT_8710C BIT(22)
#define BIT_RX_UMD1_INT_8710C BIT(21)
#define BIT_RX_BMD0_INT_8710C BIT(20)
#define BIT_RX_BMD1_INT_8710C BIT(19)
#define BIT_BCN_RX_INT_INT_8710C BIT(18)
#define BIT_TBTTINT_INT_8710C BIT(17)
#define BIT_BCNERLY_INT_8710C BIT(16)
#define BIT_BCNDMA7_INT_8710C BIT(15)
#define BIT_BCNDMA6_INT_8710C BIT(14)
#define BIT_BCNDMA5_INT_8710C BIT(13)
#define BIT_BCNDMA4_INT_8710C BIT(12)
#define BIT_BCNDMA3_INT_8710C BIT(11)
#define BIT_BCNDMA2_INT_8710C BIT(10)
#define BIT_BCNDMA1_INT_8710C BIT(9)
#define BIT_BCNDMA0_INT_8710C BIT(8)
#define BIT_LP_STBY_INT_8710C BIT(7)
#define BIT_CTWENDINT_INT_8710C BIT(6)
#define BIT_HRCV_INT_8710C BIT(5)
#define BIT_H2CCMD_INT_8710C BIT(4)
#define BIT_RXDONE_INT_8710C BIT(3)
#define BIT_ERRORHDL_INT_8710C BIT(2)
#define BIT_TXCCX_INT_8710C BIT(1)
#define BIT_TXCLOSE_INT_8710C BIT(0)

//2 REG_FTIMR
#define BIT_GTINT6_MSK_8710C BIT(31)
#define BIT_TX_NULL1_INT_MSK_8710C BIT(30)
#define BIT_TX_NULL0_INT_MSK_8710C BIT(29)
#define BIT_MTI_BCNIVLEAR_INT_MSK_8710C BIT(28)
#define BIT_ATIMINT_MSK_8710C BIT(27)
#define BIT_WWLAN_INT_EN_8710C BIT(26)
#define BIT_C2H_W_READY_EN_8710C BIT(25)
#define BIT_TRL_MTR_EN_8710C BIT(24)
#define BIT_CLR_PS_STATUS_MSK_8710C BIT(23)
#define BIT_RETRIEVE_BUFFERED_MSK_8710C BIT(22)
#define BIT_RPWMINT2_MSK_8710C BIT(21)
#define BIT_TSF_BIT32_TOGGLE_MSK_V1_8710C BIT(20)
#define BIT_TRIGGER_PKT_MSK_8710C BIT(19)
#define BIT_FW_BTCMD_INTMSK_8710C BIT(18)
#define BIT_P2P_RFOFF_INTMSK_8710C BIT(17)
#define BIT_P2P_RFON_INTMSK_8710C BIT(16)
#define BIT_TXBCN1ERR_MSK_8710C BIT(15)
#define BIT_TXBCN1OK_MSK_8710C BIT(14)
#define BIT_FT_ATIMEND_EMSK_8710C BIT(13)
#define BIT_BCNDMAINT_EMSK_8710C BIT(12)
#define BIT_GTINT5_MSK_8710C BIT(11)
#define BIT_EOSP_INT_MSK_8710C BIT(10)
#define BIT_RX_BCN_E_MSK_8710C BIT(9)
#define BIT_RPWM_INT_EN_8710C BIT(8)
#define BIT_PSTIMER_MSK_8710C BIT(7)
//#define BIT_TIMEOUT1_MSK_8710C BIT(6)
//#define BIT_TIMEOUT0_MSK_8710C BIT(5)
#define BIT_FT_GTINT4_MSK_8710C BIT(4)
#define BIT_FT_GTINT3_MSK_8710C BIT(3)
#define BIT_GTINT2_MSK_8710C BIT(2)
#define BIT_GTINT1_MSK_8710C BIT(1)
#define BIT_GTINT0_MSK_8710C BIT(0)

//2 REG_FTISR
#define BIT_GT6INT_8710C BIT(31)
#define BIT_TX_NULL1_INT_8710C BIT(30)
#define BIT_TX_NULL0_INT_8710C BIT(29)
#define BIT_MTI_BCNIVLEAR_INT_8710C BIT(28)
#define BIT_ATIM_INT_8710C BIT(27)
#define BIT_WWLAN_INT_8710C BIT(26)
#define BIT_C2H_W_READY_8710C BIT(25)
#define BIT_TRL_MTR_INT_8710C BIT(24)
#define BIT_CLR_PS_STATUS_8710C BIT(23)
#define BIT_RETRIEVE_BUFFERED_INT_8710C BIT(22)
#define BIT_RPWM2INT_8710C BIT(21)
#define BIT_TSF_BIT32_TOGGLE_INT_V1_8710C BIT(20)
#define BIT_TRIGGER_PKT_8710C BIT(19)
#define BIT_FW_BTCMD_INT_8710C BIT(18)
#define BIT_P2P_RFOFF_INT_8710C BIT(17)
#define BIT_P2P_RFON_INT_8710C BIT(16)
#define BIT_TX_BCN1ERR_INT_8710C BIT(15)
#define BIT_TX_BCN1OK_INT_8710C BIT(14)
#define BIT_FT_ATIMEND_E_8710C BIT(13)
#define BIT_BCNDMAINT_E_V1_8710C BIT(12)
#define BIT_GT5INT_8710C BIT(11)
#define BIT_EOSP_INT_8710C BIT(10)
#define BIT_RX_BCN_E_INT_8710C BIT(9)
#define BIT_RPWMINT_8710C BIT(8)
#define BIT_PSTIMER_INT_8710C BIT(7)
//#define BIT_TIMEOUT1_INT_8710C BIT(6)
//#define BIT_TIMEOUT0_INT_8710C BIT(5)
#define BIT_FT_GT4INT_8710C BIT(4)
#define BIT_FT_GT3INT_8710C BIT(3)
#define BIT_GT2INT_8710C BIT(2)
#define BIT_GT1INT_8710C BIT(1)
#define BIT_GT0INT_8710C BIT(0)

//2 REG_PKTBUF_DBG_CTRL

#define BIT_SHIFT_PKTBUF_WRITE_EN 24
#define BIT_MASK_PKTBUF_WRITE_EN 0xff
#define BIT_PKTBUF_WRITE_EN(x) (((x) & BIT_MASK_PKTBUF_WRITE_EN) << BIT_SHIFT_PKTBUF_WRITE_EN)

#define BIT_TXPKT_BUF_READ_EN_8710C BIT(23)
#define BIT_TXRPT_BUF_READ_EN_8710C BIT(20)
#define BIT_RXPKT_BUF_READ_EN_8710C BIT(16)

#define BIT_SHIFT_PKTBUF_ADDR 0
#define BIT_MASK_PKTBUF_ADDR 0x1fff
#define BIT_PKTBUF_ADDR(x) (((x) & BIT_MASK_PKTBUF_ADDR) << BIT_SHIFT_PKTBUF_ADDR)


//2 REG_PKTBUF_DBG_DATA_L

#define BIT_SHIFT_PKTBUF_DBG_DATA_L 0
#define BIT_MASK_PKTBUF_DBG_DATA_L 0xffffffffL
#define BIT_PKTBUF_DBG_DATA_L(x) (((x) & BIT_MASK_PKTBUF_DBG_DATA_L) << BIT_SHIFT_PKTBUF_DBG_DATA_L)


//2 REG_PKTBUF_DBG_DATA_H

#define BIT_SHIFT_PKTBUF_DBG_DATA__H 0
#define BIT_MASK_PKTBUF_DBG_DATA__H 0xffffffffL
#define BIT_PKTBUF_DBG_DATA__H(x) (((x) & BIT_MASK_PKTBUF_DBG_DATA__H) << BIT_SHIFT_PKTBUF_DBG_DATA__H)


//2 REG_CPWM2

#define BIT_SHIFT_L0S_TO_RCVY_NUM 16
#define BIT_MASK_L0S_TO_RCVY_NUM 0xff
#define BIT_L0S_TO_RCVY_NUM_8710C(x) (((x) & BIT_MASK_L0S_TO_RCVY_NUM) << BIT_SHIFT_L0S_TO_RCVY_NUM)

#define BIT_CPWM2_TOGGLING_8710C BIT(15)

#define BIT_SHIFT_CPWM2_MOD 0
#define BIT_MASK_CPWM2_MOD 0x7fff
#define BIT_CPWM2_MOD(x) (((x) & BIT_MASK_CPWM2_MOD) << BIT_SHIFT_CPWM2_MOD)


//2 REG_NOT_VALID

//2 REG_TC0_CTRL
#define BIT_TC0INT_EN_8710C BIT(26)
#define BIT_TC0MODE_8710C BIT(25)
#define BIT_TC0EN_8710C BIT(24)

#define BIT_SHIFT_TC0DATA 0
#define BIT_MASK_TC0DATA 0xffffff
#define BIT_TC0DATA(x) (((x) & BIT_MASK_TC0DATA) << BIT_SHIFT_TC0DATA)


//2 REG_TC1_CTRL
#define BIT_TC1INT_EN_8710C BIT(26)
#define BIT_TC1MODE_8710C BIT(25)
#define BIT_TC1EN_8710C BIT(24)

#define BIT_SHIFT_TC1DATA 0
#define BIT_MASK_TC1DATA 0xffffff
#define BIT_TC1DATA(x) (((x) & BIT_MASK_TC1DATA) << BIT_SHIFT_TC1DATA)


//2 REG_TC2_CTRL
#define BIT_TC2INT_EN_8710C BIT(26)
#define BIT_TC2MODE_8710C BIT(25)
#define BIT_TC2EN_8710C BIT(24)

#define BIT_SHIFT_TC2DATA 0
#define BIT_MASK_TC2DATA 0xffffff
#define BIT_TC2DATA(x) (((x) & BIT_MASK_TC2DATA) << BIT_SHIFT_TC2DATA)


//2 REG_TC3_CTRL
#define BIT_TC3INT_EN_8710C BIT(26)
#define BIT_TC3MODE_8710C BIT(25)
#define BIT_TC3EN_8710C BIT(24)

#define BIT_SHIFT_TC3DATA 0
#define BIT_MASK_TC3DATA 0xffffff
#define BIT_TC3DATA(x) (((x) & BIT_MASK_TC3DATA) << BIT_SHIFT_TC3DATA)


//2 REG_TC4_CTRL
#define BIT_TC4INT_EN_8710C BIT(26)
#define BIT_TC4MODE_8710C BIT(25)
#define BIT_TC4EN_8710C BIT(24)

#define BIT_SHIFT_TC4DATA 0
#define BIT_MASK_TC4DATA 0xffffff
#define BIT_TC4DATA(x) (((x) & BIT_MASK_TC4DATA) << BIT_SHIFT_TC4DATA)


//2 REG_TCUNIT_BASE

#define BIT_SHIFT_TCUNIT_BASE 0
#define BIT_MASK_TCUNIT_BASE 0x3fff
#define BIT_TCUNIT_BASE(x) (((x) & BIT_MASK_TCUNIT_BASE) << BIT_SHIFT_TCUNIT_BASE)


//2 REG_TC5_CTRL
#define BIT_TC50INT_EN_8710C BIT(26)
#define BIT_TC5MODE_8710C BIT(25)
#define BIT_TC5EN_8710C BIT(24)

#define BIT_SHIFT_TC5DATA 0
#define BIT_MASK_TC5DATA 0xffffff
#define BIT_TC5DATA(x) (((x) & BIT_MASK_TC5DATA) << BIT_SHIFT_TC5DATA)


//2 REG_TC6_CTRL
#define BIT_TC60INT_EN_8710C BIT(26)
#define BIT_TC6MODE_8710C BIT(25)
#define BIT_TC6EN_8710C BIT(24)

#define BIT_SHIFT_TC6DATA 0
#define BIT_MASK_TC6DATA 0xffffff
#define BIT_TC6DATA(x) (((x) & BIT_MASK_TC6DATA) << BIT_SHIFT_TC6DATA)


//2 REG_MBIST_FAIL

#define BIT_SHIFT_8051_MBIST_FAIL 26
#define BIT_MASK_8051_MBIST_FAIL 0x7
#define BIT_8051_MBIST_FAIL(x) (((x) & BIT_MASK_8051_MBIST_FAIL) << BIT_SHIFT_8051_MBIST_FAIL)


#define BIT_SHIFT_USB_MBIST_FAIL 24
#define BIT_MASK_USB_MBIST_FAIL 0x3
#define BIT_USB_MBIST_FAIL(x) (((x) & BIT_MASK_USB_MBIST_FAIL) << BIT_SHIFT_USB_MBIST_FAIL)


#define BIT_SHIFT_PCIE_MBIST_FAIL 16
#define BIT_MASK_PCIE_MBIST_FAIL 0x3f
#define BIT_PCIE_MBIST_FAIL(x) (((x) & BIT_MASK_PCIE_MBIST_FAIL) << BIT_SHIFT_PCIE_MBIST_FAIL)


#define BIT_SHIFT_MAC_MBIST_FAIL 0
#define BIT_MASK_MAC_MBIST_FAIL 0xfff
#define BIT_MAC_MBIST_FAIL(x) (((x) & BIT_MASK_MAC_MBIST_FAIL) << BIT_SHIFT_MAC_MBIST_FAIL)


//2 REG_MBIST_START_PAUSE

#define BIT_SHIFT_8051_MBIST_START_PAUSE 26
#define BIT_MASK_8051_MBIST_START_PAUSE 0x7
#define BIT_8051_MBIST_START_PAUSE(x) (((x) & BIT_MASK_8051_MBIST_START_PAUSE) << BIT_SHIFT_8051_MBIST_START_PAUSE)


#define BIT_SHIFT_USB_MBIST_START_PAUSE 24
#define BIT_MASK_USB_MBIST_START_PAUSE 0x3
#define BIT_USB_MBIST_START_PAUSE(x) (((x) & BIT_MASK_USB_MBIST_START_PAUSE) << BIT_SHIFT_USB_MBIST_START_PAUSE)


#define BIT_SHIFT_PCIE_MBIST_START_PAUSE 16
#define BIT_MASK_PCIE_MBIST_START_PAUSE 0x3f
#define BIT_PCIE_MBIST_START_PAUSE(x) (((x) & BIT_MASK_PCIE_MBIST_START_PAUSE) << BIT_SHIFT_PCIE_MBIST_START_PAUSE)


#define BIT_SHIFT_MAC_MBIST_START_PAUSE 0
#define BIT_MASK_MAC_MBIST_START_PAUSE 0xfff
#define BIT_MAC_MBIST_START_PAUSE(x) (((x) & BIT_MASK_MAC_MBIST_START_PAUSE) << BIT_SHIFT_MAC_MBIST_START_PAUSE)


//2 REG_MBIST_DONE

#define BIT_SHIFT_8051_MBIST_DONE 26
#define BIT_MASK_8051_MBIST_DONE 0x7
#define BIT_8051_MBIST_DONE(x) (((x) & BIT_MASK_8051_MBIST_DONE) << BIT_SHIFT_8051_MBIST_DONE)


#define BIT_SHIFT_USB_MBIST_DONE 24
#define BIT_MASK_USB_MBIST_DONE 0x3
#define BIT_USB_MBIST_DONE(x) (((x) & BIT_MASK_USB_MBIST_DONE) << BIT_SHIFT_USB_MBIST_DONE)


#define BIT_SHIFT_PCIE_MBIST_DONE 16
#define BIT_MASK_PCIE_MBIST_DONE 0x3f
#define BIT_PCIE_MBIST_DONE(x) (((x) & BIT_MASK_PCIE_MBIST_DONE) << BIT_SHIFT_PCIE_MBIST_DONE)


#define BIT_SHIFT_MAC_MBIST_DONE 0
#define BIT_MASK_MAC_MBIST_DONE 0xfff
#define BIT_MAC_MBIST_DONE(x) (((x) & BIT_MASK_MAC_MBIST_DONE) << BIT_SHIFT_MAC_MBIST_DONE)


//2 REG_MBIST_ROM_CRC_DATA

#define BIT_SHIFT_MBIST_ROM_CRC_DATA 0
#define BIT_MASK_MBIST_ROM_CRC_DATA 0xffffffffL
#define BIT_MBIST_ROM_CRC_DATA(x) (((x) & BIT_MASK_MBIST_ROM_CRC_DATA) << BIT_SHIFT_MBIST_ROM_CRC_DATA)


//2 REG_AES_DECRPT_DATA

#define BIT_SHIFT_IPS_CFG_ADDR 0
#define BIT_MASK_IPS_CFG_ADDR 0xff
#define BIT_IPS_CFG_ADDR(x) (((x) & BIT_MASK_IPS_CFG_ADDR) << BIT_SHIFT_IPS_CFG_ADDR)


//2 REG_AES_DECRPT_CFG

#define BIT_SHIFT_IPS_CFG_DATA 0
#define BIT_MASK_IPS_CFG_DATA 0xffffffffL
#define BIT_IPS_CFG_DATA(x) (((x) & BIT_MASK_IPS_CFG_DATA) << BIT_SHIFT_IPS_CFG_DATA)


//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_TMETER
#define BIT_TEMP_VALID_8710C BIT(31)

#define BIT_SHIFT_TEMP_VALUE 24
#define BIT_MASK_TEMP_VALUE 0x3f
#define BIT_TEMP_VALUE(x) (((x) & BIT_MASK_TEMP_VALUE) << BIT_SHIFT_TEMP_VALUE)


#define BIT_SHIFT_REG_TMETER_TIMER 8
#define BIT_MASK_REG_TMETER_TIMER 0xfff
#define BIT_REG_TMETER_TIMER(x) (((x) & BIT_MASK_REG_TMETER_TIMER) << BIT_SHIFT_REG_TMETER_TIMER)


#define BIT_SHIFT_REG_TEMP_DELTA 2
#define BIT_MASK_REG_TEMP_DELTA 0x3f
#define BIT_REG_TEMP_DELTA(x) (((x) & BIT_MASK_REG_TEMP_DELTA) << BIT_SHIFT_REG_TEMP_DELTA)

#define BIT_REG_TMETER_EN_8710C BIT(0)

//2 REG_OSC_32K_CTRL

#define BIT_SHIFT_OSC_32K_CLKGEN_0 16
#define BIT_MASK_OSC_32K_CLKGEN_0 0xffff
#define BIT_OSC_32K_CLKGEN_0(x) (((x) & BIT_MASK_OSC_32K_CLKGEN_0) << BIT_SHIFT_OSC_32K_CLKGEN_0)


#define BIT_SHIFT_OSC_32K_RES_COMP 4
#define BIT_MASK_OSC_32K_RES_COMP 0x3
#define BIT_OSC_32K_RES_COMP(x) (((x) & BIT_MASK_OSC_32K_RES_COMP) << BIT_SHIFT_OSC_32K_RES_COMP)

#define BIT_OSC_32K_OUT_SEL_8710C BIT(3)
#define BIT_POW_CKGEN_8710C BIT(0)

//2 REG_32K_CAL_REG1
#define BIT_CAL_32K_REG_WR_8710C BIT(31)
#define BIT_CAL_32K_DBG_SEL_8710C BIT(22)

#define BIT_SHIFT_CAL_32K_REG_ADDR 16
#define BIT_MASK_CAL_32K_REG_ADDR 0x3f
#define BIT_CAL_32K_REG_ADDR(x) (((x) & BIT_MASK_CAL_32K_REG_ADDR) << BIT_SHIFT_CAL_32K_REG_ADDR)


#define BIT_SHIFT_CAL_32K_REG_DATA 0
#define BIT_MASK_CAL_32K_REG_DATA 0xffff
#define BIT_CAL_32K_REG_DATA(x) (((x) & BIT_MASK_CAL_32K_REG_DATA) << BIT_SHIFT_CAL_32K_REG_DATA)


//2 REG_NOT_VALID

//2 REG_C2HEVT

#define BIT_SHIFT_C2HEVT_MSG 0
#define BIT_MASK_C2HEVT_MSG 0xffffffffffffffffffffffffffffffffL
#define BIT_C2HEVT_MSG(x) (((x) & BIT_MASK_C2HEVT_MSG) << BIT_SHIFT_C2HEVT_MSG)


//2 REG_SW_DEFINED_PAGE1

#define BIT_SHIFT_SW_DEFINED_PAGE1 0
#define BIT_MASK_SW_DEFINED_PAGE1 0xffffffffffffffffL
#define BIT_SW_DEFINED_PAGE1(x) (((x) & BIT_MASK_SW_DEFINED_PAGE1) << BIT_SHIFT_SW_DEFINED_PAGE1)


//2 REG_MCUTST_I

#define BIT_SHIFT_MCUDMSG_I 0
#define BIT_MASK_MCUDMSG_I 0xffffffffL
#define BIT_MCUDMSG_I(x) (((x) & BIT_MASK_MCUDMSG_I) << BIT_SHIFT_MCUDMSG_I)


//2 REG_MCUTST_II

#define BIT_SHIFT_MCUDMSG_II 0
#define BIT_MASK_MCUDMSG_II 0xffffffffL
#define BIT_MCUDMSG_II(x) (((x) & BIT_MASK_MCUDMSG_II) << BIT_SHIFT_MCUDMSG_II)


//2 REG_FMETHR
#define BIT_FMSG_INT_8710C BIT(31)

#define BIT_SHIFT_FW_MSG 0
#define BIT_MASK_FW_MSG 0xffffffffL
#define BIT_FW_MSG(x) (((x) & BIT_MASK_FW_MSG) << BIT_SHIFT_FW_MSG)


//2 REG_HMETFR

#define BIT_SHIFT_HRCV_MSG 24
#define BIT_MASK_HRCV_MSG 0xff
#define BIT_HRCV_MSG(x) (((x) & BIT_MASK_HRCV_MSG) << BIT_SHIFT_HRCV_MSG)

#define BIT_INT_BOX3_8710C BIT(3)
#define BIT_INT_BOX2_8710C BIT(2)
#define BIT_INT_BOX1_8710C BIT(1)
#define BIT_INT_BOX0_8710C BIT(0)

//2 REG_HMEBOX0

#define BIT_SHIFT_HOST_MSG_0 0
#define BIT_MASK_HOST_MSG_0 0xffffffffL
#define BIT_HOST_MSG_0(x) (((x) & BIT_MASK_HOST_MSG_0) << BIT_SHIFT_HOST_MSG_0)


//2 REG_HMEBOX1

#define BIT_SHIFT_HOST_MSG_1 0
#define BIT_MASK_HOST_MSG_1 0xffffffffL
#define BIT_HOST_MSG_1(x) (((x) & BIT_MASK_HOST_MSG_1) << BIT_SHIFT_HOST_MSG_1)


//2 REG_HMEBOX2

#define BIT_SHIFT_HOST_MSG_2 0
#define BIT_MASK_HOST_MSG_2 0xffffffffL
#define BIT_HOST_MSG_2(x) (((x) & BIT_MASK_HOST_MSG_2) << BIT_SHIFT_HOST_MSG_2)


//2 REG_HMEBOX3

#define BIT_SHIFT_HOST_MSG_3 0
#define BIT_MASK_HOST_MSG_3 0xffffffffL
#define BIT_HOST_MSG_3(x) (((x) & BIT_MASK_HOST_MSG_3) << BIT_SHIFT_HOST_MSG_3)


//2 REG_LLT_INIT

#define BIT_SHIFT_LLTE_RWM 30
#define BIT_MASK_LLTE_RWM 0x3
#define BIT_LLTE_RWM(x) (((x) & BIT_MASK_LLTE_RWM) << BIT_SHIFT_LLTE_RWM)


#define BIT_SHIFT_LLTINI_PDATA 16
#define BIT_MASK_LLTINI_PDATA 0xff
#define BIT_LLTINI_PDATA(x) (((x) & BIT_MASK_LLTINI_PDATA) << BIT_SHIFT_LLTINI_PDATA)


#define BIT_SHIFT_LLTINI_ADDR 8
#define BIT_MASK_LLTINI_ADDR 0xff
#define BIT_LLTINI_ADDR(x) (((x) & BIT_MASK_LLTINI_ADDR) << BIT_SHIFT_LLTINI_ADDR)


#define BIT_SHIFT_LLTINI_HDATA 0
#define BIT_MASK_LLTINI_HDATA 0xff
#define BIT_LLTINI_HDATA(x) (((x) & BIT_MASK_LLTINI_HDATA) << BIT_SHIFT_LLTINI_HDATA)


//2 REG_GENTST

#define BIT_SHIFT_GENTST 0
#define BIT_MASK_GENTST 0xffffffffL
#define BIT_GENTST(x) (((x) & BIT_MASK_GENTST) << BIT_SHIFT_GENTST)


//2 REG_BB_ACCESS_CTRL

#define BIT_SHIFT_BB_WRITE_READ 30
#define BIT_MASK_BB_WRITE_READ 0x3
#define BIT_BB_WRITE_READ(x) (((x) & BIT_MASK_BB_WRITE_READ) << BIT_SHIFT_BB_WRITE_READ)


#define BIT_SHIFT_BB_WRITE_EN 12
#define BIT_MASK_BB_WRITE_EN 0xf
#define BIT_BB_WRITE_EN(x) (((x) & BIT_MASK_BB_WRITE_EN) << BIT_SHIFT_BB_WRITE_EN)


#define BIT_SHIFT_BB_ADDR 2
#define BIT_MASK_BB_ADDR 0x1ff
#define BIT_BB_ADDR(x) (((x) & BIT_MASK_BB_ADDR) << BIT_SHIFT_BB_ADDR)

#define BIT_BB_ERRACC_8710C BIT(0)

//2 REG_BB_ACCESS_DATA

#define BIT_SHIFT_BB_DATA 0
#define BIT_MASK_BB_DATA 0xffffffffL
#define BIT_BB_DATA(x) (((x) & BIT_MASK_BB_DATA) << BIT_SHIFT_BB_DATA)


//2 REG_HMEBOX_E0

#define BIT_SHIFT_HMEBOX_E0 0
#define BIT_MASK_HMEBOX_E0 0xffffffffL
#define BIT_HMEBOX_E0(x) (((x) & BIT_MASK_HMEBOX_E0) << BIT_SHIFT_HMEBOX_E0)


//2 REG_HMEBOX_E1

#define BIT_SHIFT_HMEBOX_E1 0
#define BIT_MASK_HMEBOX_E1 0xffffffffL
#define BIT_HMEBOX_E1(x) (((x) & BIT_MASK_HMEBOX_E1) << BIT_SHIFT_HMEBOX_E1)


//2 REG_HMEBOX_E2

#define BIT_SHIFT_HMEBOX_E2 0
#define BIT_MASK_HMEBOX_E2 0xffffffffL
#define BIT_HMEBOX_E2(x) (((x) & BIT_MASK_HMEBOX_E2) << BIT_SHIFT_HMEBOX_E2)


//2 REG_HMEBOX_E3

#define BIT_SHIFT_HMEBOX_E3 0
#define BIT_MASK_HMEBOX_E3 0xffffffffL
#define BIT_HMEBOX_E3(x) (((x) & BIT_MASK_HMEBOX_E3) << BIT_SHIFT_HMEBOX_E3)


//2 REG_RQPN_CTRL_HLPQ
#define BIT_LD_RQPN_8710C BIT(31)
#define BIT_EPQ_PUBLIC_DIS_8710C BIT(27)
#define BIT_NPQ_PUBLIC_DIS_8710C BIT(26)
#define BIT_LPQ_PUBLIC_DIS_8710C BIT(25)
#define BIT_HPQ_PUBLIC_DIS_8710C BIT(24)

#define BIT_SHIFT_PUBQ 16
#define BIT_MASK_PUBQ 0xff
#define BIT_PUBQ(x) (((x) & BIT_MASK_PUBQ) << BIT_SHIFT_PUBQ)


#define BIT_SHIFT_LPQ 8
#define BIT_MASK_LPQ 0xff
#define BIT_LPQ(x) (((x) & BIT_MASK_LPQ) << BIT_SHIFT_LPQ)


#define BIT_SHIFT_HPQ 0
#define BIT_MASK_HPQ 0xff
#define BIT_HPQ(x) (((x) & BIT_MASK_HPQ) << BIT_SHIFT_HPQ)


//2 REG_FIFOPAGE_INFO

#define BIT_SHIFT_TXPKTNUM 24
#define BIT_MASK_TXPKTNUM 0xff
#define BIT_TXPKTNUM(x) (((x) & BIT_MASK_TXPKTNUM) << BIT_SHIFT_TXPKTNUM)


#define BIT_SHIFT_PUBQ_AVAL_PG 16
#define BIT_MASK_PUBQ_AVAL_PG 0xff
#define BIT_PUBQ_AVAL_PG(x) (((x) & BIT_MASK_PUBQ_AVAL_PG) << BIT_SHIFT_PUBQ_AVAL_PG)


#define BIT_SHIFT_LPQ_AVAL_PG 8
#define BIT_MASK_LPQ_AVAL_PG 0xff
#define BIT_LPQ_AVAL_PG(x) (((x) & BIT_MASK_LPQ_AVAL_PG) << BIT_SHIFT_LPQ_AVAL_PG)


#define BIT_SHIFT_HPQ_AVAL_PG 0
#define BIT_MASK_HPQ_AVAL_PG 0xff
#define BIT_HPQ_AVAL_PG(x) (((x) & BIT_MASK_HPQ_AVAL_PG) << BIT_SHIFT_HPQ_AVAL_PG)


//2 REG_DWBCN0_CTRL

#define BIT_SHIFT_LLT_FREE_PAGE 24
#define BIT_MASK_LLT_FREE_PAGE 0xff
#define BIT_LLT_FREE_PAGE(x) (((x) & BIT_MASK_LLT_FREE_PAGE) << BIT_SHIFT_LLT_FREE_PAGE)

#define BIT_BCN_VALID_8710C BIT(16)

#define BIT_SHIFT_BCN_HEAD 8
#define BIT_MASK_BCN_HEAD 0xff
#define BIT_BCN_HEAD(x) (((x) & BIT_MASK_BCN_HEAD) << BIT_SHIFT_BCN_HEAD)


#define BIT_SHIFT_BLK_DESC_NUM 4
#define BIT_MASK_BLK_DESC_NUM 0xf
#define BIT_BLK_DESC_NUM_8710C(x) (((x) & BIT_MASK_BLK_DESC_NUM) << BIT_SHIFT_BLK_DESC_NUM)

#define BIT_BLK_DESC_OPT_8710C BIT(0)

//2 REG_TXDMA_OFFSET_CHK
#define BIT_EN_CHKSUM_FIN_8710C BIT(31)
#define BIT_EN_PCIE_DMA_MOD_8710C BIT(30)
#define BIT_EN_TXQUE_CLR_8710C BIT(29)
#define BIT_EN_PCIE_FIFO_8710C BIT(28)

#define BIT_SHIFT_PG_UNDER_TH 16
#define BIT_MASK_PG_UNDER_TH 0xff
#define BIT_PG_UNDER_TH(x) (((x) & BIT_MASK_PG_UNDER_TH) << BIT_SHIFT_PG_UNDER_TH)

#define BIT_SDIO_TXDESC_CHKSUM_EN_8710C BIT(13)
#define BIT_RST_RDPTR_8710C BIT(12)
#define BIT_RST_WRPTR_8710C BIT(11)
#define BIT_CHK_PG_TH_EN_8710C BIT(10)
#define BIT_DROP_DATA_EN_8710C BIT(9)
#define BIT_CHECK_OFFSET_EN_8710C BIT(8)

#define BIT_SHIFT_CHECK_OFFSET 0
#define BIT_MASK_CHECK_OFFSET 0xff
#define BIT_CHECK_OFFSET(x) (((x) & BIT_MASK_CHECK_OFFSET) << BIT_SHIFT_CHECK_OFFSET)


//2 REG_TXDMA_STATUS
#define BIT_HI_OQT_UDN_8710C BIT(17)
#define BIT_HI_OQT_OVF_8710C BIT(16)
#define BIT_PAYLOAD_CHKSUM_ERR_8710C BIT(15)
#define BIT_PAYLOAD_UDN_8710C BIT(14)
#define BIT_PAYLOAD_OVF_8710C BIT(13)
#define BIT_DSC_CHKSUM_FAIL_8710C BIT(12)
#define BIT_UNKNOWN_QSEL_8710C BIT(11)
#define BIT_EP_QSEL_DIFF_8710C BIT(10)
#define BIT_TX_OFFS_UNMATCH_8710C BIT(9)
#define BIT_TXOQT_UDN_8710C BIT(8)
#define BIT_TXOQT_OVF_8710C BIT(7)
#define BIT_TXDMA_SFF_UDN_8710C BIT(6)
#define BIT_TXDMA_SFF_OVF_8710C BIT(5)
#define BIT_LLT_NULL_PG_8710C BIT(4)
#define BIT_PAGE_UDN_8710C BIT(3)
#define BIT_PAGE_OVF_8710C BIT(2)
#define BIT_TXFF_PG_UDN_8710C BIT(1)
#define BIT_TXFF_PG_OVF_8710C BIT(0)

//2 REG_RQPN_NPQ

#define BIT_SHIFT_EXQ_AVAL_PG 24
#define BIT_MASK_EXQ_AVAL_PG 0xff
#define BIT_EXQ_AVAL_PG(x) (((x) & BIT_MASK_EXQ_AVAL_PG) << BIT_SHIFT_EXQ_AVAL_PG)


#define BIT_SHIFT_EXQ 16
#define BIT_MASK_EXQ 0xff
#define BIT_EXQ(x) (((x) & BIT_MASK_EXQ) << BIT_SHIFT_EXQ)


#define BIT_SHIFT_NPQ_AVAL_PG 8
#define BIT_MASK_NPQ_AVAL_PG 0xff
#define BIT_NPQ_AVAL_PG(x) (((x) & BIT_MASK_NPQ_AVAL_PG) << BIT_SHIFT_NPQ_AVAL_PG)


#define BIT_SHIFT_NPQ 0
#define BIT_MASK_NPQ 0xff
#define BIT_NPQ(x) (((x) & BIT_MASK_NPQ) << BIT_SHIFT_NPQ)


//2 REG_TQPNT1

#define BIT_SHIFT_NPQ_HIGH_TH 24
#define BIT_MASK_NPQ_HIGH_TH 0xff
#define BIT_NPQ_HIGH_TH(x) (((x) & BIT_MASK_NPQ_HIGH_TH) << BIT_SHIFT_NPQ_HIGH_TH)


#define BIT_SHIFT_NPQ_LOW_TH 16
#define BIT_MASK_NPQ_LOW_TH 0xff
#define BIT_NPQ_LOW_TH(x) (((x) & BIT_MASK_NPQ_LOW_TH) << BIT_SHIFT_NPQ_LOW_TH)


#define BIT_SHIFT_HPQ_HIGH_TH 8
#define BIT_MASK_HPQ_HIGH_TH 0xff
#define BIT_HPQ_HIGH_TH(x) (((x) & BIT_MASK_HPQ_HIGH_TH) << BIT_SHIFT_HPQ_HIGH_TH)


#define BIT_SHIFT_HPQ_LOW_TH 0
#define BIT_MASK_HPQ_LOW_TH 0xff
#define BIT_HPQ_LOW_TH(x) (((x) & BIT_MASK_HPQ_LOW_TH) << BIT_SHIFT_HPQ_LOW_TH)


//2 REG_TQPNT2

#define BIT_SHIFT_EXQ_HIGH_TH 24
#define BIT_MASK_EXQ_HIGH_TH 0xff
#define BIT_EXQ_HIGH_TH(x) (((x) & BIT_MASK_EXQ_HIGH_TH) << BIT_SHIFT_EXQ_HIGH_TH)


#define BIT_SHIFT_EXQ_LOW_TH 16
#define BIT_MASK_EXQ_LOW_TH 0xff
#define BIT_EXQ_LOW_TH(x) (((x) & BIT_MASK_EXQ_LOW_TH) << BIT_SHIFT_EXQ_LOW_TH)


#define BIT_SHIFT_LPQ_HIGH_TH 8
#define BIT_MASK_LPQ_HIGH_TH 0xff
#define BIT_LPQ_HIGH_TH(x) (((x) & BIT_MASK_LPQ_HIGH_TH) << BIT_SHIFT_LPQ_HIGH_TH)


#define BIT_SHIFT_LPQ_LOW_TH 0
#define BIT_MASK_LPQ_LOW_TH 0xff
#define BIT_LPQ_LOW_TH(x) (((x) & BIT_MASK_LPQ_LOW_TH) << BIT_SHIFT_LPQ_LOW_TH)


//2 REG_TDE_DEBUG

#define BIT_SHIFT_TDE_DEBUG 0
#define BIT_MASK_TDE_DEBUG 0xffffffffL
#define BIT_TDE_DEBUG(x) (((x) & BIT_MASK_TDE_DEBUG) << BIT_SHIFT_TDE_DEBUG)


//2 REG_AUTO_LLT

#define BIT_SHIFT_TXPKTNUM_V1 24
#define BIT_MASK_TXPKTNUM_V1 0xff
#define BIT_TXPKTNUM_V1(x) (((x) & BIT_MASK_TXPKTNUM_V1) << BIT_SHIFT_TXPKTNUM_V1)

#define BIT_TDE_DBG_SEL_8710C BIT(23)
#define BIT_MASK_QSEL_DIFF_8710C BIT(22)
#define BIT_AUTO_INIT_LLT_8710C BIT(16)

#define BIT_SHIFT_TX_OQT_HE_FREE_SPACE 8
#define BIT_MASK_TX_OQT_HE_FREE_SPACE 0xff
#define BIT_TX_OQT_HE_FREE_SPACE(x) (((x) & BIT_MASK_TX_OQT_HE_FREE_SPACE) << BIT_SHIFT_TX_OQT_HE_FREE_SPACE)


#define BIT_SHIFT_TX_OQT_NL_FREE_SPACE 0
#define BIT_MASK_TX_OQT_NL_FREE_SPACE 0xff
#define BIT_TX_OQT_NL_FREE_SPACE(x) (((x) & BIT_MASK_TX_OQT_NL_FREE_SPACE) << BIT_SHIFT_TX_OQT_NL_FREE_SPACE)


//2 REG_DWBCN1_CTRL

#define BIT_SHIFT_BCN_HEAD_2 24
#define BIT_MASK_BCN_HEAD_2 0xff
#define BIT_BCN_HEAD_2(x) (((x) & BIT_MASK_BCN_HEAD_2) << BIT_SHIFT_BCN_HEAD_2)


#define BIT_SHIFT_SW_BCN_SEL 20
#define BIT_MASK_SW_BCN_SEL 0x3
#define BIT_SW_BCN_SEL(x) (((x) & BIT_MASK_SW_BCN_SEL) << BIT_SHIFT_SW_BCN_SEL)

#define BIT_BCN_VALID_2_8710C BIT(18)
#define BIT_SW_BCN_SEL_EN_8710C BIT(17)
#define BIT_BCN_VALID_1_8710C BIT(16)

#define BIT_SHIFT_BCN_HEAD_1 8
#define BIT_MASK_BCN_HEAD_1 0xff
#define BIT_BCN_HEAD_1(x) (((x) & BIT_MASK_BCN_HEAD_1) << BIT_SHIFT_BCN_HEAD_1)


#define BIT_SHIFT_MAX_TX_PKT_FOR_USB_AND_SDIO 0
#define BIT_MASK_MAX_TX_PKT_FOR_USB_AND_SDIO 0xff
#define BIT_MAX_TX_PKT_FOR_USB_AND_SDIO(x) (((x) & BIT_MASK_MAX_TX_PKT_FOR_USB_AND_SDIO) << BIT_SHIFT_MAX_TX_PKT_FOR_USB_AND_SDIO)


//2 REG_NOT_VALID
#define BIT_ADJUSTABLE_SIZE_EN_8710C BIT(15)

#define BIT_SHIFT_ALIGNMENT_SIZE 0
#define BIT_MASK_ALIGNMENT_SIZE 0xfff
#define BIT_ALIGNMENT_SIZE(x) (((x) & BIT_MASK_ALIGNMENT_SIZE) << BIT_SHIFT_ALIGNMENT_SIZE)


//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_H2C_HEAD

#define BIT_SHIFT_H2C_HEAD 0
#define BIT_MASK_H2C_HEAD 0x3ffff
#define BIT_H2C_HEAD(x) (((x) & BIT_MASK_H2C_HEAD) << BIT_SHIFT_H2C_HEAD)


//2 REG_H2C_TAIL

#define BIT_SHIFT_H2C_TAIL 0
#define BIT_MASK_H2C_TAIL 0x3ffff
#define BIT_H2C_TAIL(x) (((x) & BIT_MASK_H2C_TAIL) << BIT_SHIFT_H2C_TAIL)


//2 REG_H2C_READ_ADDR

#define BIT_SHIFT_H2C_READ_ADDR 0
#define BIT_MASK_H2C_READ_ADDR 0x3ffff
#define BIT_H2C_READ_ADDR(x) (((x) & BIT_MASK_H2C_READ_ADDR) << BIT_SHIFT_H2C_READ_ADDR)


//2 REG_H2C_WR_ADDR

#define BIT_SHIFT_H2C_WR_ADDR 0
#define BIT_MASK_H2C_WR_ADDR 0x3ffff
#define BIT_H2C_WR_ADDR(x) (((x) & BIT_MASK_H2C_WR_ADDR) << BIT_SHIFT_H2C_WR_ADDR)


//2 REG_H2C_INFO
#define BIT_H2C_SPACE_VLD_8710C BIT(3)
#define BIT_H2C_WR_ADDR_RST_8710C BIT(2)

#define BIT_SHIFT_H2C_LEN_SEL 0
#define BIT_MASK_H2C_LEN_SEL 0x3
#define BIT_H2C_LEN_SEL(x) (((x) & BIT_MASK_H2C_LEN_SEL) << BIT_SHIFT_H2C_LEN_SEL)


//2 REG_RXDMA_AGG_PG_TH
#define BIT_USB_RXDMA_AGG_EN_8710C BIT(31)
#define BIT_RXAGG_TH_MODE_8710C BIT(29)

#define BIT_SHIFT_PKT_NUM_WOL 16
#define BIT_MASK_PKT_NUM_WOL 0xff
#define BIT_PKT_NUM_WOL(x) (((x) & BIT_MASK_PKT_NUM_WOL) << BIT_SHIFT_PKT_NUM_WOL)


#define BIT_SHIFT_DMA_AGG_TO_V1 8
#define BIT_MASK_DMA_AGG_TO_V1 0xff
#define BIT_DMA_AGG_TO_V1(x) (((x) & BIT_MASK_DMA_AGG_TO_V1) << BIT_SHIFT_DMA_AGG_TO_V1)


#define BIT_SHIFT_RXDMA_AGG_PG_TH_V1 0
#define BIT_MASK_RXDMA_AGG_PG_TH_V1 0xff
#define BIT_RXDMA_AGG_PG_TH_V1(x) (((x) & BIT_MASK_RXDMA_AGG_PG_TH_V1) << BIT_SHIFT_RXDMA_AGG_PG_TH_V1)


//2 REG_RXPKT_NUM

#define BIT_SHIFT_RXPKT_NUM 24
#define BIT_MASK_RXPKT_NUM 0xff
#define BIT_RXPKT_NUM_8710C(x) (((x) & BIT_MASK_RXPKT_NUM) << BIT_SHIFT_RXPKT_NUM)

#define BIT_STOP_RXDMA_8710C BIT(20)
#define BIT_RXDMA_REQ_8710C BIT(19)
#define BIT_RW_RELEASE_EN_8710C BIT(18)
#define BIT_RXDMA_IDLE_8710C BIT(17)
#define BIT_RXPKT_RELEASE_POLL_8710C BIT(16)

#define BIT_SHIFT_FW_UPD_RDPTR 0
#define BIT_MASK_FW_UPD_RDPTR 0xffff
#define BIT_FW_UPD_RDPTR(x) (((x) & BIT_MASK_FW_UPD_RDPTR) << BIT_SHIFT_FW_UPD_RDPTR)


//2 REG_RXDMA_STATUS
#define BIT_C2H_PKT_OVF_8710C BIT(7)
#define BIT_AGG_CFG_ISSUE_8710C BIT(6)
#define BIT_FW_POLL_ISSUE_8710C BIT(5)
#define BIT_RX_DATA_UDN_8710C BIT(4)
#define BIT_RX_SFF_UDN_8710C BIT(3)
#define BIT_RX_SFF_OVF_8710C BIT(2)
#define BIT_RXPKT_OVF_8710C BIT(0)

//2 REG_RXDMA_DPR

#define BIT_SHIFT_RDE_DEBUG 0
#define BIT_MASK_RDE_DEBUG 0xffffffffL
#define BIT_RDE_DEBUG(x) (((x) & BIT_MASK_RDE_DEBUG) << BIT_SHIFT_RDE_DEBUG)


//2 REG_RXDMA_MODE

#define BIT_SHIFT_BURST_SIZE 4
#define BIT_MASK_BURST_SIZE 0x3
#define BIT_BURST_SIZE(x) (((x) & BIT_MASK_BURST_SIZE) << BIT_SHIFT_BURST_SIZE)


#define BIT_SHIFT_BURST_CNT 2
#define BIT_MASK_BURST_CNT 0x3
#define BIT_BURST_CNT(x) (((x) & BIT_MASK_BURST_CNT) << BIT_SHIFT_BURST_CNT)

#define BIT_DMA_MODE_8710C BIT(1)

//2 REG_C2H_PKT
#define BIT_R_C2H_PKT_REQ_8710C BIT(16)

#define BIT_SHIFT_R_C2H_STR_ADDR 0
#define BIT_MASK_R_C2H_STR_ADDR 0xffff
#define BIT_R_C2H_STR_ADDR(x) (((x) & BIT_MASK_R_C2H_STR_ADDR) << BIT_SHIFT_R_C2H_STR_ADDR)


//2 REG_NOT_VALID

//2 REG_AXIDMA_CTRL

#define BIT_SHIFT_AXI_MAX_RXDMA 28
#define BIT_MASK_AXI_MAX_RXDMA 0x3
#define BIT_AXI_MAX_RXDMA(x) (((x) & BIT_MASK_AXI_MAX_RXDMA) << BIT_SHIFT_AXI_MAX_RXDMA)


#define BIT_SHIFT_AXI_MAX_TXDMA 24
#define BIT_MASK_AXI_MAX_TXDMA 0x3
#define BIT_AXI_MAX_TXDMA(x) (((x) & BIT_MASK_AXI_MAX_TXDMA) << BIT_SHIFT_AXI_MAX_TXDMA)

#define BIT_RX_CLOSE_EN_8710C BIT(15)
#define BIT_STOP_BCNQ_8710C BIT(14)
#define BIT_STOP_MGQ_8710C BIT(13)
#define BIT_STOP_VOQ_8710C BIT(12)
#define BIT_STOP_VIQ_8710C BIT(11)
#define BIT_STOP_BEQ_8710C BIT(10)
#define BIT_STOP_BKQ_8710C BIT(9)
#define BIT_STOP_RXQ_8710C BIT(8)
#define BIT_STOP_HI7Q_8710C BIT(7)
#define BIT_STOP_HI6Q_8710C BIT(6)
#define BIT_STOP_HI5Q_8710C BIT(5)
#define BIT_STOP_HI4Q_8710C BIT(4)
#define BIT_STOP_HI3Q_8710C BIT(3)
#define BIT_STOP_HI2Q_8710C BIT(2)
#define BIT_STOP_HI1Q_8710C BIT(1)
#define BIT_STOP_HI0Q_8710C BIT(0)

#ifndef __HAL_COMMON_REG_H__
/* Most of the definition are already in hal_com_reg.h */
//2 REG_INT_MIG

#define BIT_SHIFT_TXTTIMER_MATCH_NUM 28
#define BIT_MASK_TXTTIMER_MATCH_NUM 0xf
#define BIT_TXTTIMER_MATCH_NUM_8710C(x) (((x) & BIT_MASK_TXTTIMER_MATCH_NUM) << BIT_SHIFT_TXTTIMER_MATCH_NUM)


#define BIT_SHIFT_TXPKT_NUM_MATCH 24
#define BIT_MASK_TXPKT_NUM_MATCH 0xf
#define BIT_TXPKT_NUM_MATCH(x) (((x) & BIT_MASK_TXPKT_NUM_MATCH) << BIT_SHIFT_TXPKT_NUM_MATCH)


#define BIT_SHIFT_RXTTIMER_MATCH_NUM 20
#define BIT_MASK_RXTTIMER_MATCH_NUM 0xf
#define BIT_RXTTIMER_MATCH_NUM_8710C(x) (((x) & BIT_MASK_RXTTIMER_MATCH_NUM) << BIT_SHIFT_RXTTIMER_MATCH_NUM)


#define BIT_SHIFT_RXPKT_NUM_MATCH 16
#define BIT_MASK_RXPKT_NUM_MATCH 0xf
#define BIT_RXPKT_NUM_MATCH(x) (((x) & BIT_MASK_RXPKT_NUM_MATCH) << BIT_SHIFT_RXPKT_NUM_MATCH)


#define BIT_SHIFT_MIGRATE_TIMER 0
#define BIT_MASK_MIGRATE_TIMER 0xffff
#define BIT_MIGRATE_TIMER(x) (((x) & BIT_MASK_MIGRATE_TIMER) << BIT_SHIFT_MIGRATE_TIMER)


//2 REG_BCNQ_TXBD_DESA

#define BIT_SHIFT_BCNQ_TXBD_DESA 0
#define BIT_MASK_BCNQ_TXBD_DESA 0xffffffffffffffffL
#define BIT_BCNQ_TXBD_DESA(x) (((x) & BIT_MASK_BCNQ_TXBD_DESA) << BIT_SHIFT_BCNQ_TXBD_DESA)


//2 REG_MGQ_TXBD_DESA

#define BIT_SHIFT_MGQ_TXBD_DESA 0
#define BIT_MASK_MGQ_TXBD_DESA 0xffffffffffffffffL
#define BIT_MGQ_TXBD_DESA(x) (((x) & BIT_MASK_MGQ_TXBD_DESA) << BIT_SHIFT_MGQ_TXBD_DESA)


//2 REG_VOQ_TXBD_DESA

#define BIT_SHIFT_VOQ_TXBD_DESA 0
#define BIT_MASK_VOQ_TXBD_DESA 0xffffffffffffffffL
#define BIT_VOQ_TXBD_DESA(x) (((x) & BIT_MASK_VOQ_TXBD_DESA) << BIT_SHIFT_VOQ_TXBD_DESA)


//2 REG_VIQ_TXBD_DESA

#define BIT_SHIFT_VIQ_TXBD_DESA 0
#define BIT_MASK_VIQ_TXBD_DESA 0xffffffffffffffffL
#define BIT_VIQ_TXBD_DESA(x) (((x) & BIT_MASK_VIQ_TXBD_DESA) << BIT_SHIFT_VIQ_TXBD_DESA)


//2 REG_BEQ_TXBD_DESA

#define BIT_SHIFT_BEQ_TXBD_DESA 0
#define BIT_MASK_BEQ_TXBD_DESA 0xffffffffffffffffL
#define BIT_BEQ_TXBD_DESA(x) (((x) & BIT_MASK_BEQ_TXBD_DESA) << BIT_SHIFT_BEQ_TXBD_DESA)


//2 REG_BKQ_TXBD_DESA

#define BIT_SHIFT_BKQ_TXBD_DESA 0
#define BIT_MASK_BKQ_TXBD_DESA 0xffffffffffffffffL
#define BIT_BKQ_TXBD_DESA(x) (((x) & BIT_MASK_BKQ_TXBD_DESA) << BIT_SHIFT_BKQ_TXBD_DESA)


//2 REG_RXQ_RXBD_DESA

#define BIT_SHIFT_RXQ_RXBD_DESA 0
#define BIT_MASK_RXQ_RXBD_DESA 0xffffffffffffffffL
#define BIT_RXQ_RXBD_DESA(x) (((x) & BIT_MASK_RXQ_RXBD_DESA) << BIT_SHIFT_RXQ_RXBD_DESA)


//2 REG_HI0Q_TXBD_DESA

#define BIT_SHIFT_HI0Q_TXBD_DESA 0
#define BIT_MASK_HI0Q_TXBD_DESA 0xffffffffffffffffL
#define BIT_HI0Q_TXBD_DESA(x) (((x) & BIT_MASK_HI0Q_TXBD_DESA) << BIT_SHIFT_HI0Q_TXBD_DESA)


//2 REG_HI1Q_TXBD_DESA

#define BIT_SHIFT_HI1Q_TXBD_DESA 0
#define BIT_MASK_HI1Q_TXBD_DESA 0xffffffffffffffffL
#define BIT_HI1Q_TXBD_DESA(x) (((x) & BIT_MASK_HI1Q_TXBD_DESA) << BIT_SHIFT_HI1Q_TXBD_DESA)


//2 REG_HI2Q_TXBD_DESA

#define BIT_SHIFT_HI2Q_TXBD_DESA 0
#define BIT_MASK_HI2Q_TXBD_DESA 0xffffffffffffffffL
#define BIT_HI2Q_TXBD_DESA(x) (((x) & BIT_MASK_HI2Q_TXBD_DESA) << BIT_SHIFT_HI2Q_TXBD_DESA)


//2 REG_HI3Q_TXBD_DESA

#define BIT_SHIFT_HI3Q_TXBD_DESA 0
#define BIT_MASK_HI3Q_TXBD_DESA 0xffffffffffffffffL
#define BIT_HI3Q_TXBD_DESA(x) (((x) & BIT_MASK_HI3Q_TXBD_DESA) << BIT_SHIFT_HI3Q_TXBD_DESA)


//2 REG_HI4Q_TXBD_DESA

#define BIT_SHIFT_HI4Q_TXBD_DESA 0
#define BIT_MASK_HI4Q_TXBD_DESA 0xffffffffffffffffL
#define BIT_HI4Q_TXBD_DESA(x) (((x) & BIT_MASK_HI4Q_TXBD_DESA) << BIT_SHIFT_HI4Q_TXBD_DESA)


//2 REG_HI5Q_TXBD_DESA

#define BIT_SHIFT_HI5Q_TXBD_DESA 0
#define BIT_MASK_HI5Q_TXBD_DESA 0xffffffffffffffffL
#define BIT_HI5Q_TXBD_DESA(x) (((x) & BIT_MASK_HI5Q_TXBD_DESA) << BIT_SHIFT_HI5Q_TXBD_DESA)


//2 REG_HI6Q_TXBD_DESA

#define BIT_SHIFT_HI6Q_TXBD_DESA 0
#define BIT_MASK_HI6Q_TXBD_DESA 0xffffffffffffffffL
#define BIT_HI6Q_TXBD_DESA(x) (((x) & BIT_MASK_HI6Q_TXBD_DESA) << BIT_SHIFT_HI6Q_TXBD_DESA)


//2 REG_HI7Q_TXBD_DESA

#define BIT_SHIFT_HI7Q_TXBD_DESA 0
#define BIT_MASK_HI7Q_TXBD_DESA 0xffffffffffffffffL
#define BIT_HI7Q_TXBD_DESA(x) (((x) & BIT_MASK_HI7Q_TXBD_DESA) << BIT_SHIFT_HI7Q_TXBD_DESA)


//2 REG_MGQ_TXBD_NUM
#define BIT_PCIE_MGQ_FLAG_8710C BIT(14)

#define BIT_SHIFT_MGQ_DESC_MODE 12
#define BIT_MASK_MGQ_DESC_MODE 0x3
#define BIT_MGQ_DESC_MODE_8710C(x) (((x) & BIT_MASK_MGQ_DESC_MODE) << BIT_SHIFT_MGQ_DESC_MODE)


#define BIT_SHIFT_MGQ_DESC_NUM 0
#define BIT_MASK_MGQ_DESC_NUM 0xfff
#define BIT_MGQ_DESC_NUM_8710C(x) (((x) & BIT_MASK_MGQ_DESC_NUM) << BIT_SHIFT_MGQ_DESC_NUM)


//2 REG_RX_RXBD_NUM
#define BIT_SYS_32_64_8710C BIT(15)

#define BIT_SHIFT_BCNQ_DESC_MODE 13
#define BIT_MASK_BCNQ_DESC_MODE 0x3
#define BIT_BCNQ_DESC_MODE_8710C(x) (((x) & BIT_MASK_BCNQ_DESC_MODE) << BIT_SHIFT_BCNQ_DESC_MODE)

#define BIT_AXI_BCNQ_FLAG_8710C BIT(12)

#define BIT_SHIFT_RXQ_DESC_NUM 0
#define BIT_MASK_RXQ_DESC_NUM 0xfff
#define BIT_RXQ_DESC_NUM_8710C(x) (((x) & BIT_MASK_RXQ_DESC_NUM) << BIT_SHIFT_RXQ_DESC_NUM)


//2 REG_VOQ_TXBD_NUM
#define BIT_PCIE_VOQ_FLAG_8710C BIT(14)

#define BIT_SHIFT_VOQ_DESC_MODE 12
#define BIT_MASK_VOQ_DESC_MODE 0x3
#define BIT_VOQ_DESC_MODE_8710C(x) (((x) & BIT_MASK_VOQ_DESC_MODE) << BIT_SHIFT_VOQ_DESC_MODE)


#define BIT_SHIFT_VOQ_DESC_NUM 0
#define BIT_MASK_VOQ_DESC_NUM 0xfff
#define BIT_VOQ_DESC_NUM_8710C(x) (((x) & BIT_MASK_VOQ_DESC_NUM) << BIT_SHIFT_VOQ_DESC_NUM)


//2 REG_VIQ_TXBD_NUM
#define BIT_PCIE_VIQ_FLAG_8710C BIT(14)

#define BIT_SHIFT_VIQ_DESC_MODE 12
#define BIT_MASK_VIQ_DESC_MODE 0x3
#define BIT_VIQ_DESC_MODE_8710C(x) (((x) & BIT_MASK_VIQ_DESC_MODE) << BIT_SHIFT_VIQ_DESC_MODE)


#define BIT_SHIFT_VIQ_DESC_NUM 0
#define BIT_MASK_VIQ_DESC_NUM 0xfff
#define BIT_VIQ_DESC_NUM_8710C(x) (((x) & BIT_MASK_VIQ_DESC_NUM) << BIT_SHIFT_VIQ_DESC_NUM)


//2 REG_BEQ_TXBD_NUM
#define BIT_PCIE_BEQ_FLAG_8710C BIT(14)

#define BIT_SHIFT_BEQ_DESC_MODE 12
#define BIT_MASK_BEQ_DESC_MODE 0x3
#define BIT_BEQ_DESC_MODE_8710C(x) (((x) & BIT_MASK_BEQ_DESC_MODE) << BIT_SHIFT_BEQ_DESC_MODE)


#define BIT_SHIFT_BEQ_DESC_NUM 0
#define BIT_MASK_BEQ_DESC_NUM 0xfff
#define BIT_BEQ_DESC_NUM_8710C(x) (((x) & BIT_MASK_BEQ_DESC_NUM) << BIT_SHIFT_BEQ_DESC_NUM)


//2 REG_BKQ_TXBD_NUM
#define BIT_PCIE_BKQ_FLAG_8710C BIT(14)

#define BIT_SHIFT_BKQ_DESC_MODE 12
#define BIT_MASK_BKQ_DESC_MODE 0x3
#define BIT_BKQ_DESC_MODE_8710C(x) (((x) & BIT_MASK_BKQ_DESC_MODE) << BIT_SHIFT_BKQ_DESC_MODE)


#define BIT_SHIFT_BKQ_DESC_NUM 0
#define BIT_MASK_BKQ_DESC_NUM 0xfff
#define BIT_BKQ_DESC_NUM_8710C(x) (((x) & BIT_MASK_BKQ_DESC_NUM) << BIT_SHIFT_BKQ_DESC_NUM)


//2 REG_HI0Q_TXBD_NUM
#define BIT_HI0Q_FLAG_8710C BIT(14)

#define BIT_SHIFT_HI0Q_DESC_MODE 12
#define BIT_MASK_HI0Q_DESC_MODE 0x3
#define BIT_HI0Q_DESC_MODE_8710C(x) (((x) & BIT_MASK_HI0Q_DESC_MODE) << BIT_SHIFT_HI0Q_DESC_MODE)


#define BIT_SHIFT_HI0Q_DESC_NUM 0
#define BIT_MASK_HI0Q_DESC_NUM 0xfff
#define BIT_HI0Q_DESC_NUM_8710C(x) (((x) & BIT_MASK_HI0Q_DESC_NUM) << BIT_SHIFT_HI0Q_DESC_NUM)


//2 REG_HI1Q_TXBD_NUM
#define BIT_HI1Q_FLAG_8710C BIT(14)

#define BIT_SHIFT_HI1Q_DESC_MODE 12
#define BIT_MASK_HI1Q_DESC_MODE 0x3
#define BIT_HI1Q_DESC_MODE_8710C(x) (((x) & BIT_MASK_HI1Q_DESC_MODE) << BIT_SHIFT_HI1Q_DESC_MODE)


#define BIT_SHIFT_HI1Q_DESC_NUM 0
#define BIT_MASK_HI1Q_DESC_NUM 0xfff
#define BIT_HI1Q_DESC_NUM_8710C(x) (((x) & BIT_MASK_HI1Q_DESC_NUM) << BIT_SHIFT_HI1Q_DESC_NUM)


//2 REG_HI2Q_TXBD_NUM
#define BIT_HI2Q_FLAG_8710C BIT(14)

#define BIT_SHIFT_HI2Q_DESC_MODE 12
#define BIT_MASK_HI2Q_DESC_MODE 0x3
#define BIT_HI2Q_DESC_MODE_8710C(x) (((x) & BIT_MASK_HI2Q_DESC_MODE) << BIT_SHIFT_HI2Q_DESC_MODE)


#define BIT_SHIFT_HI2Q_DESC_NUM 0
#define BIT_MASK_HI2Q_DESC_NUM 0xfff
#define BIT_HI2Q_DESC_NUM_8710C(x) (((x) & BIT_MASK_HI2Q_DESC_NUM) << BIT_SHIFT_HI2Q_DESC_NUM)


//2 REG_HI3Q_TXBD_NUM
#define BIT_HI3Q_FLAG_8710C BIT(14)

#define BIT_SHIFT_HI3Q_DESC_MODE 12
#define BIT_MASK_HI3Q_DESC_MODE 0x3
#define BIT_HI3Q_DESC_MODE_8710C(x) (((x) & BIT_MASK_HI3Q_DESC_MODE) << BIT_SHIFT_HI3Q_DESC_MODE)


#define BIT_SHIFT_HI3Q_DESC_NUM 0
#define BIT_MASK_HI3Q_DESC_NUM 0xfff
#define BIT_HI3Q_DESC_NUM_8710C(x) (((x) & BIT_MASK_HI3Q_DESC_NUM) << BIT_SHIFT_HI3Q_DESC_NUM)


//2 REG_HI4Q_TXBD_NUM
#define BIT_HI4Q_FLAG_8710C BIT(14)

#define BIT_SHIFT_HI4Q_DESC_MODE 12
#define BIT_MASK_HI4Q_DESC_MODE 0x3
#define BIT_HI4Q_DESC_MODE_8710C(x) (((x) & BIT_MASK_HI4Q_DESC_MODE) << BIT_SHIFT_HI4Q_DESC_MODE)


#define BIT_SHIFT_HI4Q_DESC_NUM 0
#define BIT_MASK_HI4Q_DESC_NUM 0xfff
#define BIT_HI4Q_DESC_NUM_8710C(x) (((x) & BIT_MASK_HI4Q_DESC_NUM) << BIT_SHIFT_HI4Q_DESC_NUM)


//2 REG_HI5Q_TXBD_NUM
#define BIT_HI5Q_FLAG_8710C BIT(14)

#define BIT_SHIFT_HI5Q_DESC_MODE 12
#define BIT_MASK_HI5Q_DESC_MODE 0x3
#define BIT_HI5Q_DESC_MODE_8710C(x) (((x) & BIT_MASK_HI5Q_DESC_MODE) << BIT_SHIFT_HI5Q_DESC_MODE)


#define BIT_SHIFT_HI5Q_DESC_NUM 0
#define BIT_MASK_HI5Q_DESC_NUM 0xfff
#define BIT_HI5Q_DESC_NUM_8710C(x) (((x) & BIT_MASK_HI5Q_DESC_NUM) << BIT_SHIFT_HI5Q_DESC_NUM)


//2 REG_HI6Q_TXBD_NUM
#define BIT_HI6Q_FLAG_8710C BIT(14)

#define BIT_SHIFT_HI6Q_DESC_MODE 12
#define BIT_MASK_HI6Q_DESC_MODE 0x3
#define BIT_HI6Q_DESC_MODE_8710C(x) (((x) & BIT_MASK_HI6Q_DESC_MODE) << BIT_SHIFT_HI6Q_DESC_MODE)


#define BIT_SHIFT_HI6Q_DESC_NUM 0
#define BIT_MASK_HI6Q_DESC_NUM 0xfff
#define BIT_HI6Q_DESC_NUM_8710C(x) (((x) & BIT_MASK_HI6Q_DESC_NUM) << BIT_SHIFT_HI6Q_DESC_NUM)


//2 REG_HI7Q_TXBD_NUM
#define BIT_HI7Q_FLAG_8710C BIT(14)

#define BIT_SHIFT_HI7Q_DESC_MODE 12
#define BIT_MASK_HI7Q_DESC_MODE 0x3
#define BIT_HI7Q_DESC_MODE_8710C(x) (((x) & BIT_MASK_HI7Q_DESC_MODE) << BIT_SHIFT_HI7Q_DESC_MODE)


#define BIT_SHIFT_HI7Q_DESC_NUM 0
#define BIT_MASK_HI7Q_DESC_NUM 0xfff
#define BIT_HI7Q_DESC_NUM_8710C(x) (((x) & BIT_MASK_HI7Q_DESC_NUM) << BIT_SHIFT_HI7Q_DESC_NUM)


//2 REG_TSFTIMER_HCI

#define BIT_SHIFT_TSFT2_HCI 16
#define BIT_MASK_TSFT2_HCI 0xffff
#define BIT_TSFT2_HCI(x) (((x) & BIT_MASK_TSFT2_HCI) << BIT_SHIFT_TSFT2_HCI)


#define BIT_SHIFT_TSFT1_HCI 0
#define BIT_MASK_TSFT1_HCI 0xffff
#define BIT_TSFT1_HCI(x) (((x) & BIT_MASK_TSFT1_HCI) << BIT_SHIFT_TSFT1_HCI)
#else //#ifndef __HAL_COMMON_REG_H__
#define BIT_VOQ_DESC_MODE_8710C(x) BIT_MAX_VOQ_DESC_MODE(x)
#define BIT_VOQ_DESC_NUM_8710C(x) BIT_MAX_VOQ_DESC_NUM(x)
#define BIT_VIQ_DESC_MODE_8710C(x) BIT_MAX_VIQ_DESC_MODE(x)
#define BIT_VIQ_DESC_NUM_8710C(x) BIT_MAX_VIQ_DESC_NUM(x)
#define BIT_BEQ_DESC_MODE_8710C(x) BIT_MAX_BEQ_DESC_MODE(x)
#define BIT_BEQ_DESC_NUM_8710C(x) BIT_MAX_BEQ_DESC_NUM(x)
#define BIT_BKQ_DESC_MODE_8710C(x) BIT_MAX_BKQ_DESC_MODE(x)
#define BIT_BKQ_DESC_NUM_8710C(x) BIT_MAX_BKQ_DESC_NUM(x)
#define BIT_MGQ_DESC_MODE_8710C(x) BIT_MAX_MGQ_DESC_MODE(x)
#define BIT_MGQ_DESC_NUM_8710C(x) BIT_MAX_MGQ_DESC_NUM(x)
#define BIT_HI0Q_DESC_MODE_8710C(x) BIT_MAX_HI0Q_DESC_MODE(x)
#define BIT_HI0Q_DESC_NUM_8710C(x) BIT_MAX_HI0Q_DESC_NUM(x)
#define BIT_HI1Q_DESC_MODE_8710C(x) BIT_MAX_HI1Q_DESC_MODE(x)
#define BIT_HI1Q_DESC_NUM_8710C(x) BIT_MAX_HI1Q_DESC_NUM(x)
#define BIT_HI2Q_DESC_MODE_8710C(x) BIT_MAX_HI2Q_DESC_MODE(x)
#define BIT_HI2Q_DESC_NUM_8710C(x) BIT_MAX_HI2Q_DESC_NUM(x)
#define BIT_HI3Q_DESC_MODE_8710C(x) BIT_MAX_HI3Q_DESC_MODE(x)
#define BIT_HI3Q_DESC_NUM_8710C(x) BIT_MAX_HI3Q_DESC_NUM(x)
#define BIT_HI4Q_DESC_MODE_8710C(x) BIT_MAX_HI4Q_DESC_MODE(x)
#define BIT_HI4Q_DESC_NUM_8710C(x) BIT_MAX_HI4Q_DESC_NUM(x)
#define BIT_HI5Q_DESC_MODE_8710C(x) BIT_MAX_HI5Q_DESC_MODE(x)
#define BIT_HI5Q_DESC_NUM_8710C(x) BIT_MAX_HI5Q_DESC_NUM(x)
#define BIT_HI6Q_DESC_MODE_8710C(x) BIT_MAX_HI6Q_DESC_MODE(x)
#define BIT_HI6Q_DESC_NUM_8710C(x) BIT_MAX_HI6Q_DESC_NUM(x)
#define BIT_HI7Q_DESC_MODE_8710C(x) BIT_MAX_HI7Q_DESC_MODE(x)
#define BIT_HI7Q_DESC_NUM_8710C(x) BIT_MAX_HI7Q_DESC_NUM(x)
#define BIT_BCNQ_DESC_MODE_8710C(x) BIT_MAX_BCNQ_DESC_MODE(x)
#define BIT_RXQ_DESC_NUM_8710C(x) BIT_MAX_RXQ_DESC_NUM(x)
#endif //#ifndef __HAL_COMMON_REG_H__


//2 REG_BD_RWPTR_CLR
#define BIT_CLR_HI7Q_HW_IDX_8710C BIT(29)
#define BIT_CLR_HI6Q_HW_IDX_8710C BIT(28)
#define BIT_CLR_HI5Q_HW_IDX_8710C BIT(27)
#define BIT_CLR_HI4Q_HW_IDX_8710C BIT(26)
#define BIT_CLR_HI3Q_HW_IDX_8710C BIT(25)
#define BIT_CLR_HI2Q_HW_IDX_8710C BIT(24)
#define BIT_CLR_HI1Q_HW_IDX_8710C BIT(23)
#define BIT_CLR_HI0Q_HW_IDX_8710C BIT(22)
#define BIT_CLR_BKQ_HW_IDX_8710C BIT(21)
#define BIT_CLR_BEQ_HW_IDX_8710C BIT(20)
#define BIT_CLR_VIQ_HW_IDX_8710C BIT(19)
#define BIT_CLR_VOQ_HW_IDX_8710C BIT(18)
#define BIT_CLR_MGQ_HW_IDX_8710C BIT(17)
#define BIT_CLR_RXQ_HW_IDX_8710C BIT(16)
#define BIT_CLR_HI7Q_HOST_IDX_8710C BIT(13)
#define BIT_CLR_HI6Q_HOST_IDX_8710C BIT(12)
#define BIT_CLR_HI5Q_HOST_IDX_8710C BIT(11)
#define BIT_CLR_HI4Q_HOST_IDX_8710C BIT(10)
#define BIT_CLR_HI3Q_HOST_IDX_8710C BIT(9)
#define BIT_CLR_HI2Q_HOST_IDX_8710C BIT(8)
#define BIT_CLR_HI1Q_HOST_IDX_8710C BIT(7)
#define BIT_CLR_HI0Q_HOST_IDX_8710C BIT(6)
#define BIT_CLR_BKQ_HOST_IDX_8710C BIT(5)
#define BIT_CLR_BEQ_HOST_IDX_8710C BIT(4)
#define BIT_CLR_VIQ_HOST_IDX_8710C BIT(3)
#define BIT_CLR_VOQ_HOST_IDX_8710C BIT(2)
#define BIT_CLR_MGQ_HOST_IDX_8710C BIT(1)
#define BIT_CLR_RXQ_HOST_IDX_8710C BIT(0)

//2 REG_VOQ_TXBD_IDX

#define BIT_SHIFT_VOQ_HW_IDX 16
#define BIT_MASK_VOQ_HW_IDX 0xfff
#define BIT_VOQ_HW_IDX(x) (((x) & BIT_MASK_VOQ_HW_IDX) << BIT_SHIFT_VOQ_HW_IDX)


#define BIT_SHIFT_VOQ_HOST_IDX 0
#define BIT_MASK_VOQ_HOST_IDX 0xfff
#define BIT_VOQ_HOST_IDX(x) (((x) & BIT_MASK_VOQ_HOST_IDX) << BIT_SHIFT_VOQ_HOST_IDX)


//2 REG_VIQ_TXBD_IDX

#define BIT_SHIFT_VIQ_HW_IDX 16
#define BIT_MASK_VIQ_HW_IDX 0xfff
#define BIT_VIQ_HW_IDX(x) (((x) & BIT_MASK_VIQ_HW_IDX) << BIT_SHIFT_VIQ_HW_IDX)


#define BIT_SHIFT_VIQ_HOST_IDX 0
#define BIT_MASK_VIQ_HOST_IDX 0xfff
#define BIT_VIQ_HOST_IDX(x) (((x) & BIT_MASK_VIQ_HOST_IDX) << BIT_SHIFT_VIQ_HOST_IDX)


//2 REG_BEQ_TXBD_IDX

#define BIT_SHIFT_BEQ_HW_IDX 16
#define BIT_MASK_BEQ_HW_IDX 0xfff
#define BIT_BEQ_HW_IDX(x) (((x) & BIT_MASK_BEQ_HW_IDX) << BIT_SHIFT_BEQ_HW_IDX)


#define BIT_SHIFT_BEQ_HOST_IDX 0
#define BIT_MASK_BEQ_HOST_IDX 0xfff
#define BIT_BEQ_HOST_IDX(x) (((x) & BIT_MASK_BEQ_HOST_IDX) << BIT_SHIFT_BEQ_HOST_IDX)


//2 REG_BKQ_TXBD_IDX

#define BIT_SHIFT_BKQ_HW_IDX 16
#define BIT_MASK_BKQ_HW_IDX 0xfff
#define BIT_BKQ_HW_IDX(x) (((x) & BIT_MASK_BKQ_HW_IDX) << BIT_SHIFT_BKQ_HW_IDX)


#define BIT_SHIFT_BKQ_HOST_IDX 0
#define BIT_MASK_BKQ_HOST_IDX 0xfff
#define BIT_BKQ_HOST_IDX(x) (((x) & BIT_MASK_BKQ_HOST_IDX) << BIT_SHIFT_BKQ_HOST_IDX)


//2 REG_MGQ_TXBD_IDX

#define BIT_SHIFT_MGQ_HW_IDX 16
#define BIT_MASK_MGQ_HW_IDX 0xfff
#define BIT_MGQ_HW_IDX(x) (((x) & BIT_MASK_MGQ_HW_IDX) << BIT_SHIFT_MGQ_HW_IDX)


#define BIT_SHIFT_MGQ_HOST_IDX 0
#define BIT_MASK_MGQ_HOST_IDX 0xfff
#define BIT_MGQ_HOST_IDX(x) (((x) & BIT_MASK_MGQ_HOST_IDX) << BIT_SHIFT_MGQ_HOST_IDX)


//2 REG_RXQ_RXBD_IDX

#define BIT_SHIFT_RXQ_HW_IDX 16
#define BIT_MASK_RXQ_HW_IDX 0xfff
#define BIT_RXQ_HW_IDX(x) (((x) & BIT_MASK_RXQ_HW_IDX) << BIT_SHIFT_RXQ_HW_IDX)


#define BIT_SHIFT_RXQ_HOST_IDX 0
#define BIT_MASK_RXQ_HOST_IDX 0xfff
#define BIT_RXQ_HOST_IDX(x) (((x) & BIT_MASK_RXQ_HOST_IDX) << BIT_SHIFT_RXQ_HOST_IDX)


//2 REG_HI0Q_TXBD_IDX

#define BIT_SHIFT_HI0Q_HW_IDX 16
#define BIT_MASK_HI0Q_HW_IDX 0xfff
#define BIT_HI0Q_HW_IDX(x) (((x) & BIT_MASK_HI0Q_HW_IDX) << BIT_SHIFT_HI0Q_HW_IDX)


#define BIT_SHIFT_HI0Q_HOST_IDX 0
#define BIT_MASK_HI0Q_HOST_IDX 0xfff
#define BIT_HI0Q_HOST_IDX(x) (((x) & BIT_MASK_HI0Q_HOST_IDX) << BIT_SHIFT_HI0Q_HOST_IDX)


//2 REG_HI1Q_TXBD_IDX

#define BIT_SHIFT_HI1Q_HW_IDX 16
#define BIT_MASK_HI1Q_HW_IDX 0xfff
#define BIT_HI1Q_HW_IDX(x) (((x) & BIT_MASK_HI1Q_HW_IDX) << BIT_SHIFT_HI1Q_HW_IDX)


#define BIT_SHIFT_HI1Q_HOST_IDX 0
#define BIT_MASK_HI1Q_HOST_IDX 0xfff
#define BIT_HI1Q_HOST_IDX(x) (((x) & BIT_MASK_HI1Q_HOST_IDX) << BIT_SHIFT_HI1Q_HOST_IDX)


//2 REG_HI2Q_TXBD_IDX

#define BIT_SHIFT_HI2Q_HW_IDX 16
#define BIT_MASK_HI2Q_HW_IDX 0xfff
#define BIT_HI2Q_HW_IDX(x) (((x) & BIT_MASK_HI2Q_HW_IDX) << BIT_SHIFT_HI2Q_HW_IDX)


#define BIT_SHIFT_HI2Q_HOST_IDX 0
#define BIT_MASK_HI2Q_HOST_IDX 0xfff
#define BIT_HI2Q_HOST_IDX(x) (((x) & BIT_MASK_HI2Q_HOST_IDX) << BIT_SHIFT_HI2Q_HOST_IDX)


//2 REG_HI3Q_TXBD_IDX

#define BIT_SHIFT_HI3Q_HW_IDX 16
#define BIT_MASK_HI3Q_HW_IDX 0xfff
#define BIT_HI3Q_HW_IDX(x) (((x) & BIT_MASK_HI3Q_HW_IDX) << BIT_SHIFT_HI3Q_HW_IDX)


#define BIT_SHIFT_HI3Q_HOST_IDX 0
#define BIT_MASK_HI3Q_HOST_IDX 0xfff
#define BIT_HI3Q_HOST_IDX(x) (((x) & BIT_MASK_HI3Q_HOST_IDX) << BIT_SHIFT_HI3Q_HOST_IDX)


//2 REG_HI4Q_TXBD_IDX

#define BIT_SHIFT_HI4Q_HW_IDX 16
#define BIT_MASK_HI4Q_HW_IDX 0xfff
#define BIT_HI4Q_HW_IDX(x) (((x) & BIT_MASK_HI4Q_HW_IDX) << BIT_SHIFT_HI4Q_HW_IDX)


#define BIT_SHIFT_HI4Q_HOST_IDX 0
#define BIT_MASK_HI4Q_HOST_IDX 0xfff
#define BIT_HI4Q_HOST_IDX(x) (((x) & BIT_MASK_HI4Q_HOST_IDX) << BIT_SHIFT_HI4Q_HOST_IDX)


//2 REG_HI5Q_TXBD_IDX

#define BIT_SHIFT_HI5Q_HW_IDX 16
#define BIT_MASK_HI5Q_HW_IDX 0xfff
#define BIT_HI5Q_HW_IDX(x) (((x) & BIT_MASK_HI5Q_HW_IDX) << BIT_SHIFT_HI5Q_HW_IDX)


#define BIT_SHIFT_HI5Q_HOST_IDX 0
#define BIT_MASK_HI5Q_HOST_IDX 0xfff
#define BIT_HI5Q_HOST_IDX(x) (((x) & BIT_MASK_HI5Q_HOST_IDX) << BIT_SHIFT_HI5Q_HOST_IDX)


//2 REG_HI6Q_TXBD_IDX

#define BIT_SHIFT_HI6Q_HW_IDX 16
#define BIT_MASK_HI6Q_HW_IDX 0xfff
#define BIT_HI6Q_HW_IDX(x) (((x) & BIT_MASK_HI6Q_HW_IDX) << BIT_SHIFT_HI6Q_HW_IDX)


#define BIT_SHIFT_HI6Q_HOST_IDX 0
#define BIT_MASK_HI6Q_HOST_IDX 0xfff
#define BIT_HI6Q_HOST_IDX(x) (((x) & BIT_MASK_HI6Q_HOST_IDX) << BIT_SHIFT_HI6Q_HOST_IDX)


//2 REG_HI7Q_TXBD_IDX

#define BIT_SHIFT_HI7Q_HW_IDX 16
#define BIT_MASK_HI7Q_HW_IDX 0xfff
#define BIT_HI7Q_HW_IDX(x) (((x) & BIT_MASK_HI7Q_HW_IDX) << BIT_SHIFT_HI7Q_HW_IDX)


#define BIT_SHIFT_HI7Q_HOST_IDX 0
#define BIT_MASK_HI7Q_HOST_IDX 0xfff
#define BIT_HI7Q_HOST_IDX(x) (((x) & BIT_MASK_HI7Q_HOST_IDX) << BIT_SHIFT_HI7Q_HOST_IDX)


//2 REG_DBG_SEL_V1

#define BIT_SHIFT_DBG_SEL_V1 0
#define BIT_MASK_DBG_SEL_V1 0xff
#define BIT_DBG_SEL_V1(x) (((x) & BIT_MASK_DBG_SEL_V1) << BIT_SHIFT_DBG_SEL_V1)


//2 REG_AXI_HRPWM1_V1

#define BIT_SHIFT_AXI_HRPWM 0
#define BIT_MASK_AXI_HRPWM 0xff
#define BIT_AXI_HRPWM(x) (((x) & BIT_MASK_AXI_HRPWM) << BIT_SHIFT_AXI_HRPWM)


//2 REG_AXI_HCPWM1_V1

#define BIT_SHIFT_AXI_HCPWM 0
#define BIT_MASK_AXI_HCPWM 0xff
#define BIT_AXI_HCPWM(x) (((x) & BIT_MASK_AXI_HCPWM) << BIT_SHIFT_AXI_HCPWM)


//2 REG_AXI_CTRL2
#define BIT_DIS_TXDMA_PRE_8710C BIT(7)
#define BIT_DIS_RXDMA_PRE_8710C BIT(6)

#define BIT_SHIFT_HPS_CLKR_AXI 4
#define BIT_MASK_HPS_CLKR_AXI 0x3
#define BIT_HPS_CLKR_AXI(x) (((x) & BIT_MASK_HPS_CLKR_AXI) << BIT_SHIFT_HPS_CLKR_AXI)

#define BIT_AXI_INT_8710C BIT(3)
#define BIT_TXFLAG_EXIT_L1_EN_8710C BIT(2)
#define BIT_EN_RXDMA_ALIGN_8710C BIT(1)
#define BIT_EN_TXDMA_ALIGN_8710C BIT(0)

//2 REG_AXI_HRPWM2_V1

#define BIT_SHIFT_AXI_HRPWM2 0
#define BIT_MASK_AXI_HRPWM2 0xffff
#define BIT_AXI_HRPWM2(x) (((x) & BIT_MASK_AXI_HRPWM2) << BIT_SHIFT_AXI_HRPWM2)


//2 REG_AXI_HCPWM2_V1

#define BIT_SHIFT_AXI_HCPWM2 0
#define BIT_MASK_AXI_HCPWM2 0xffff
#define BIT_AXI_HCPWM2(x) (((x) & BIT_MASK_AXI_HCPWM2) << BIT_SHIFT_AXI_HCPWM2)


//2 REG_AXI_H2C_MSG_V1

#define BIT_SHIFT_DRV2FW_INFO 0
#define BIT_MASK_DRV2FW_INFO 0xffffffffL
#define BIT_DRV2FW_INFO(x) (((x) & BIT_MASK_DRV2FW_INFO) << BIT_SHIFT_DRV2FW_INFO)


//2 REG_AXI_C2H_MSG_V1

#define BIT_SHIFT_HCI_AXI_C2H_MSG 0
#define BIT_MASK_HCI_AXI_C2H_MSG 0xffffffffL
#define BIT_HCI_AXI_C2H_MSG(x) (((x) & BIT_MASK_HCI_AXI_C2H_MSG) << BIT_SHIFT_HCI_AXI_C2H_MSG)


//2 REG_AXIDMA_ISR
#define BIT_SETBCNDERR7_8710C BIT(31)
#define BIT_SETBCNDERR6_8710C BIT(30)
#define BIT_SETBCNDERR5_8710C BIT(29)
#define BIT_SETBCNDERR4_8710C BIT(28)
#define BIT_SETBCNDERR3_8710C BIT(27)
#define BIT_SETBCNDERR2_8710C BIT(26)
#define BIT_SETBCNDERR1_8710C BIT(25)
#define BIT_SETBCNDERR0_8710C BIT(24)
#define BIT_SETBCNDOK7_8710C BIT(23)
#define BIT_SETBCNDOK6_8710C BIT(22)
#define BIT_SETBCNDOK5_8710C BIT(21)
#define BIT_SETBCNDOK4_8710C BIT(20)
#define BIT_SETBCNDOK3_8710C BIT(19)
#define BIT_SETBCNDOK2_8710C BIT(18)
#define BIT_SETBCNDOK1_8710C BIT(17)
#define BIT_SETBCNDOK0_8710C BIT(16)
#define BIT_SETHIGHDOK_8710C BIT(8)
#define BIT_SETMGDOK_8710C BIT(6)
#define BIT_SETBKDOK_8710C BIT(5)
#define BIT_SETBEDOK_8710C BIT(4)
#define BIT_SETVIDOK_8710C BIT(3)
#define BIT_SETVODOK_8710C BIT(2)
#define BIT_SETRDU_8710C BIT(1)
#define BIT_SETRXOK_8710C BIT(0)

//2 REG_AXIDMA_IMR
#define BIT_SETBCNDERR7_MSK_8710C BIT(31)
#define BIT_SETBCNDERR6_MSK_8710C BIT(30)
#define BIT_SETBCNDERR5_MSK_8710C BIT(29)
#define BIT_SETBCNDERR4_MSK_8710C BIT(28)
#define BIT_SETBCNDERR3_MSK_8710C BIT(27)
#define BIT_SETBCNDERR2_MSK_8710C BIT(26)
#define BIT_SETBCNDERR1_MSK_8710C BIT(25)
#define BIT_SETBCNDERR0_MSK_8710C BIT(24)
#define BIT_SETBCNDOK7_MSK_8710C BIT(23)
#define BIT_SETBCNDOK6_MSK_8710C BIT(22)
#define BIT_SETBCNDOK5_MSK_8710C BIT(21)
#define BIT_SETBCNDOK4_MSK_8710C BIT(20)
#define BIT_SETBCNDOK3_MSK_8710C BIT(19)
#define BIT_SETBCNDOK2_MSK_8710C BIT(18)
#define BIT_SETBCNDOK1_MSK_8710C BIT(17)
#define BIT_SETBCNDOK0_MSK_8710C BIT(16)
#define BIT_SETHIGHDOK_MSK_8710C BIT(8)
#define BIT_SETMGDOK_MSK_8710C BIT(6)
#define BIT_SETBKDOK_MSK_8710C BIT(5)
#define BIT_SETBEDOK_MSK_8710C BIT(4)
#define BIT_SETVIDOK_MSK_8710C BIT(3)
#define BIT_SETVODOK_MSK_8710C BIT(2)
#define BIT_SETRDU_MSK_8710C BIT(1)
#define BIT_SETRXOK_MSK_8710C BIT(0)

//2 REG_DBG_FLAG_V1
#define BIT_RX_STUCK_8710C BIT(9)
#define BIT_TX_STUCK_8710C BIT(8)
#define BIT_MST_BUSY_8710C BIT(3)
#define BIT_RXBUF_ZERO_ERROR_8710C BIT(2)
#define BIT_TXDESC_SIZE_ERROR_8710C BIT(1)
#define BIT_EN_STUCK_DBG_8710C BIT(0)

//2 REG_NOT_VALID

//2 REG_AXIDMA_MIX_CFG

#define BIT_SHIFT_WATCH_DOG_RECORD_V1 10
#define BIT_MASK_WATCH_DOG_RECORD_V1 0x3fff
#define BIT_WATCH_DOG_RECORD_V1(x) (((x) & BIT_MASK_WATCH_DOG_RECORD_V1) << BIT_SHIFT_WATCH_DOG_RECORD_V1)

#define BIT_R_IO_TIMEOUT_FLAG_V1_8710C BIT(9)
#define BIT_EN_WATCH_DOG_8710C BIT(8)

//2 REG_HCI_MIX_CFG

#define BIT_SHIFT_DBG_SEL 25
#define BIT_MASK_DBG_SEL 0x3
#define BIT_DBG_SEL(x) (((x) & BIT_MASK_DBG_SEL) << BIT_SHIFT_DBG_SEL)

#define BIT_EN_OUTSTD_8710C BIT(24)

#define BIT_SHIFT_RDE_SFF_WR_PTR 15
#define BIT_MASK_RDE_SFF_WR_PTR 0x1f
#define BIT_RDE_SFF_WR_PTR(x) (((x) & BIT_MASK_RDE_SFF_WR_PTR) << BIT_SHIFT_RDE_SFF_WR_PTR)


#define BIT_SHIFT_RDE_SFF_RD_PTR 10
#define BIT_MASK_RDE_SFF_RD_PTR 0x1f
#define BIT_RDE_SFF_RD_PTR(x) (((x) & BIT_MASK_RDE_SFF_RD_PTR) << BIT_SHIFT_RDE_SFF_RD_PTR)


#define BIT_SHIFT_TDE_SFF_WR_PTR 5
#define BIT_MASK_TDE_SFF_WR_PTR 0x1f
#define BIT_TDE_SFF_WR_PTR(x) (((x) & BIT_MASK_TDE_SFF_WR_PTR) << BIT_SHIFT_TDE_SFF_WR_PTR)


#define BIT_SHIFT_TDE_SFF_RD_PTR 0
#define BIT_MASK_TDE_SFF_RD_PTR 0x1f
#define BIT_TDE_SFF_RD_PTR(x) (((x) & BIT_MASK_TDE_SFF_RD_PTR) << BIT_SHIFT_TDE_SFF_RD_PTR)


//2 REG_NOT_VALID

//2 REG_Q0_INFO

#define BIT_SHIFT_QUEUEMACID_Q0_V1 25
#define BIT_MASK_QUEUEMACID_Q0_V1 0x7f
#define BIT_QUEUEMACID_Q0_V1(x) (((x) & BIT_MASK_QUEUEMACID_Q0_V1) << BIT_SHIFT_QUEUEMACID_Q0_V1)


#define BIT_SHIFT_QUEUEAC_Q0_V1 23
#define BIT_MASK_QUEUEAC_Q0_V1 0x3
#define BIT_QUEUEAC_Q0_V1(x) (((x) & BIT_MASK_QUEUEAC_Q0_V1) << BIT_SHIFT_QUEUEAC_Q0_V1)


#define BIT_SHIFT_TAIL_PKT_Q0_V1 15
#define BIT_MASK_TAIL_PKT_Q0_V1 0xff
#define BIT_TAIL_PKT_Q0_V1(x) (((x) & BIT_MASK_TAIL_PKT_Q0_V1) << BIT_SHIFT_TAIL_PKT_Q0_V1)


#define BIT_SHIFT_PKT_NUM_Q0_V1 8
#define BIT_MASK_PKT_NUM_Q0_V1 0x7f
#define BIT_PKT_NUM_Q0_V1(x) (((x) & BIT_MASK_PKT_NUM_Q0_V1) << BIT_SHIFT_PKT_NUM_Q0_V1)


#define BIT_SHIFT_HEAD_PKT_Q0 0
#define BIT_MASK_HEAD_PKT_Q0 0xff
#define BIT_HEAD_PKT_Q0(x) (((x) & BIT_MASK_HEAD_PKT_Q0) << BIT_SHIFT_HEAD_PKT_Q0)


//2 REG_Q1_INFO

#define BIT_SHIFT_QUEUEMACID_Q1_V1 25
#define BIT_MASK_QUEUEMACID_Q1_V1 0x7f
#define BIT_QUEUEMACID_Q1_V1(x) (((x) & BIT_MASK_QUEUEMACID_Q1_V1) << BIT_SHIFT_QUEUEMACID_Q1_V1)


#define BIT_SHIFT_QUEUEAC_Q1_V1 23
#define BIT_MASK_QUEUEAC_Q1_V1 0x3
#define BIT_QUEUEAC_Q1_V1(x) (((x) & BIT_MASK_QUEUEAC_Q1_V1) << BIT_SHIFT_QUEUEAC_Q1_V1)


#define BIT_SHIFT_TAIL_PKT_Q1_V1 15
#define BIT_MASK_TAIL_PKT_Q1_V1 0xff
#define BIT_TAIL_PKT_Q1_V1(x) (((x) & BIT_MASK_TAIL_PKT_Q1_V1) << BIT_SHIFT_TAIL_PKT_Q1_V1)


#define BIT_SHIFT_PKT_NUM_Q1_V1 8
#define BIT_MASK_PKT_NUM_Q1_V1 0x7f
#define BIT_PKT_NUM_Q1_V1(x) (((x) & BIT_MASK_PKT_NUM_Q1_V1) << BIT_SHIFT_PKT_NUM_Q1_V1)


#define BIT_SHIFT_HEAD_PKT_Q1 0
#define BIT_MASK_HEAD_PKT_Q1 0xff
#define BIT_HEAD_PKT_Q1(x) (((x) & BIT_MASK_HEAD_PKT_Q1) << BIT_SHIFT_HEAD_PKT_Q1)


//2 REG_Q2_INFO

#define BIT_SHIFT_QUEUEMACID_Q2_V1 25
#define BIT_MASK_QUEUEMACID_Q2_V1 0x7f
#define BIT_QUEUEMACID_Q2_V1(x) (((x) & BIT_MASK_QUEUEMACID_Q2_V1) << BIT_SHIFT_QUEUEMACID_Q2_V1)


#define BIT_SHIFT_QUEUEAC_Q2_V1 23
#define BIT_MASK_QUEUEAC_Q2_V1 0x3
#define BIT_QUEUEAC_Q2_V1(x) (((x) & BIT_MASK_QUEUEAC_Q2_V1) << BIT_SHIFT_QUEUEAC_Q2_V1)


#define BIT_SHIFT_TAIL_PKT_Q2_V1 15
#define BIT_MASK_TAIL_PKT_Q2_V1 0xff
#define BIT_TAIL_PKT_Q2_V1(x) (((x) & BIT_MASK_TAIL_PKT_Q2_V1) << BIT_SHIFT_TAIL_PKT_Q2_V1)


#define BIT_SHIFT_PKT_NUM_Q2_V1 8
#define BIT_MASK_PKT_NUM_Q2_V1 0x7f
#define BIT_PKT_NUM_Q2_V1(x) (((x) & BIT_MASK_PKT_NUM_Q2_V1) << BIT_SHIFT_PKT_NUM_Q2_V1)


#define BIT_SHIFT_HEAD_PKT_Q2 0
#define BIT_MASK_HEAD_PKT_Q2 0xff
#define BIT_HEAD_PKT_Q2(x) (((x) & BIT_MASK_HEAD_PKT_Q2) << BIT_SHIFT_HEAD_PKT_Q2)


//2 REG_Q3_INFO

#define BIT_SHIFT_QUEUEMACID_Q3_V1 25
#define BIT_MASK_QUEUEMACID_Q3_V1 0x7f
#define BIT_QUEUEMACID_Q3_V1(x) (((x) & BIT_MASK_QUEUEMACID_Q3_V1) << BIT_SHIFT_QUEUEMACID_Q3_V1)


#define BIT_SHIFT_QUEUEAC_Q3_V1 23
#define BIT_MASK_QUEUEAC_Q3_V1 0x3
#define BIT_QUEUEAC_Q3_V1(x) (((x) & BIT_MASK_QUEUEAC_Q3_V1) << BIT_SHIFT_QUEUEAC_Q3_V1)


#define BIT_SHIFT_TAIL_PKT_Q3_V1 15
#define BIT_MASK_TAIL_PKT_Q3_V1 0xff
#define BIT_TAIL_PKT_Q3_V1(x) (((x) & BIT_MASK_TAIL_PKT_Q3_V1) << BIT_SHIFT_TAIL_PKT_Q3_V1)


#define BIT_SHIFT_PKT_NUM_Q3_V1 8
#define BIT_MASK_PKT_NUM_Q3_V1 0x7f
#define BIT_PKT_NUM_Q3_V1(x) (((x) & BIT_MASK_PKT_NUM_Q3_V1) << BIT_SHIFT_PKT_NUM_Q3_V1)


#define BIT_SHIFT_HEAD_PKT_Q3 0
#define BIT_MASK_HEAD_PKT_Q3 0xff
#define BIT_HEAD_PKT_Q3(x) (((x) & BIT_MASK_HEAD_PKT_Q3) << BIT_SHIFT_HEAD_PKT_Q3)


//2 REG_MGQ_INFO

#define BIT_SHIFT_QUEUEMACID_MGQ_V1 25
#define BIT_MASK_QUEUEMACID_MGQ_V1 0x7f
#define BIT_QUEUEMACID_MGQ_V1(x) (((x) & BIT_MASK_QUEUEMACID_MGQ_V1) << BIT_SHIFT_QUEUEMACID_MGQ_V1)


#define BIT_SHIFT_QUEUEAC_MGQ_V1 23
#define BIT_MASK_QUEUEAC_MGQ_V1 0x3
#define BIT_QUEUEAC_MGQ_V1(x) (((x) & BIT_MASK_QUEUEAC_MGQ_V1) << BIT_SHIFT_QUEUEAC_MGQ_V1)


#define BIT_SHIFT_TAIL_PKT_MGQ_V1 15
#define BIT_MASK_TAIL_PKT_MGQ_V1 0xff
#define BIT_TAIL_PKT_MGQ_V1(x) (((x) & BIT_MASK_TAIL_PKT_MGQ_V1) << BIT_SHIFT_TAIL_PKT_MGQ_V1)


#define BIT_SHIFT_PKT_NUM_MGQ_V1 8
#define BIT_MASK_PKT_NUM_MGQ_V1 0x7f
#define BIT_PKT_NUM_MGQ_V1(x) (((x) & BIT_MASK_PKT_NUM_MGQ_V1) << BIT_SHIFT_PKT_NUM_MGQ_V1)


#define BIT_SHIFT_HEAD_PKT_MGQ 0
#define BIT_MASK_HEAD_PKT_MGQ 0xff
#define BIT_HEAD_PKT_MGQ(x) (((x) & BIT_MASK_HEAD_PKT_MGQ) << BIT_SHIFT_HEAD_PKT_MGQ)


//2 REG_HIQ_INFO

#define BIT_SHIFT_QUEUEMACID_HIQ_V1 25
#define BIT_MASK_QUEUEMACID_HIQ_V1 0x7f
#define BIT_QUEUEMACID_HIQ_V1(x) (((x) & BIT_MASK_QUEUEMACID_HIQ_V1) << BIT_SHIFT_QUEUEMACID_HIQ_V1)


#define BIT_SHIFT_QUEUEAC_HIQ_V1 23
#define BIT_MASK_QUEUEAC_HIQ_V1 0x3
#define BIT_QUEUEAC_HIQ_V1(x) (((x) & BIT_MASK_QUEUEAC_HIQ_V1) << BIT_SHIFT_QUEUEAC_HIQ_V1)


#define BIT_SHIFT_TAIL_PKT_HIQ_V1 15
#define BIT_MASK_TAIL_PKT_HIQ_V1 0xff
#define BIT_TAIL_PKT_HIQ_V1(x) (((x) & BIT_MASK_TAIL_PKT_HIQ_V1) << BIT_SHIFT_TAIL_PKT_HIQ_V1)


#define BIT_SHIFT_PKT_NUM_HIQ_V1 8
#define BIT_MASK_PKT_NUM_HIQ_V1 0x7f
#define BIT_PKT_NUM_HIQ_V1(x) (((x) & BIT_MASK_PKT_NUM_HIQ_V1) << BIT_SHIFT_PKT_NUM_HIQ_V1)


#define BIT_SHIFT_HEAD_PKT_HIQ 0
#define BIT_MASK_HEAD_PKT_HIQ 0xff
#define BIT_HEAD_PKT_HIQ(x) (((x) & BIT_MASK_HEAD_PKT_HIQ) << BIT_SHIFT_HEAD_PKT_HIQ)


//2 REG_BCNQ_INFO

#define BIT_SHIFT_PKT_NUM_BCNQ 8
#define BIT_MASK_PKT_NUM_BCNQ 0xff
#define BIT_PKT_NUM_BCNQ(x) (((x) & BIT_MASK_PKT_NUM_BCNQ) << BIT_SHIFT_PKT_NUM_BCNQ)


#define BIT_SHIFT_BCNQ_HEAD_PG 0
#define BIT_MASK_BCNQ_HEAD_PG 0xff
#define BIT_BCNQ_HEAD_PG(x) (((x) & BIT_MASK_BCNQ_HEAD_PG) << BIT_SHIFT_BCNQ_HEAD_PG)


//2 REG_TXPKT_EMPTY
#define BIT_EVTQ_EMPTY_8710C BIT(12)
#define BIT_BCNQ_EMPTY_8710C BIT(11)
#define BIT_HQQ_EMPTY_8710C BIT(10)
#define BIT_MQQ_EMPTY_8710C BIT(9)
#define BIT_MGQ_CPU_EMPTY_8710C BIT(8)
#define BIT_AC7Q_EMPTY_8710C BIT(7)
#define BIT_AC6Q_EMPTY_8710C BIT(6)
#define BIT_AC5Q_EMPTY_8710C BIT(5)
#define BIT_AC4Q_EMPTY_8710C BIT(4)
#define BIT_AC3Q_EMPTY_8710C BIT(3)
#define BIT_AC2Q_EMPTY_8710C BIT(2)
#define BIT_AC1Q_EMPTY_8710C BIT(1)
#define BIT_AC0Q_EMPTY_8710C BIT(0)

//2 REG_CPU_MGQ_INFO
#define BIT_BCN_POLL2_8710C BIT(31)
#define BIT_BCN_POLL1_8710C BIT(30)
#define BIT_CPUMGT_POLL_SET_8710C BIT(29)
#define BIT_BCN_POLL_8710C BIT(28)
#define BIT_CPUMGT_POLL_CLR_8710C BIT(27)
#define BIT_EVTQ_VALID_8710C BIT(26)
#define BIT_CPUMGQ_FW_NUM_8710C BIT(8)

#define BIT_SHIFT_CPUMGQ_HEAD_PG 0
#define BIT_MASK_CPUMGQ_HEAD_PG 0xff
#define BIT_CPUMGQ_HEAD_PG(x) (((x) & BIT_MASK_CPUMGQ_HEAD_PG) << BIT_SHIFT_CPUMGQ_HEAD_PG)


//2 REG_FWHW_TXQ_CTRL
#define BIT_RTS_LIMIT_IN_OFDM_8710C BIT(23)
#define BIT_EN_BCNQ_DL_8710C BIT(22)
#define BIT_EN_RD_RESP_NAV_BK_8710C BIT(21)
#define BIT_EN_WR_FREE_TAIL_8710C BIT(20)
#define BIT_TXRPT_DIS_8710C BIT(19)
#define BIT_EN_RTY_BK_COND_8710C BIT(16)

#define BIT_SHIFT_EN_QUEUE_RPT 8
#define BIT_MASK_EN_QUEUE_RPT 0xff
#define BIT_EN_QUEUE_RPT(x) (((x) & BIT_MASK_EN_QUEUE_RPT) << BIT_SHIFT_EN_QUEUE_RPT)

#define BIT_EN_RTY_BK_8710C BIT(7)
#define BIT_EN_USE_INI_RAT_8710C BIT(6)
#define BIT_EN_RTS_NAV_BK_8710C BIT(5)
#define BIT_DIS_SSN_CHECK_8710C BIT(4)
#define BIT_MACID_MATCH_RTS_8710C BIT(3)
#define BIT_EN_EVTQ_RPT_8710C BIT(2)
#define BIT_HWSEQ_EVTQ_EN_8710C BIT(1)

//2 REG_HWSEQ_CTRL
#define BIT_HWSEQ_CPUM_EN_8710C BIT(7)
#define BIT_HWSEQ_BCN_EN_8710C BIT(6)
#define BIT_HWSEQ_HI_EN_8710C BIT(5)
#define BIT_HWSEQ_MGT_EN_8710C BIT(4)
#define BIT_HWSEQ_BK_EN_8710C BIT(3)
#define BIT_HWSEQ_BE_EN_8710C BIT(2)
#define BIT_HWSEQ_VI_EN_8710C BIT(1)
#define BIT_HWSEQ_VO_EN_8710C BIT(0)

//2 REG_BCNQ_BDNY

#define BIT_SHIFT_BCNQ_PGBNDY 0
#define BIT_MASK_BCNQ_PGBNDY 0xff
#define BIT_BCNQ_PGBNDY(x) (((x) & BIT_MASK_BCNQ_PGBNDY) << BIT_SHIFT_BCNQ_PGBNDY)


//2 REG_MGQ_BDNY

#define BIT_SHIFT_MGQ_PGBNDY 0
#define BIT_MASK_MGQ_PGBNDY 0xff
#define BIT_MGQ_PGBNDY(x) (((x) & BIT_MASK_MGQ_PGBNDY) << BIT_SHIFT_MGQ_PGBNDY)


//2 REG_LIFETIME_EN
#define BIT_BT_INT_CPU_8710C BIT(7)
#define BIT_BT_INT_PTA_8710C BIT(6)
#define BIT_SPERPT_ENTRY_8710C BIT(5)
#define BIT_RTYCNT_FB_8710C BIT(4)
#define BIT_LIFETIME_BK_EN_8710C BIT(3)
#define BIT_LIFETIME_BE_EN_8710C BIT(2)
#define BIT_LIFETIME_VI_EN_8710C BIT(1)
#define BIT_LIFETIME_VO_EN_8710C BIT(0)

//2 REG_FW_FREE_TAIL

#define BIT_SHIFT_FW_FREE_TAIL 0
#define BIT_MASK_FW_FREE_TAIL 0xff
#define BIT_FW_FREE_TAIL(x) (((x) & BIT_MASK_FW_FREE_TAIL) << BIT_SHIFT_FW_FREE_TAIL)


//2 REG_SPEC_SIFS

#define BIT_SHIFT_SPEC_SIFS_OFDM_PTCL 8
#define BIT_MASK_SPEC_SIFS_OFDM_PTCL 0xff
#define BIT_SPEC_SIFS_OFDM_PTCL(x) (((x) & BIT_MASK_SPEC_SIFS_OFDM_PTCL) << BIT_SHIFT_SPEC_SIFS_OFDM_PTCL)


#define BIT_SHIFT_SPEC_SIFS_CCK_PTCL 0
#define BIT_MASK_SPEC_SIFS_CCK_PTCL 0xff
#define BIT_SPEC_SIFS_CCK_PTCL(x) (((x) & BIT_MASK_SPEC_SIFS_CCK_PTCL) << BIT_SHIFT_SPEC_SIFS_CCK_PTCL)


//2 REG_RETRY_LIMIT

#define BIT_SHIFT_SRL 8
#define BIT_MASK_SRL 0x3f
#define BIT_SRL(x) (((x) & BIT_MASK_SRL) << BIT_SHIFT_SRL)


#define BIT_SHIFT_LRL 0
#define BIT_MASK_LRL 0x3f
#define BIT_LRL(x) (((x) & BIT_MASK_LRL) << BIT_SHIFT_LRL)


//2 REG_TXBF_CTRL
#define BIT_R_ENABLE_NDPA_8710C BIT(31)
#define BIT_USE_NDPA_PARAMETER_8710C BIT(30)
#define BIT_R_PROP_TXBF_8710C BIT(29)
#define BIT_R_EN_NDPA_INT_8710C BIT(28)
#define BIT_R_TXBF1_80M_8710C BIT(27)
#define BIT_R_TXBF1_40M_8710C BIT(26)
#define BIT_R_TXBF1_20M_8710C BIT(25)

#define BIT_SHIFT_R_TXBF1_AID 16
#define BIT_MASK_R_TXBF1_AID 0x1ff
#define BIT_R_TXBF1_AID(x) (((x) & BIT_MASK_R_TXBF1_AID) << BIT_SHIFT_R_TXBF1_AID)

#define BIT_BCN_NOBLOCK_NDP_8710C BIT(14)
#define BIT_R_TXBF0_80M_8710C BIT(11)
#define BIT_R_TXBF0_40M_8710C BIT(10)
#define BIT_R_TXBF0_20M_8710C BIT(9)

#define BIT_SHIFT_R_TXBF0_AID 0
#define BIT_MASK_R_TXBF0_AID 0x1ff
#define BIT_R_TXBF0_AID(x) (((x) & BIT_MASK_R_TXBF0_AID) << BIT_SHIFT_R_TXBF0_AID)


//2 REG_DARFRC

#define BIT_SHIFT_DARF_RC8 (56 & CPU_OPT_WIDTH)
#define BIT_MASK_DARF_RC8 0x1f
#define BIT_DARF_RC8(x) (((x) & BIT_MASK_DARF_RC8) << BIT_SHIFT_DARF_RC8)


#define BIT_SHIFT_DARF_RC7 (48 & CPU_OPT_WIDTH)
#define BIT_MASK_DARF_RC7 0x1f
#define BIT_DARF_RC7(x) (((x) & BIT_MASK_DARF_RC7) << BIT_SHIFT_DARF_RC7)


#define BIT_SHIFT_DARF_RC6 (40 & CPU_OPT_WIDTH)
#define BIT_MASK_DARF_RC6 0x1f
#define BIT_DARF_RC6(x) (((x) & BIT_MASK_DARF_RC6) << BIT_SHIFT_DARF_RC6)


#define BIT_SHIFT_DARF_RC5 (32 & CPU_OPT_WIDTH)
#define BIT_MASK_DARF_RC5 0x1f
#define BIT_DARF_RC5(x) (((x) & BIT_MASK_DARF_RC5) << BIT_SHIFT_DARF_RC5)


#define BIT_SHIFT_DARF_RC4 24
#define BIT_MASK_DARF_RC4 0x1f
#define BIT_DARF_RC4(x) (((x) & BIT_MASK_DARF_RC4) << BIT_SHIFT_DARF_RC4)


#define BIT_SHIFT_DARF_RC3 16
#define BIT_MASK_DARF_RC3 0x1f
#define BIT_DARF_RC3(x) (((x) & BIT_MASK_DARF_RC3) << BIT_SHIFT_DARF_RC3)


#define BIT_SHIFT_DARF_RC2 8
#define BIT_MASK_DARF_RC2 0x1f
#define BIT_DARF_RC2(x) (((x) & BIT_MASK_DARF_RC2) << BIT_SHIFT_DARF_RC2)


#define BIT_SHIFT_DARF_RC1 0
#define BIT_MASK_DARF_RC1 0x1f
#define BIT_DARF_RC1(x) (((x) & BIT_MASK_DARF_RC1) << BIT_SHIFT_DARF_RC1)


//2 REG_RARFRC

#define BIT_SHIFT_RARF_RC8 (56 & CPU_OPT_WIDTH)
#define BIT_MASK_RARF_RC8 0x1f
#define BIT_RARF_RC8(x) (((x) & BIT_MASK_RARF_RC8) << BIT_SHIFT_RARF_RC8)


#define BIT_SHIFT_RARF_RC7 (48 & CPU_OPT_WIDTH)
#define BIT_MASK_RARF_RC7 0x1f
#define BIT_RARF_RC7(x) (((x) & BIT_MASK_RARF_RC7) << BIT_SHIFT_RARF_RC7)


#define BIT_SHIFT_RARF_RC6 (40 & CPU_OPT_WIDTH)
#define BIT_MASK_RARF_RC6 0x1f
#define BIT_RARF_RC6(x) (((x) & BIT_MASK_RARF_RC6) << BIT_SHIFT_RARF_RC6)


#define BIT_SHIFT_RARF_RC5 (32 & CPU_OPT_WIDTH)
#define BIT_MASK_RARF_RC5 0x1f
#define BIT_RARF_RC5(x) (((x) & BIT_MASK_RARF_RC5) << BIT_SHIFT_RARF_RC5)


#define BIT_SHIFT_RARF_RC4 24
#define BIT_MASK_RARF_RC4 0x1f
#define BIT_RARF_RC4(x) (((x) & BIT_MASK_RARF_RC4) << BIT_SHIFT_RARF_RC4)


#define BIT_SHIFT_RARF_RC3 16
#define BIT_MASK_RARF_RC3 0x1f
#define BIT_RARF_RC3(x) (((x) & BIT_MASK_RARF_RC3) << BIT_SHIFT_RARF_RC3)


#define BIT_SHIFT_RARF_RC2 8
#define BIT_MASK_RARF_RC2 0x1f
#define BIT_RARF_RC2(x) (((x) & BIT_MASK_RARF_RC2) << BIT_SHIFT_RARF_RC2)


#define BIT_SHIFT_RARF_RC1 0
#define BIT_MASK_RARF_RC1 0x1f
#define BIT_RARF_RC1(x) (((x) & BIT_MASK_RARF_RC1) << BIT_SHIFT_RARF_RC1)


//2 REG_RRSR

#define BIT_SHIFT_RRSR_RSC 21
#define BIT_MASK_RRSR_RSC 0x3
#define BIT_RRSR_RSC(x) (((x) & BIT_MASK_RRSR_RSC) << BIT_SHIFT_RRSR_RSC)

#define BIT_RRSR_BW_8710C BIT(20)

#define BIT_SHIFT_RRSC_BITMAP 0
#define BIT_MASK_RRSC_BITMAP 0xfffff
#define BIT_RRSC_BITMAP(x) (((x) & BIT_MASK_RRSC_BITMAP) << BIT_SHIFT_RRSC_BITMAP)


//2 REG_ARFR0

#define BIT_SHIFT_ARFR0_V1 0
#define BIT_MASK_ARFR0_V1 0xffffffffffffffffL
#define BIT_ARFR0_V1(x) (((x) & BIT_MASK_ARFR0_V1) << BIT_SHIFT_ARFR0_V1)


//2 REG_ARFR1_V1

#define BIT_SHIFT_ARFR1_V1 0
#define BIT_MASK_ARFR1_V1 0xffffffffffffffffL
#define BIT_ARFR1_V1(x) (((x) & BIT_MASK_ARFR1_V1) << BIT_SHIFT_ARFR1_V1)


//2 REG_CCK_CHECK
#define BIT_CHECK_CCK_EN_8710C BIT(7)
#define BIT_EN_BCN_PKT_REL_8710C BIT(6)
#define BIT_BCN_PORT_SEL_8710C BIT(5)
#define BIT_MOREDATA_BYPASS_8710C BIT(4)
#define BIT_EN_CLR_CMD_REL_BCN_PKT_8710C BIT(3)
#define BIT_EN_SET_MOREDATA_8710C BIT(2)
#define BIT_DIS_CLEAR_MACID_RELEASE_8710C BIT(1)
#define BIT_EN_MACID_RELEASE_8710C BIT(0)

//2 REG_BCNQ2_BDNY

#define BIT_SHIFT_BCNQ2_HEAD 0
#define BIT_MASK_BCNQ2_HEAD 0xff
#define BIT_BCNQ2_HEAD(x) (((x) & BIT_MASK_BCNQ2_HEAD) << BIT_SHIFT_BCNQ2_HEAD)


//2 REG_AMPDU_MAX_TIME

#define BIT_SHIFT_AMPDU_MAX_TIME 0
#define BIT_MASK_AMPDU_MAX_TIME 0xff
#define BIT_AMPDU_MAX_TIME(x) (((x) & BIT_MASK_AMPDU_MAX_TIME) << BIT_SHIFT_AMPDU_MAX_TIME)


//2 REG_BCNQ1_BDNY

#define BIT_SHIFT_BCNQ1_HEAD 0
#define BIT_MASK_BCNQ1_HEAD 0xff
#define BIT_BCNQ1_HEAD(x) (((x) & BIT_MASK_BCNQ1_HEAD) << BIT_SHIFT_BCNQ1_HEAD)


//2 REG_AMPDU_MAX_LENGTH

#define BIT_SHIFT_AMPDU_MAX_LENGTH 0
#define BIT_MASK_AMPDU_MAX_LENGTH 0xffffffffL
#define BIT_AMPDU_MAX_LENGTH(x) (((x) & BIT_MASK_AMPDU_MAX_LENGTH) << BIT_SHIFT_AMPDU_MAX_LENGTH)


//2 REG_ACQ_STOP
#define BIT_AC7Q_STOP_8710C BIT(7)
#define BIT_AC6Q_STOP_8710C BIT(6)
#define BIT_AC5Q_STOP_8710C BIT(5)
#define BIT_AC4Q_STOP_8710C BIT(4)
#define BIT_AC3Q_STOP_8710C BIT(3)
#define BIT_AC2Q_STOP_8710C BIT(2)
#define BIT_AC1Q_STOP_8710C BIT(1)
#define BIT_AC0Q_STOP_8710C BIT(0)

//2 REG_WMAC_LBK_BUF_HD

#define BIT_SHIFT_WMAC_LBK_BUF_HEAD 0
#define BIT_MASK_WMAC_LBK_BUF_HEAD 0xff
#define BIT_WMAC_LBK_BUF_HEAD(x) (((x) & BIT_MASK_WMAC_LBK_BUF_HEAD) << BIT_SHIFT_WMAC_LBK_BUF_HEAD)


//2 REG_NOT_VALID
#define BIT_R_EN_GNT_BT_AWAKE_8710C BIT(3)
#define BIT_DIS_RELEASE_RETRY_8710C BIT(2)
#define BIT_DIS_OQT_BLOCK_8710C BIT(1)
#define BIT_SEARCH_QUEUE_EN_8710C BIT(0)

//2 REG_NDPA_OPT_CTRL

#define BIT_SHIFT_R_NDPA_RATE 2
#define BIT_MASK_R_NDPA_RATE 0x3f
#define BIT_R_NDPA_RATE(x) (((x) & BIT_MASK_R_NDPA_RATE) << BIT_SHIFT_R_NDPA_RATE)


#define BIT_SHIFT_R_NDPA_BW 0
#define BIT_MASK_R_NDPA_BW 0x3
#define BIT_R_NDPA_BW(x) (((x) & BIT_MASK_R_NDPA_BW) << BIT_SHIFT_R_NDPA_BW)


//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_RD_RESP_PKT_TH

#define BIT_SHIFT_RD_RESP_PKT_TH 0
#define BIT_MASK_RD_RESP_PKT_TH 0x1f
#define BIT_RD_RESP_PKT_TH(x) (((x) & BIT_MASK_RD_RESP_PKT_TH) << BIT_SHIFT_RD_RESP_PKT_TH)


//2 REG_CMDQ_INFO

#define BIT_SHIFT_PKT_NUM_CMDQ_V2 24
#define BIT_MASK_PKT_NUM_CMDQ_V2 0xff
#define BIT_PKT_NUM_CMDQ_V2(x) (((x) & BIT_MASK_PKT_NUM_CMDQ_V2) << BIT_SHIFT_PKT_NUM_CMDQ_V2)


#define BIT_SHIFT_TAIL_PKT_CMDQ 16
#define BIT_MASK_TAIL_PKT_CMDQ 0xff
#define BIT_TAIL_PKT_CMDQ(x) (((x) & BIT_MASK_TAIL_PKT_CMDQ) << BIT_SHIFT_TAIL_PKT_CMDQ)


#define BIT_SHIFT_PKT_NUM_CMDQ 8
#define BIT_MASK_PKT_NUM_CMDQ 0xff
#define BIT_PKT_NUM_CMDQ(x) (((x) & BIT_MASK_PKT_NUM_CMDQ) << BIT_SHIFT_PKT_NUM_CMDQ)


#define BIT_SHIFT_HEAD_PKT_CMDQ 0
#define BIT_MASK_HEAD_PKT_CMDQ 0xff
#define BIT_HEAD_PKT_CMDQ(x) (((x) & BIT_MASK_HEAD_PKT_CMDQ) << BIT_SHIFT_HEAD_PKT_CMDQ)


//2 REG_Q4_INFO

#define BIT_SHIFT_QUEUEMACID_Q4_V1 25
#define BIT_MASK_QUEUEMACID_Q4_V1 0x7f
#define BIT_QUEUEMACID_Q4_V1(x) (((x) & BIT_MASK_QUEUEMACID_Q4_V1) << BIT_SHIFT_QUEUEMACID_Q4_V1)


#define BIT_SHIFT_QUEUEAC_Q4_V1 23
#define BIT_MASK_QUEUEAC_Q4_V1 0x3
#define BIT_QUEUEAC_Q4_V1(x) (((x) & BIT_MASK_QUEUEAC_Q4_V1) << BIT_SHIFT_QUEUEAC_Q4_V1)


#define BIT_SHIFT_TAIL_PKT_Q4_V1 15
#define BIT_MASK_TAIL_PKT_Q4_V1 0xff
#define BIT_TAIL_PKT_Q4_V1(x) (((x) & BIT_MASK_TAIL_PKT_Q4_V1) << BIT_SHIFT_TAIL_PKT_Q4_V1)


#define BIT_SHIFT_PKT_NUM_Q4_V1 8
#define BIT_MASK_PKT_NUM_Q4_V1 0x7f
#define BIT_PKT_NUM_Q4_V1(x) (((x) & BIT_MASK_PKT_NUM_Q4_V1) << BIT_SHIFT_PKT_NUM_Q4_V1)


#define BIT_SHIFT_HEAD_PKT_Q4 0
#define BIT_MASK_HEAD_PKT_Q4 0xff
#define BIT_HEAD_PKT_Q4(x) (((x) & BIT_MASK_HEAD_PKT_Q4) << BIT_SHIFT_HEAD_PKT_Q4)


//2 REG_Q5_INFO

#define BIT_SHIFT_QUEUEMACID_Q5_V1 25
#define BIT_MASK_QUEUEMACID_Q5_V1 0x7f
#define BIT_QUEUEMACID_Q5_V1(x) (((x) & BIT_MASK_QUEUEMACID_Q5_V1) << BIT_SHIFT_QUEUEMACID_Q5_V1)


#define BIT_SHIFT_QUEUEAC_Q5_V1 23
#define BIT_MASK_QUEUEAC_Q5_V1 0x3
#define BIT_QUEUEAC_Q5_V1(x) (((x) & BIT_MASK_QUEUEAC_Q5_V1) << BIT_SHIFT_QUEUEAC_Q5_V1)


#define BIT_SHIFT_TAIL_PKT_Q5_V1 15
#define BIT_MASK_TAIL_PKT_Q5_V1 0xff
#define BIT_TAIL_PKT_Q5_V1(x) (((x) & BIT_MASK_TAIL_PKT_Q5_V1) << BIT_SHIFT_TAIL_PKT_Q5_V1)


#define BIT_SHIFT_PKT_NUM_Q5_V1 8
#define BIT_MASK_PKT_NUM_Q5_V1 0x7f
#define BIT_PKT_NUM_Q5_V1(x) (((x) & BIT_MASK_PKT_NUM_Q5_V1) << BIT_SHIFT_PKT_NUM_Q5_V1)


#define BIT_SHIFT_HEAD_PKT_Q5 0
#define BIT_MASK_HEAD_PKT_Q5 0xff
#define BIT_HEAD_PKT_Q5(x) (((x) & BIT_MASK_HEAD_PKT_Q5) << BIT_SHIFT_HEAD_PKT_Q5)


//2 REG_Q6_INFO

#define BIT_SHIFT_QUEUEMACID_Q6_V1 25
#define BIT_MASK_QUEUEMACID_Q6_V1 0x7f
#define BIT_QUEUEMACID_Q6_V1(x) (((x) & BIT_MASK_QUEUEMACID_Q6_V1) << BIT_SHIFT_QUEUEMACID_Q6_V1)


#define BIT_SHIFT_QUEUEAC_Q6_V1 23
#define BIT_MASK_QUEUEAC_Q6_V1 0x3
#define BIT_QUEUEAC_Q6_V1(x) (((x) & BIT_MASK_QUEUEAC_Q6_V1) << BIT_SHIFT_QUEUEAC_Q6_V1)


#define BIT_SHIFT_TAIL_PKT_Q6_V1 15
#define BIT_MASK_TAIL_PKT_Q6_V1 0xff
#define BIT_TAIL_PKT_Q6_V1(x) (((x) & BIT_MASK_TAIL_PKT_Q6_V1) << BIT_SHIFT_TAIL_PKT_Q6_V1)


#define BIT_SHIFT_PKT_NUM_Q6_V1 8
#define BIT_MASK_PKT_NUM_Q6_V1 0x7f
#define BIT_PKT_NUM_Q6_V1(x) (((x) & BIT_MASK_PKT_NUM_Q6_V1) << BIT_SHIFT_PKT_NUM_Q6_V1)


#define BIT_SHIFT_HEAD_PKT_Q6 0
#define BIT_MASK_HEAD_PKT_Q6 0xff
#define BIT_HEAD_PKT_Q6(x) (((x) & BIT_MASK_HEAD_PKT_Q6) << BIT_SHIFT_HEAD_PKT_Q6)


//2 REG_Q7_INFO

#define BIT_SHIFT_QUEUEMACID_Q7_V1 25
#define BIT_MASK_QUEUEMACID_Q7_V1 0x7f
#define BIT_QUEUEMACID_Q7_V1(x) (((x) & BIT_MASK_QUEUEMACID_Q7_V1) << BIT_SHIFT_QUEUEMACID_Q7_V1)


#define BIT_SHIFT_QUEUEAC_Q7_V1 23
#define BIT_MASK_QUEUEAC_Q7_V1 0x3
#define BIT_QUEUEAC_Q7_V1(x) (((x) & BIT_MASK_QUEUEAC_Q7_V1) << BIT_SHIFT_QUEUEAC_Q7_V1)


#define BIT_SHIFT_TAIL_PKT_Q7_V1 15
#define BIT_MASK_TAIL_PKT_Q7_V1 0xff
#define BIT_TAIL_PKT_Q7_V1(x) (((x) & BIT_MASK_TAIL_PKT_Q7_V1) << BIT_SHIFT_TAIL_PKT_Q7_V1)


#define BIT_SHIFT_PKT_NUM_Q7_V1 8
#define BIT_MASK_PKT_NUM_Q7_V1 0x7f
#define BIT_PKT_NUM_Q7_V1(x) (((x) & BIT_MASK_PKT_NUM_Q7_V1) << BIT_SHIFT_PKT_NUM_Q7_V1)


#define BIT_SHIFT_HEAD_PKT_Q7 0
#define BIT_MASK_HEAD_PKT_Q7 0xff
#define BIT_HEAD_PKT_Q7(x) (((x) & BIT_MASK_HEAD_PKT_Q7) << BIT_SHIFT_HEAD_PKT_Q7)


//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_TXRPT_CTRL

#define BIT_SHIFT_SPC_READ_PTR 24
#define BIT_MASK_SPC_READ_PTR 0xf
#define BIT_SPC_READ_PTR(x) (((x) & BIT_MASK_SPC_READ_PTR) << BIT_SHIFT_SPC_READ_PTR)


#define BIT_SHIFT_SPC_WRITE_PTR 16
#define BIT_MASK_SPC_WRITE_PTR 0xf
#define BIT_SPC_WRITE_PTR(x) (((x) & BIT_MASK_SPC_WRITE_PTR) << BIT_SHIFT_SPC_WRITE_PTR)


#define BIT_SHIFT_AC_READ_PTR 8
#define BIT_MASK_AC_READ_PTR 0xf
#define BIT_AC_READ_PTR(x) (((x) & BIT_MASK_AC_READ_PTR) << BIT_SHIFT_AC_READ_PTR)


#define BIT_SHIFT_AC_WRITE_PTR 0
#define BIT_MASK_AC_WRITE_PTR 0xf
#define BIT_AC_WRITE_PTR(x) (((x) & BIT_MASK_AC_WRITE_PTR) << BIT_SHIFT_AC_WRITE_PTR)


//2 REG_INIRTS_RATE_SEL
#define BIT_LEAG_RTS_BW_DUP_8710C BIT(5)

//2 REG_BASIC_CFEND_RATE

#define BIT_SHIFT_BASIC_CFEND_RATE 0
#define BIT_MASK_BASIC_CFEND_RATE 0x1f
#define BIT_BASIC_CFEND_RATE(x) (((x) & BIT_MASK_BASIC_CFEND_RATE) << BIT_SHIFT_BASIC_CFEND_RATE)


//2 REG_STBC_CFEND_RATE

#define BIT_SHIFT_STBC_CFEND_RATE 0
#define BIT_MASK_STBC_CFEND_RATE 0x1f
#define BIT_STBC_CFEND_RATE(x) (((x) & BIT_MASK_STBC_CFEND_RATE) << BIT_SHIFT_STBC_CFEND_RATE)


//2 REG_DATA_SC

#define BIT_SHIFT_TXSC_40M 4
#define BIT_MASK_TXSC_40M 0xf
#define BIT_TXSC_40M(x) (((x) & BIT_MASK_TXSC_40M) << BIT_SHIFT_TXSC_40M)


#define BIT_SHIFT_TXSC_20M 0
#define BIT_MASK_TXSC_20M 0xf
#define BIT_TXSC_20M(x) (((x) & BIT_MASK_TXSC_20M) << BIT_SHIFT_TXSC_20M)


//2 REG_MACID_SLEEP3

#define BIT_SHIFT_MACID127_96_PKTSLEEP 0
#define BIT_MASK_MACID127_96_PKTSLEEP 0xffffffffL
#define BIT_MACID127_96_PKTSLEEP(x) (((x) & BIT_MASK_MACID127_96_PKTSLEEP) << BIT_SHIFT_MACID127_96_PKTSLEEP)


//2 REG_MACID_SLEEP1

#define BIT_SHIFT_MACID63_32_PKTSLEEP 0
#define BIT_MASK_MACID63_32_PKTSLEEP 0xffffffffL
#define BIT_MACID63_32_PKTSLEEP(x) (((x) & BIT_MASK_MACID63_32_PKTSLEEP) << BIT_SHIFT_MACID63_32_PKTSLEEP)


//2 REG_ARFR2_V1

#define BIT_SHIFT_ARFR2_V1 0
#define BIT_MASK_ARFR2_V1 0xffffffffffffffffL
#define BIT_ARFR2_V1(x) (((x) & BIT_MASK_ARFR2_V1) << BIT_SHIFT_ARFR2_V1)


//2 REG_ARFR3_V1

#define BIT_SHIFT_ARFR3_V1 0
#define BIT_MASK_ARFR3_V1 0xffffffffffffffffL
#define BIT_ARFR3_V1(x) (((x) & BIT_MASK_ARFR3_V1) << BIT_SHIFT_ARFR3_V1)


//2 REG_ARFR4

#define BIT_SHIFT_ARFR4 0
#define BIT_MASK_ARFR4 0xffffffffffffffffL
#define BIT_ARFR4(x) (((x) & BIT_MASK_ARFR4) << BIT_SHIFT_ARFR4)


//2 REG_ARFR5

#define BIT_SHIFT_ARFR5 0
#define BIT_MASK_ARFR5 0xffffffffffffffffL
#define BIT_ARFR5(x) (((x) & BIT_MASK_ARFR5) << BIT_SHIFT_ARFR5)


//2 REG_TXRPT_START_OFFSET

#define BIT_SHIFT_LOC_BCN_RPT 16
#define BIT_MASK_LOC_BCN_RPT 0xff
#define BIT_LOC_BCN_RPT(x) (((x) & BIT_MASK_LOC_BCN_RPT) << BIT_SHIFT_LOC_BCN_RPT)


#define BIT_SHIFT_LOC_TXRPT 8
#define BIT_MASK_LOC_TXRPT 0xff
#define BIT_LOC_TXRPT(x) (((x) & BIT_MASK_LOC_TXRPT) << BIT_SHIFT_LOC_TXRPT)


#define BIT_SHIFT_LOC_SRFF 0
#define BIT_MASK_LOC_SRFF 0xff
#define BIT_LOC_SRFF(x) (((x) & BIT_MASK_LOC_SRFF) << BIT_SHIFT_LOC_SRFF)


//2 REG_TRYING_CNT_TH

#define BIT_SHIFT_INDEX_15 24
#define BIT_MASK_INDEX_15 0xff
#define BIT_INDEX_15(x) (((x) & BIT_MASK_INDEX_15) << BIT_SHIFT_INDEX_15)


#define BIT_SHIFT_INDEX_14 16
#define BIT_MASK_INDEX_14 0xff
#define BIT_INDEX_14(x) (((x) & BIT_MASK_INDEX_14) << BIT_SHIFT_INDEX_14)


#define BIT_SHIFT_INDEX_13 8
#define BIT_MASK_INDEX_13 0xff
#define BIT_INDEX_13(x) (((x) & BIT_MASK_INDEX_13) << BIT_SHIFT_INDEX_13)


#define BIT_SHIFT_INDEX_12 0
#define BIT_MASK_INDEX_12 0xff
#define BIT_INDEX_12(x) (((x) & BIT_MASK_INDEX_12) << BIT_SHIFT_INDEX_12)


//2 REG_POWER_STAGE1
#define BIT_PTA_WL_PRI_MASK_CPU_MGQ_8710C BIT(31)
#define BIT_PTA_WL_PRI_MASK_BCNQ_8710C BIT(30)
#define BIT_PTA_WL_PRI_MASK_HIQ_8710C BIT(29)
#define BIT_PTA_WL_PRI_MASK_MGQ_8710C BIT(28)
#define BIT_PTA_WL_PRI_MASK_BK_8710C BIT(27)
#define BIT_PTA_WL_PRI_MASK_BE_8710C BIT(26)
#define BIT_PTA_WL_PRI_MASK_VI_8710C BIT(25)
#define BIT_PTA_WL_PRI_MASK_VO_8710C BIT(24)

#define BIT_SHIFT_POWER_STAGE1 0
#define BIT_MASK_POWER_STAGE1 0xffffff
#define BIT_POWER_STAGE1(x) (((x) & BIT_MASK_POWER_STAGE1) << BIT_SHIFT_POWER_STAGE1)


//2 REG_POWER_STAGE2

#define BIT_SHIFT_EVTQ_TXRPT 27
#define BIT_MASK_EVTQ_TXRPT 0x7
#define BIT_EVTQ_TXRPT(x) (((x) & BIT_MASK_EVTQ_TXRPT) << BIT_SHIFT_EVTQ_TXRPT)

#define BIT_PTA_WL_PRI_MASK_EVT_8710C BIT(25)
#define BIT_CTRL_PKT_PWR_ADJ_EN_8710C BIT(24)

#define BIT_SHIFT_POWER_STAGE2 0
#define BIT_MASK_POWER_STAGE2 0xffffff
#define BIT_POWER_STAGE2(x) (((x) & BIT_MASK_POWER_STAGE2) << BIT_SHIFT_POWER_STAGE2)


//2 REG_SW_AMPDU_BURST_MODE_CTRL

#define BIT_SHIFT_EVTQ_HEAD 24
#define BIT_MASK_EVTQ_HEAD 0xff
#define BIT_EVTQ_HEAD(x) (((x) & BIT_MASK_EVTQ_HEAD) << BIT_SHIFT_EVTQ_HEAD)


#define BIT_SHIFT_R_TOTAL_LEN_TH 8
#define BIT_MASK_R_TOTAL_LEN_TH 0xfff
#define BIT_R_TOTAL_LEN_TH(x) (((x) & BIT_MASK_R_TOTAL_LEN_TH) << BIT_SHIFT_R_TOTAL_LEN_TH)

#define BIT_WEP_PRETX_EN_8710C BIT(7)
#define BIT_PRE_TX_CMD_8710C BIT(6)

#define BIT_SHIFT_NUM_SCL_EN 4
#define BIT_MASK_NUM_SCL_EN 0x3
#define BIT_NUM_SCL_EN(x) (((x) & BIT_MASK_NUM_SCL_EN) << BIT_SHIFT_NUM_SCL_EN)

#define BIT_BK_EN_8710C BIT(3)
#define BIT_BE_EN_8710C BIT(2)
#define BIT_VI_EN_8710C BIT(1)
#define BIT_VO_EN_8710C BIT(0)

//2 REG_PKT_LIFE_TIME

#define BIT_SHIFT_PKT_LIFTIME_BEBK 16
#define BIT_MASK_PKT_LIFTIME_BEBK 0xffff
#define BIT_PKT_LIFTIME_BEBK(x) (((x) & BIT_MASK_PKT_LIFTIME_BEBK) << BIT_SHIFT_PKT_LIFTIME_BEBK)


#define BIT_SHIFT_PKT_LIFTIME_VOVI 0
#define BIT_MASK_PKT_LIFTIME_VOVI 0xffff
#define BIT_PKT_LIFTIME_VOVI(x) (((x) & BIT_MASK_PKT_LIFTIME_VOVI) << BIT_SHIFT_PKT_LIFTIME_VOVI)


//2 REG_STBC_SETTING

#define BIT_SHIFT_CDEND_TXTIME_L 4
#define BIT_MASK_CDEND_TXTIME_L 0xf
#define BIT_CDEND_TXTIME_L(x) (((x) & BIT_MASK_CDEND_TXTIME_L) << BIT_SHIFT_CDEND_TXTIME_L)


#define BIT_SHIFT_NESS 2
#define BIT_MASK_NESS 0x3
#define BIT_NESS(x) (((x) & BIT_MASK_NESS) << BIT_SHIFT_NESS)


#define BIT_SHIFT_STBC_CFEND 0
#define BIT_MASK_STBC_CFEND 0x3
#define BIT_STBC_CFEND(x) (((x) & BIT_MASK_STBC_CFEND) << BIT_SHIFT_STBC_CFEND)


//2 REG_STBC_SETTING2

#define BIT_SHIFT_CDEND_TXTIME_H 0
#define BIT_MASK_CDEND_TXTIME_H 0x1f
#define BIT_CDEND_TXTIME_H(x) (((x) & BIT_MASK_CDEND_TXTIME_H) << BIT_SHIFT_CDEND_TXTIME_H)


//2 REG_QUEUE_CTRL
#define BIT_PTA_EDCCA_EN_8710C BIT(5)
#define BIT_PTA_WL_TX_EN_8710C BIT(4)
#define BIT_R_USE_DATA_BW_8710C BIT(3)
#define BIT_TRI_PKT_INT_MODE1_8710C BIT(2)
#define BIT_TRI_PKT_INT_MODE0_8710C BIT(1)
#define BIT_ACQ_MODE_SEL_8710C BIT(0)

//2 REG_SINGLE_AMPDU_CTRL
#define BIT_EN_SINGLE_APMDU_8710C BIT(7)

//2 REG_PROT_MODE_CTRL

#define BIT_SHIFT_RTS_MAX_AGG_NUM 24
#define BIT_MASK_RTS_MAX_AGG_NUM 0x3f
#define BIT_RTS_MAX_AGG_NUM_8710C(x) (((x) & BIT_MASK_RTS_MAX_AGG_NUM) << BIT_SHIFT_RTS_MAX_AGG_NUM)


#define BIT_SHIFT_MAX_AGG_NUM 16
#define BIT_MASK_MAX_AGG_NUM 0x3f
#define BIT_MAX_AGG_NUM_8710C(x) (((x) & BIT_MASK_MAX_AGG_NUM) << BIT_SHIFT_MAX_AGG_NUM)


#define BIT_SHIFT_RTS_TXTIME_TH 8
#define BIT_MASK_RTS_TXTIME_TH 0xff
#define BIT_RTS_TXTIME_TH(x) (((x) & BIT_MASK_RTS_TXTIME_TH) << BIT_SHIFT_RTS_TXTIME_TH)


#define BIT_SHIFT_RTS_LEN_TH 0
#define BIT_MASK_RTS_LEN_TH 0xff
#define BIT_RTS_LEN_TH(x) (((x) & BIT_MASK_RTS_LEN_TH) << BIT_SHIFT_RTS_LEN_TH)


//2 REG_BAR_MODE_CTRL

#define BIT_SHIFT_BAR_RTY_LMT 16
#define BIT_MASK_BAR_RTY_LMT 0x3
#define BIT_BAR_RTY_LMT(x) (((x) & BIT_MASK_BAR_RTY_LMT) << BIT_SHIFT_BAR_RTY_LMT)


#define BIT_SHIFT_BAR_PKT_TXTIME_TH 8
#define BIT_MASK_BAR_PKT_TXTIME_TH 0xff
#define BIT_BAR_PKT_TXTIME_TH(x) (((x) & BIT_MASK_BAR_PKT_TXTIME_TH) << BIT_SHIFT_BAR_PKT_TXTIME_TH)

#define BIT_BAR_EN_V1_8710C BIT(6)

#define BIT_SHIFT_BAR_PKTNUM_TH_V1 0
#define BIT_MASK_BAR_PKTNUM_TH_V1 0x3f
#define BIT_BAR_PKTNUM_TH_V1(x) (((x) & BIT_MASK_BAR_PKTNUM_TH_V1) << BIT_SHIFT_BAR_PKTNUM_TH_V1)


//2 REG_RA_TRY_RATE_AGG_LMT

//2 REG_NOT_VALID

#define BIT_SHIFT_RA_TRY_RATE_AGG_LMT 0
#define BIT_MASK_RA_TRY_RATE_AGG_LMT 0x3f
#define BIT_RA_TRY_RATE_AGG_LMT(x) (((x) & BIT_MASK_RA_TRY_RATE_AGG_LMT) << BIT_SHIFT_RA_TRY_RATE_AGG_LMT)


//2 REG_MACID_SLEEP2

#define BIT_SHIFT_MACID95_64PKTSLEEP 0
#define BIT_MASK_MACID95_64PKTSLEEP 0xffffffffL
#define BIT_MACID95_64PKTSLEEP(x) (((x) & BIT_MASK_MACID95_64PKTSLEEP) << BIT_SHIFT_MACID95_64PKTSLEEP)


//2 REG_MACID_SLEEP

#define BIT_SHIFT_MACID31_0_PKTSLEEP 0
#define BIT_MASK_MACID31_0_PKTSLEEP 0xffffffffL
#define BIT_MACID31_0_PKTSLEEP(x) (((x) & BIT_MASK_MACID31_0_PKTSLEEP) << BIT_SHIFT_MACID31_0_PKTSLEEP)


//2 REG_HW_SEQ0

//2 REG_NOT_VALID

#define BIT_SHIFT_HW_SSN_SEQ0 0
#define BIT_MASK_HW_SSN_SEQ0 0xfff
#define BIT_HW_SSN_SEQ0(x) (((x) & BIT_MASK_HW_SSN_SEQ0) << BIT_SHIFT_HW_SSN_SEQ0)


//2 REG_HW_SEQ1

//2 REG_NOT_VALID

#define BIT_SHIFT_HW_SSN_SEQ1 0
#define BIT_MASK_HW_SSN_SEQ1 0xfff
#define BIT_HW_SSN_SEQ1(x) (((x) & BIT_MASK_HW_SSN_SEQ1) << BIT_SHIFT_HW_SSN_SEQ1)


//2 REG_HW_SEQ2

//2 REG_NOT_VALID

#define BIT_SHIFT_HW_SSN_SEQ2 0
#define BIT_MASK_HW_SSN_SEQ2 0xfff
#define BIT_HW_SSN_SEQ2(x) (((x) & BIT_MASK_HW_SSN_SEQ2) << BIT_SHIFT_HW_SSN_SEQ2)


//2 REG_HW_SEQ3

//2 REG_NOT_VALID

#define BIT_SHIFT_HW_SSN_SEQ3 0
#define BIT_MASK_HW_SSN_SEQ3 0xfff
#define BIT_HW_SSN_SEQ3(x) (((x) & BIT_MASK_HW_SSN_SEQ3) << BIT_SHIFT_HW_SSN_SEQ3)


//2 REG_NULL_PKT_STATUS
#define BIT_TX_NULL_1_8710C BIT(1)
#define BIT_TX_NULL_0_8710C BIT(0)

//2 REG_PTCL_ERR_STATUS
#define BIT_PTCL_TOTAL_PG_8710C BIT(7)
#define BIT_PTCL_RATE_TABLE_INVALID_8710C BIT(6)
#define BIT_PTCL_ERR0_8710C BIT(5)
#define BIT_PTCL_ERR1_8710C BIT(4)
#define BIT_PTCL_ERR2_8710C BIT(3)
#define BIT_PTCL_ERR3_8710C BIT(2)
#define BIT_PTCL_ERR4_8710C BIT(1)
#define BIT_PTCL_ERR5_8710C BIT(0)

//2 REG_PTCL_PKT_NUM

#define BIT_SHIFT_PTCL_TOTAL_PG 0
#define BIT_MASK_PTCL_TOTAL_PG 0xff
#define BIT_PTCL_TOTAL_PG(x) (((x) & BIT_MASK_PTCL_TOTAL_PG) << BIT_SHIFT_PTCL_TOTAL_PG)


//2 REG_NOT_VALID
#define BIT_HGQ_DEL_EN_8710C BIT(7)
#define BIT_MGQ_DEL_EN_8710C BIT(6)

//2 REG_BT_POLLUTE_PKT_CNT

#define BIT_SHIFT_BT_POLLUTE_PKT_CNT 0
#define BIT_MASK_BT_POLLUTE_PKT_CNT 0xffff
#define BIT_BT_POLLUTE_PKT_CNT(x) (((x) & BIT_MASK_BT_POLLUTE_PKT_CNT) << BIT_SHIFT_BT_POLLUTE_PKT_CNT)


//2 REG_NOT_VALID

//2 REG_DROP_PKT_NUM

#define BIT_SHIFT_DROP_PKT_NUM 0
#define BIT_MASK_DROP_PKT_NUM 0xffff
#define BIT_DROP_PKT_NUM_8710C(x) (((x) & BIT_MASK_DROP_PKT_NUM) << BIT_SHIFT_DROP_PKT_NUM)


//2 REG_PTCL_TX_RPT

#define BIT_SHIFT_AC_TX_RPT_INFO 0
#define BIT_MASK_AC_TX_RPT_INFO 0xffffffffffffffffL
#define BIT_AC_TX_RPT_INFO(x) (((x) & BIT_MASK_AC_TX_RPT_INFO) << BIT_SHIFT_AC_TX_RPT_INFO)


//2 REG_NOT_VALID

//2 REG_DUMMY_PAGE4
#define BIT_EN_BCN_TRXRPT_8710C BIT(17)

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_MACID_RELEASE0

#define BIT_SHIFT_MACID31_0_RELEASE 0
#define BIT_MASK_MACID31_0_RELEASE 0xffffffffL
#define BIT_MACID31_0_RELEASE(x) (((x) & BIT_MASK_MACID31_0_RELEASE) << BIT_SHIFT_MACID31_0_RELEASE)


//2 REG_MACID_RELEASE1

#define BIT_SHIFT_MACID63_32_RELEASE 0
#define BIT_MASK_MACID63_32_RELEASE 0xffffffffL
#define BIT_MACID63_32_RELEASE(x) (((x) & BIT_MASK_MACID63_32_RELEASE) << BIT_SHIFT_MACID63_32_RELEASE)


//2 REG_MACID_RELEASE2

#define BIT_SHIFT_MACID95_64_RELEASE 0
#define BIT_MASK_MACID95_64_RELEASE 0xffffffffL
#define BIT_MACID95_64_RELEASE(x) (((x) & BIT_MASK_MACID95_64_RELEASE) << BIT_SHIFT_MACID95_64_RELEASE)


//2 REG_MACID_RELEASE3

#define BIT_SHIFT_MACID127_96_RELEASE 0
#define BIT_MASK_MACID127_96_RELEASE 0xffffffffL
#define BIT_MACID127_96_RELEASE(x) (((x) & BIT_MASK_MACID127_96_RELEASE) << BIT_SHIFT_MACID127_96_RELEASE)


//2 REG_MACID_RELEASE_SETTING
#define BIT_MACID_VALUE_8710C BIT(7)

#define BIT_SHIFT_MACID_OFFSET 0
#define BIT_MASK_MACID_OFFSET 0x7f
#define BIT_MACID_OFFSET(x) (((x) & BIT_MASK_MACID_OFFSET) << BIT_SHIFT_MACID_OFFSET)


//2 REG_FAST_EDCA_VOVI_SETTING

#define BIT_SHIFT_VI_FAST_EDCA_TO 24
#define BIT_MASK_VI_FAST_EDCA_TO 0xff
#define BIT_VI_FAST_EDCA_TO(x) (((x) & BIT_MASK_VI_FAST_EDCA_TO) << BIT_SHIFT_VI_FAST_EDCA_TO)

#define BIT_VI_THRESHOLD_SEL_8710C BIT(23)

#define BIT_SHIFT_VI_FAST_EDCA_PKT_TH 16
#define BIT_MASK_VI_FAST_EDCA_PKT_TH 0x7f
#define BIT_VI_FAST_EDCA_PKT_TH(x) (((x) & BIT_MASK_VI_FAST_EDCA_PKT_TH) << BIT_SHIFT_VI_FAST_EDCA_PKT_TH)


#define BIT_SHIFT_VO_FAST_EDCA_TO 8
#define BIT_MASK_VO_FAST_EDCA_TO 0xff
#define BIT_VO_FAST_EDCA_TO(x) (((x) & BIT_MASK_VO_FAST_EDCA_TO) << BIT_SHIFT_VO_FAST_EDCA_TO)

#define BIT_VO_THRESHOLD_SEL_8710C BIT(7)

#define BIT_SHIFT_VO_FAST_EDCA_PKT_TH 0
#define BIT_MASK_VO_FAST_EDCA_PKT_TH 0x7f
#define BIT_VO_FAST_EDCA_PKT_TH(x) (((x) & BIT_MASK_VO_FAST_EDCA_PKT_TH) << BIT_SHIFT_VO_FAST_EDCA_PKT_TH)


//2 REG_FAST_EDCA_BEBK_SETTING

#define BIT_SHIFT_BK_FAST_EDCA_TO 24
#define BIT_MASK_BK_FAST_EDCA_TO 0xff
#define BIT_BK_FAST_EDCA_TO(x) (((x) & BIT_MASK_BK_FAST_EDCA_TO) << BIT_SHIFT_BK_FAST_EDCA_TO)

#define BIT_BK_THRESHOLD_SEL_8710C BIT(23)

#define BIT_SHIFT_BK_FAST_EDCA_PKT_TH 16
#define BIT_MASK_BK_FAST_EDCA_PKT_TH 0x7f
#define BIT_BK_FAST_EDCA_PKT_TH(x) (((x) & BIT_MASK_BK_FAST_EDCA_PKT_TH) << BIT_SHIFT_BK_FAST_EDCA_PKT_TH)


#define BIT_SHIFT_BE_FAST_EDCA_TO 8
#define BIT_MASK_BE_FAST_EDCA_TO 0xff
#define BIT_BE_FAST_EDCA_TO(x) (((x) & BIT_MASK_BE_FAST_EDCA_TO) << BIT_SHIFT_BE_FAST_EDCA_TO)

#define BIT_BE_THRESHOLD_SEL_8710C BIT(7)

#define BIT_SHIFT_BE_FAST_EDCA_PKT_TH 0
#define BIT_MASK_BE_FAST_EDCA_PKT_TH 0x7f
#define BIT_BE_FAST_EDCA_PKT_TH(x) (((x) & BIT_MASK_BE_FAST_EDCA_PKT_TH) << BIT_SHIFT_BE_FAST_EDCA_PKT_TH)


//2 REG_NOT_VALID

//2 REG_R_MACID_RELEASE_SUCCESS_0

#define BIT_SHIFT_R_MACID_RELEASE_SUCCESS_0 0
#define BIT_MASK_R_MACID_RELEASE_SUCCESS_0 0xffffffffL
#define BIT_R_MACID_RELEASE_SUCCESS_0(x) (((x) & BIT_MASK_R_MACID_RELEASE_SUCCESS_0) << BIT_SHIFT_R_MACID_RELEASE_SUCCESS_0)


//2 REG_R_MACID_RELEASE_SUCCESS_1

#define BIT_SHIFT_R_MACID_RELEASE_SUCCESS_1 0
#define BIT_MASK_R_MACID_RELEASE_SUCCESS_1 0xffffffffL
#define BIT_R_MACID_RELEASE_SUCCESS_1(x) (((x) & BIT_MASK_R_MACID_RELEASE_SUCCESS_1) << BIT_SHIFT_R_MACID_RELEASE_SUCCESS_1)


//2 REG_R_MACID_RELEASE_SUCCESS_2

#define BIT_SHIFT_R_MACID_RELEASE_SUCCESS_2 0
#define BIT_MASK_R_MACID_RELEASE_SUCCESS_2 0xffffffffL
#define BIT_R_MACID_RELEASE_SUCCESS_2(x) (((x) & BIT_MASK_R_MACID_RELEASE_SUCCESS_2) << BIT_SHIFT_R_MACID_RELEASE_SUCCESS_2)


//2 REG_R_MACID_RELEASE_SUCCESS_3

#define BIT_SHIFT_R_MACID_RELEASE_SUCCESS_3 0
#define BIT_MASK_R_MACID_RELEASE_SUCCESS_3 0xffffffffL
#define BIT_R_MACID_RELEASE_SUCCESS_3(x) (((x) & BIT_MASK_R_MACID_RELEASE_SUCCESS_3) << BIT_SHIFT_R_MACID_RELEASE_SUCCESS_3)


//2 REG_R_MACID_RELEASE_SUCCESS_CLEAR_OFFSET

#define BIT_SHIFT_R_MACID_RELEASE_SUCCESS_CLEAR_OFFSET 0
#define BIT_MASK_R_MACID_RELEASE_SUCCESS_CLEAR_OFFSET 0x7f
#define BIT_R_MACID_RELEASE_SUCCESS_CLEAR_OFFSET(x) (((x) & BIT_MASK_R_MACID_RELEASE_SUCCESS_CLEAR_OFFSET) << BIT_SHIFT_R_MACID_RELEASE_SUCCESS_CLEAR_OFFSET)


//2 REG_NAN_INFO0

#define BIT_SHIFT_NAN_INFO0 0
#define BIT_MASK_NAN_INFO0 0xffffffffL
#define BIT_NAN_INFO0(x) (((x) & BIT_MASK_NAN_INFO0) << BIT_SHIFT_NAN_INFO0)


//2 REG_NAN_INFO1

#define BIT_SHIFT_NAN_INFO1 0
#define BIT_MASK_NAN_INFO1 0xffffffffL
#define BIT_NAN_INFO1(x) (((x) & BIT_MASK_NAN_INFO1) << BIT_SHIFT_NAN_INFO1)


//2 REG_NAN_INFO2

#define BIT_SHIFT_NAN_INFO2 0
#define BIT_MASK_NAN_INFO2 0xffffffffL
#define BIT_NAN_INFO2(x) (((x) & BIT_MASK_NAN_INFO2) << BIT_SHIFT_NAN_INFO2)


//2 REG_NAN_INFO3

#define BIT_SHIFT_NAN_INFO3 0
#define BIT_MASK_NAN_INFO3 0xffffffffL
#define BIT_NAN_INFO3(x) (((x) & BIT_MASK_NAN_INFO3) << BIT_SHIFT_NAN_INFO3)


//2 REG_NAN_INFO4

#define BIT_SHIFT_NAN_INFO4 0
#define BIT_MASK_NAN_INFO4 0xffffffffL
#define BIT_NAN_INFO4(x) (((x) & BIT_MASK_NAN_INFO4) << BIT_SHIFT_NAN_INFO4)


//2 REG_NAN_INFO5

#define BIT_SHIFT_NAN_INFO5 0
#define BIT_MASK_NAN_INFO5 0xffffffffL
#define BIT_NAN_INFO5(x) (((x) & BIT_MASK_NAN_INFO5) << BIT_SHIFT_NAN_INFO5)


//2 REG_NAN_INFO6

#define BIT_SHIFT_NAN_INFO6 0
#define BIT_MASK_NAN_INFO6 0xffffffffL
#define BIT_NAN_INFO6(x) (((x) & BIT_MASK_NAN_INFO6) << BIT_SHIFT_NAN_INFO6)


//2 REG_NAN_INFO7

#define BIT_SHIFT_NAN_INFO7 0
#define BIT_MASK_NAN_INFO7 0xffffffffL
#define BIT_NAN_INFO7(x) (((x) & BIT_MASK_NAN_INFO7) << BIT_SHIFT_NAN_INFO7)


//2 REG_NAN_INFO8

#define BIT_SHIFT_NAN_INFO8 0
#define BIT_MASK_NAN_INFO8 0xffffffffL
#define BIT_NAN_INFO8(x) (((x) & BIT_MASK_NAN_INFO8) << BIT_SHIFT_NAN_INFO8)


//2 REG_NAN_INFO9

#define BIT_SHIFT_NAN_INFO9 0
#define BIT_MASK_NAN_INFO9 0xffffffffL
#define BIT_NAN_INFO9(x) (((x) & BIT_MASK_NAN_INFO9) << BIT_SHIFT_NAN_INFO9)


//2 REG_NOT_VALID

//2 REG_EDCA_VO_PARAM

#define BIT_SHIFT_TXOPLIMIT 16
#define BIT_MASK_TXOPLIMIT 0x7ff
#define BIT_TXOPLIMIT(x) (((x) & BIT_MASK_TXOPLIMIT) << BIT_SHIFT_TXOPLIMIT)


#define BIT_SHIFT_CW 8
#define BIT_MASK_CW 0xff
#define BIT_CW(x) (((x) & BIT_MASK_CW) << BIT_SHIFT_CW)


#define BIT_SHIFT_AIFS 0
#define BIT_MASK_AIFS 0xff
#define BIT_AIFS(x) (((x) & BIT_MASK_AIFS) << BIT_SHIFT_AIFS)


//2 REG_EDCA_VI_PARAM

//2 REG_NOT_VALID

#define BIT_SHIFT_TXOPLIMIT 16
#define BIT_MASK_TXOPLIMIT 0x7ff
#define BIT_TXOPLIMIT(x) (((x) & BIT_MASK_TXOPLIMIT) << BIT_SHIFT_TXOPLIMIT)


#define BIT_SHIFT_CW 8
#define BIT_MASK_CW 0xff
#define BIT_CW(x) (((x) & BIT_MASK_CW) << BIT_SHIFT_CW)


#define BIT_SHIFT_AIFS 0
#define BIT_MASK_AIFS 0xff
#define BIT_AIFS(x) (((x) & BIT_MASK_AIFS) << BIT_SHIFT_AIFS)


//2 REG_EDCA_BE_PARAM

//2 REG_NOT_VALID

#define BIT_SHIFT_TXOPLIMIT 16
#define BIT_MASK_TXOPLIMIT 0x7ff
#define BIT_TXOPLIMIT(x) (((x) & BIT_MASK_TXOPLIMIT) << BIT_SHIFT_TXOPLIMIT)


#define BIT_SHIFT_CW 8
#define BIT_MASK_CW 0xff
#define BIT_CW(x) (((x) & BIT_MASK_CW) << BIT_SHIFT_CW)


#define BIT_SHIFT_AIFS 0
#define BIT_MASK_AIFS 0xff
#define BIT_AIFS(x) (((x) & BIT_MASK_AIFS) << BIT_SHIFT_AIFS)


//2 REG_EDCA_BK_PARAM

//2 REG_NOT_VALID

#define BIT_SHIFT_TXOPLIMIT 16
#define BIT_MASK_TXOPLIMIT 0x7ff
#define BIT_TXOPLIMIT(x) (((x) & BIT_MASK_TXOPLIMIT) << BIT_SHIFT_TXOPLIMIT)


#define BIT_SHIFT_CW 8
#define BIT_MASK_CW 0xff
#define BIT_CW(x) (((x) & BIT_MASK_CW) << BIT_SHIFT_CW)


#define BIT_SHIFT_AIFS 0
#define BIT_MASK_AIFS 0xff
#define BIT_AIFS(x) (((x) & BIT_MASK_AIFS) << BIT_SHIFT_AIFS)


//2 REG_BCNTCFG

#define BIT_SHIFT_BCNCW_MAX 12
#define BIT_MASK_BCNCW_MAX 0xf
#define BIT_BCNCW_MAX(x) (((x) & BIT_MASK_BCNCW_MAX) << BIT_SHIFT_BCNCW_MAX)


#define BIT_SHIFT_BCNCW_MIN 8
#define BIT_MASK_BCNCW_MIN 0xf
#define BIT_BCNCW_MIN(x) (((x) & BIT_MASK_BCNCW_MIN) << BIT_SHIFT_BCNCW_MIN)


#define BIT_SHIFT_BCNIFS 0
#define BIT_MASK_BCNIFS 0xff
#define BIT_BCNIFS(x) (((x) & BIT_MASK_BCNIFS) << BIT_SHIFT_BCNIFS)


//2 REG_PIFS

#define BIT_SHIFT_PIFS 0
#define BIT_MASK_PIFS 0xff
#define BIT_PIFS(x) (((x) & BIT_MASK_PIFS) << BIT_SHIFT_PIFS)


//2 REG_RDG_PIFS

#define BIT_SHIFT_RDG_PIFS 0
#define BIT_MASK_RDG_PIFS 0xff
#define BIT_RDG_PIFS(x) (((x) & BIT_MASK_RDG_PIFS) << BIT_SHIFT_RDG_PIFS)


//2 REG_SIFS

#define BIT_SHIFT_SIFS_OFDM_TRX 24
#define BIT_MASK_SIFS_OFDM_TRX 0xff
#define BIT_SIFS_OFDM_TRX(x) (((x) & BIT_MASK_SIFS_OFDM_TRX) << BIT_SHIFT_SIFS_OFDM_TRX)


#define BIT_SHIFT_SIFS_CCK_TRX 16
#define BIT_MASK_SIFS_CCK_TRX 0xff
#define BIT_SIFS_CCK_TRX(x) (((x) & BIT_MASK_SIFS_CCK_TRX) << BIT_SHIFT_SIFS_CCK_TRX)


#define BIT_SHIFT_SIFS_OFDM_CTX 8
#define BIT_MASK_SIFS_OFDM_CTX 0xff
#define BIT_SIFS_OFDM_CTX(x) (((x) & BIT_MASK_SIFS_OFDM_CTX) << BIT_SHIFT_SIFS_OFDM_CTX)


#define BIT_SHIFT_SIFS_CCK_CTX 0
#define BIT_MASK_SIFS_CCK_CTX 0xff
#define BIT_SIFS_CCK_CTX(x) (((x) & BIT_MASK_SIFS_CCK_CTX) << BIT_SHIFT_SIFS_CCK_CTX)


//2 REG_TSFTR_SYN_OFFSET

#define BIT_SHIFT_TSFTR_SNC_OFFSET 0
#define BIT_MASK_TSFTR_SNC_OFFSET 0xffff
#define BIT_TSFTR_SNC_OFFSET(x) (((x) & BIT_MASK_TSFTR_SNC_OFFSET) << BIT_SHIFT_TSFTR_SNC_OFFSET)


//2 REG_AGGR_BREAK_TIME

#define BIT_SHIFT_AGGR_BK_TIME 0
#define BIT_MASK_AGGR_BK_TIME 0xff
#define BIT_AGGR_BK_TIME(x) (((x) & BIT_MASK_AGGR_BK_TIME) << BIT_SHIFT_AGGR_BK_TIME)


//2 REG_SLOT

#define BIT_SHIFT_SLOT 0
#define BIT_MASK_SLOT 0xff
#define BIT_SLOT(x) (((x) & BIT_MASK_SLOT) << BIT_SHIFT_SLOT)


//2 REG_PS_TIMER
#define BIT_PS_TIMER_B_EN_8710C BIT(31)

//2 REG_NOT_VALID

#define BIT_SHIFT_PS_TIMER_B_TSF_SEL 28
#define BIT_MASK_PS_TIMER_B_TSF_SEL 0x3
#define BIT_PS_TIMER_B_TSF_SEL(x) (((x) & BIT_MASK_PS_TIMER_B_TSF_SEL) << BIT_SHIFT_PS_TIMER_B_TSF_SEL)

#define BIT_PS_TIMER_A_EN_8710C BIT(27)

//2 REG_NOT_VALID

#define BIT_SHIFT_PS_TIMER_A_TSF_SEL 24
#define BIT_MASK_PS_TIMER_A_TSF_SEL 0x3
#define BIT_PS_TIMER_A_TSF_SEL(x) (((x) & BIT_MASK_PS_TIMER_A_TSF_SEL) << BIT_SHIFT_PS_TIMER_A_TSF_SEL)


//2 REG_NOT_VALID

#define BIT_SHIFT_EARLY_NOA_OFF 8
#define BIT_MASK_EARLY_NOA_OFF 0xff
#define BIT_EARLY_NOA_OFF(x) (((x) & BIT_MASK_EARLY_NOA_OFF) << BIT_SHIFT_EARLY_NOA_OFF)


//2 REG_NOT_VALID

//2 REG_TX_PTCL_CTRL
#define BIT_DIS_EDCCA_8710C BIT(15)
#define BIT_DIS_CCA_8710C BIT(14)
#define BIT_LSIG_TXOP_TXCMD_NAV_8710C BIT(13)
#define BIT_SIFS_BK_EN_8710C BIT(12)

#define BIT_SHIFT_TXQ_NAV_MSK 8
#define BIT_MASK_TXQ_NAV_MSK 0xf
#define BIT_TXQ_NAV_MSK(x) (((x) & BIT_MASK_TXQ_NAV_MSK) << BIT_SHIFT_TXQ_NAV_MSK)

#define BIT_DIS_CW_8710C BIT(7)
#define BIT_NAV_END_TXOP_8710C BIT(6)
#define BIT_RDG_END_TXOP_8710C BIT(5)
#define BIT_AC_INBCN_HOLD_8710C BIT(4)
#define BIT_MGTQ_TXOP_EN_8710C BIT(3)
#define BIT_MGTQ_RTSMF_EN_8710C BIT(2)
#define BIT_HIQ_RTSMF_EN_8710C BIT(1)
#define BIT_BCN_RTSMF_EN_8710C BIT(0)

//2 REG_TXPAUSE
#define BIT_MAC_STOPCPUMGQ_8710C BIT(7)
#define BIT_MAC_STOPBCNQ_8710C BIT(6)
#define BIT_MAC_STOPHIQ_8710C BIT(5)
#define BIT_MAC_STOPMGQ_8710C BIT(4)
#define BIT_MAC_STOPBK_8710C BIT(3)
#define BIT_MAC_STOPBE_8710C BIT(2)
#define BIT_MAC_STOPVI_8710C BIT(1)
#define BIT_MAC_STOPVO_8710C BIT(0)

//2 REG_DIS_TXREQ_CLR
#define BIT_DIS_BT_CCA_8710C BIT(7)
#define BIT_DIS_TXREQ_CLR_CPUMGQ_8710C BIT(6)
#define BIT_DIS_TXREQ_CLR_HI_8710C BIT(5)
#define BIT_DIS_TXREQ_CLR_MGQ_8710C BIT(4)
#define BIT_DIS_TXREQ_CLR_VO_8710C BIT(3)
#define BIT_DIS_TXREQ_CLR_VI_8710C BIT(2)
#define BIT_DIS_TXREQ_CLR_BE_8710C BIT(1)
#define BIT_DIS_TXREQ_CLR_BK_8710C BIT(0)

//2 REG_RD_CTRL
#define BIT_EN_CLR_TXREQ_INCCA_8710C BIT(15)
#define BIT_DIS_TX_OVER_BCNQ_8710C BIT(14)
#define BIT_EN_BCNERR_INCCCA_8710C BIT(13)

//2 REG_NOT_VALID
#define BIT_EDCCA_MSK_CNTDOWN_EN_8710C BIT(11)
#define BIT_DIS_TXOP_CFE_8710C BIT(10)
#define BIT_DIS_LSIG_CFE_8710C BIT(9)
#define BIT_DIS_STBC_CFE_8710C BIT(8)
#define BIT_BKQ_RD_INIT_EN_8710C BIT(7)
#define BIT_BEQ_RD_INIT_EN_8710C BIT(6)
#define BIT_VIQ_RD_INIT_EN_8710C BIT(5)
#define BIT_VOQ_RD_INIT_EN_8710C BIT(4)
#define BIT_BKQ_RD_RESP_EN_8710C BIT(3)
#define BIT_BEQ_RD_RESP_EN_8710C BIT(2)
#define BIT_VIQ_RD_RESP_EN_8710C BIT(1)
#define BIT_VOQ_RD_RESP_EN_8710C BIT(0)

//2 REG_MBSSID_CTRL
#define BIT_MBID_BCNQ7_EN_8710C BIT(7)
#define BIT_MBID_BCNQ6_EN_8710C BIT(6)
#define BIT_MBID_BCNQ5_EN_8710C BIT(5)
#define BIT_MBID_BCNQ4_EN_8710C BIT(4)
#define BIT_MBID_BCNQ3_EN_8710C BIT(3)
#define BIT_MBID_BCNQ2_EN_8710C BIT(2)
#define BIT_MBID_BCNQ1_EN_8710C BIT(1)
#define BIT_MBID_BCNQ0_EN_8710C BIT(0)

//2 REG_P2PPS_CTRL
#define BIT_P2P_CTW_ALLSTASLEEP_8710C BIT(7)
#define BIT_P2P_DISTX_SEL_8710C BIT(6)
#define BIT_PWR_MGT_EN_8710C BIT(5)
#define BIT_P2P_BCN_AREA_EN_8710C BIT(4)
#define BIT_P2P_CTWND_EN_8710C BIT(3)
#define BIT_P2P_NOA1_EN_8710C BIT(2)
#define BIT_P2P_NOA0_EN_8710C BIT(1)
#define BIT_P2P_BCN_SEL_8710C BIT(0)

//2 REG_PKT_LIFETIME_CTRL
#define BIT_EN_P2P_CTWND1_8710C BIT(23)
#define BIT_EN_BKF_CLR_TXREQ_8710C BIT(22)
#define BIT_EN_TSFBIT32_RST_P2P_8710C BIT(21)
#define BIT_EN_BCN_TX_BTCCA_8710C BIT(20)
#define BIT_DIS_PKT_TX_ATIM_8710C BIT(19)
#define BIT_DIS_BCN_DIS_CTN_8710C BIT(18)
#define BIT_EN_NAVEND_RST_TXOP_8710C BIT(17)
#define BIT_EN_FILTER_CCA_8710C BIT(16)

#define BIT_SHIFT_CCA_FILTER_THRS 8
#define BIT_MASK_CCA_FILTER_THRS 0xff
#define BIT_CCA_FILTER_THRS(x) (((x) & BIT_MASK_CCA_FILTER_THRS) << BIT_SHIFT_CCA_FILTER_THRS)


#define BIT_SHIFT_EDCCA_THRS 0
#define BIT_MASK_EDCCA_THRS 0xff
#define BIT_EDCCA_THRS(x) (((x) & BIT_MASK_EDCCA_THRS) << BIT_SHIFT_EDCCA_THRS)


//2 REG_P2PPS_SPEC_STATE
#define BIT_SPEC_POWER_STATE_8710C BIT(7)
#define BIT_SPEC_CTWINDOW_ON_8710C BIT(6)
#define BIT_SPEC_BEACON_AREA_ON_8710C BIT(5)
#define BIT_SPEC_CTWIN_EARLY_DISTX_8710C BIT(4)
#define BIT_SPEC_NOA1_OFF_PERIOD_8710C BIT(3)
#define BIT_SPEC_FORCE_DOZE1_8710C BIT(2)
#define BIT_SPEC_NOA0_OFF_PERIOD_8710C BIT(1)
#define BIT_SPEC_FORCE_DOZE0_8710C BIT(0)

//2 REG_PS_TIMER_A

#define BIT_SHIFT_PS_TIMER_A 0
#define BIT_MASK_PS_TIMER_A 0xffffffffL
#define BIT_PS_TIMER_A(x) (((x) & BIT_MASK_PS_TIMER_A) << BIT_SHIFT_PS_TIMER_A)


//2 REG_P2PON_DIS_TXTIME

//2 REG_NOT_VALID

#define BIT_SHIFT_P2PON_DIS_TXTIME 8
#define BIT_MASK_P2PON_DIS_TXTIME 0xff
#define BIT_P2PON_DIS_TXTIME(x) (((x) & BIT_MASK_P2PON_DIS_TXTIME) << BIT_SHIFT_P2PON_DIS_TXTIME)


//2 REG_NOT_VALID

//2 REG_PS_TIMER_B

#define BIT_SHIFT_PS_TIMER_B 0
#define BIT_MASK_PS_TIMER_B 0xffffffffL
#define BIT_PS_TIMER_B(x) (((x) & BIT_MASK_PS_TIMER_B) << BIT_SHIFT_PS_TIMER_B)


//2 REG_TBTT_PROHIBIT

//2 REG_NOT_VALID
#define BIT_TBTT_DIG_8710C BIT(20)

#define BIT_SHIFT_TBTT_HOLD_TIME_AP 8
#define BIT_MASK_TBTT_HOLD_TIME_AP 0xfff
#define BIT_TBTT_HOLD_TIME_AP(x) (((x) & BIT_MASK_TBTT_HOLD_TIME_AP) << BIT_SHIFT_TBTT_HOLD_TIME_AP)


#define BIT_SHIFT_TBTT_HOLD_TIME_INFRA 4
#define BIT_MASK_TBTT_HOLD_TIME_INFRA 0xf
#define BIT_TBTT_HOLD_TIME_INFRA(x) (((x) & BIT_MASK_TBTT_HOLD_TIME_INFRA) << BIT_SHIFT_TBTT_HOLD_TIME_INFRA)


#define BIT_SHIFT_TBTT_PROHIBIT_SETUP 0
#define BIT_MASK_TBTT_PROHIBIT_SETUP 0xf
#define BIT_TBTT_PROHIBIT_SETUP(x) (((x) & BIT_MASK_TBTT_PROHIBIT_SETUP) << BIT_SHIFT_TBTT_PROHIBIT_SETUP)


//2 REG_P2PPS_STATE
#define BIT_POWER_STATE_8710C BIT(7)
#define BIT_CTWINDOW_ON_8710C BIT(6)
#define BIT_BEACON_AREA_ON_8710C BIT(5)
#define BIT_CTWIN_EARLY_DISTX_8710C BIT(4)
#define BIT_NOA1_OFF_PERIOD_8710C BIT(3)
#define BIT_FORCE_DOZE1_8710C BIT(2)
#define BIT_NOA0_OFF_PERIOD_8710C BIT(1)
#define BIT_FORCE_DOZE0_8710C BIT(0)

//2 REG_RD_NAV_NXT

#define BIT_SHIFT_RD_NAV_PROT_NXT 0
#define BIT_MASK_RD_NAV_PROT_NXT 0xffff
#define BIT_RD_NAV_PROT_NXT(x) (((x) & BIT_MASK_RD_NAV_PROT_NXT) << BIT_SHIFT_RD_NAV_PROT_NXT)


//2 REG_NAV_PROT_LEN

#define BIT_SHIFT_NAV_PROT_LEN 0
#define BIT_MASK_NAV_PROT_LEN 0xffff
#define BIT_NAV_PROT_LEN(x) (((x) & BIT_MASK_NAV_PROT_LEN) << BIT_SHIFT_NAV_PROT_LEN)


//2 REG_FTM_SETTING

//2 REG_NOT_VALID
#define BIT_FTM_PTT_TSF_R2T_SEL_8710C BIT(24)

//2 REG_NOT_VALID
#define BIT_FTM_PTT_TSF_T2R_SEL_8710C BIT(20)

//2 REG_NOT_VALID
#define BIT_FTM_PTT_TSF_SEL_8710C BIT(16)

#define BIT_SHIFT_FTM_PTT 0
#define BIT_MASK_FTM_PTT 0xffff
#define BIT_FTM_PTT(x) (((x) & BIT_MASK_FTM_PTT) << BIT_SHIFT_FTM_PTT)


//2 REG_FTM_TSF_CNT

#define BIT_SHIFT_FTM_TSF_R2T 16
#define BIT_MASK_FTM_TSF_R2T 0xffff
#define BIT_FTM_TSF_R2T(x) (((x) & BIT_MASK_FTM_TSF_R2T) << BIT_SHIFT_FTM_TSF_R2T)


#define BIT_SHIFT_FTM_TSF_T2R 0
#define BIT_MASK_FTM_TSF_T2R 0xffff
#define BIT_FTM_TSF_T2R(x) (((x) & BIT_MASK_FTM_TSF_T2R) << BIT_SHIFT_FTM_TSF_T2R)


//2 REG_BCN_CTRL
#define BIT_DIS_RX_BSSID_FIT_8710C BIT(6)
#define BIT_DIS_TSF_UDT_8710C BIT(4)
#define BIT_EN_BCN_FUNCTION_8710C BIT(3)
#define BIT_EN_TXBCN_RPT_8710C BIT(2)
#define BIT_DIS_BCNQ_SUB_8710C BIT(1)

//2 REG_NOT_VALID

//2 REG_BCN_CTRL1
#define BIT_DIS_RX_BSSID_FIT1_8710C BIT(6)
#define BIT_DIS_TSF1_UDT_8710C BIT(4)
#define BIT_EN_BCN1_FUNCTION_8710C BIT(3)
#define BIT_EN_TXBCN1_RPT_8710C BIT(2)
#define BIT_DIS_BCNQ1_SUB_8710C BIT(1)

//2 REG_MBID_NUM
#define BIT_EN_PRE_DL_BEACON_8710C BIT(3)

#define BIT_SHIFT_MBID_BCN_NUM 0
#define BIT_MASK_MBID_BCN_NUM 0x7
#define BIT_MBID_BCN_NUM_8710C(x) (((x) & BIT_MASK_MBID_BCN_NUM) << BIT_SHIFT_MBID_BCN_NUM)


//2 REG_DUAL_TSF_RST
#define BIT_P2P_PWR_RST1_8710C BIT(6)
#define BIT_SCHEDULER_RST_8710C BIT(5)
#define BIT_P2P_PWR_RST0_8710C BIT(4)
#define BIT_TSFTR1_SYNC_EN_8710C BIT(3)
#define BIT_TSFTR_SYNC_EN_8710C BIT(2)
#define BIT_TSFTR1_RST_8710C BIT(1)
#define BIT_TSFTR_RST_8710C BIT(0)

//2 REG_MBSSID_BCN_SPACE

#define BIT_SHIFT_BCN_SPACE1 16
#define BIT_MASK_BCN_SPACE1 0xffff
#define BIT_BCN_SPACE1(x) (((x) & BIT_MASK_BCN_SPACE1) << BIT_SHIFT_BCN_SPACE1)


#define BIT_SHIFT_BCN_SPACE0 0
#define BIT_MASK_BCN_SPACE0 0xffff
#define BIT_BCN_SPACE0(x) (((x) & BIT_MASK_BCN_SPACE0) << BIT_SHIFT_BCN_SPACE0)


//2 REG_DRVERLYINT

#define BIT_SHIFT_DRVERLYITV 0
#define BIT_MASK_DRVERLYITV 0xff
#define BIT_DRVERLYITV(x) (((x) & BIT_MASK_DRVERLYITV) << BIT_SHIFT_DRVERLYITV)


//2 REG_BCNDMATIM

#define BIT_SHIFT_BCNDMATIM 0
#define BIT_MASK_BCNDMATIM 0xff
#define BIT_BCNDMATIM(x) (((x) & BIT_MASK_BCNDMATIM) << BIT_SHIFT_BCNDMATIM)


//2 REG_ATIMWND

#define BIT_SHIFT_ATIMWND 0
#define BIT_MASK_ATIMWND 0xffff
#define BIT_ATIMWND(x) (((x) & BIT_MASK_ATIMWND) << BIT_SHIFT_ATIMWND)


//2 REG_USTIME_TSF

#define BIT_SHIFT_USTIME_TSF_V1 0
#define BIT_MASK_USTIME_TSF_V1 0xff
#define BIT_USTIME_TSF_V1(x) (((x) & BIT_MASK_USTIME_TSF_V1) << BIT_SHIFT_USTIME_TSF_V1)


//2 REG_BCN_MAX_ERR

#define BIT_SHIFT_BCN_MAX_ERR 0
#define BIT_MASK_BCN_MAX_ERR 0xff
#define BIT_BCN_MAX_ERR(x) (((x) & BIT_MASK_BCN_MAX_ERR) << BIT_SHIFT_BCN_MAX_ERR)


//2 REG_RXTSF_OFFSET_CCK

#define BIT_SHIFT_CCK_RXTSF_OFFSET 0
#define BIT_MASK_CCK_RXTSF_OFFSET 0xff
#define BIT_CCK_RXTSF_OFFSET(x) (((x) & BIT_MASK_CCK_RXTSF_OFFSET) << BIT_SHIFT_CCK_RXTSF_OFFSET)


//2 REG_RXTSF_OFFSET_OFDM

#define BIT_SHIFT_OFDM_RXTSF_OFFSET 0
#define BIT_MASK_OFDM_RXTSF_OFFSET 0xff
#define BIT_OFDM_RXTSF_OFFSET(x) (((x) & BIT_MASK_OFDM_RXTSF_OFFSET) << BIT_SHIFT_OFDM_RXTSF_OFFSET)


//2 REG_TSFTR

#define BIT_SHIFT_TSF_TIMER 0
#define BIT_MASK_TSF_TIMER 0xffffffffffffffffL
#define BIT_TSF_TIMER(x) (((x) & BIT_MASK_TSF_TIMER) << BIT_SHIFT_TSF_TIMER)


//2 REG_TSFTR1

#define BIT_SHIFT_TSF_TIMER1 0
#define BIT_MASK_TSF_TIMER1 0xffffffffffffffffL
#define BIT_TSF_TIMER1(x) (((x) & BIT_MASK_TSF_TIMER1) << BIT_SHIFT_TSF_TIMER1)


//2 REG_ATIMWND1

#define BIT_SHIFT_ATIMWND1 0
#define BIT_MASK_ATIMWND1 0xffff
#define BIT_ATIMWND1(x) (((x) & BIT_MASK_ATIMWND1) << BIT_SHIFT_ATIMWND1)


//2 REG_CTWND

#define BIT_SHIFT_CTWND 0
#define BIT_MASK_CTWND 0xff
#define BIT_CTWND(x) (((x) & BIT_MASK_CTWND) << BIT_SHIFT_CTWND)


//2 REG_BCNIVLCUNT

#define BIT_SHIFT_BCNIVLCUNT 0
#define BIT_MASK_BCNIVLCUNT 0x7f
#define BIT_BCNIVLCUNT(x) (((x) & BIT_MASK_BCNIVLCUNT) << BIT_SHIFT_BCNIVLCUNT)


//2 REG_BCNDROPCTRL
#define BIT_BEACON_DROP_EN_8710C BIT(7)

#define BIT_SHIFT_BEACON_DROP_IVL 0
#define BIT_MASK_BEACON_DROP_IVL 0x7f
#define BIT_BEACON_DROP_IVL(x) (((x) & BIT_MASK_BEACON_DROP_IVL) << BIT_SHIFT_BEACON_DROP_IVL)


//2 REG_HGQ_TIMEOUT_PERIOD

#define BIT_SHIFT_HGQ_TIMEOUT_PERIOD 0
#define BIT_MASK_HGQ_TIMEOUT_PERIOD 0xff
#define BIT_HGQ_TIMEOUT_PERIOD(x) (((x) & BIT_MASK_HGQ_TIMEOUT_PERIOD) << BIT_SHIFT_HGQ_TIMEOUT_PERIOD)


//2 REG_TXCMD_TIMEOUT_PERIOD

#define BIT_SHIFT_TXCMD_TIMEOUT_PERIOD 0
#define BIT_MASK_TXCMD_TIMEOUT_PERIOD 0xff
#define BIT_TXCMD_TIMEOUT_PERIOD(x) (((x) & BIT_MASK_TXCMD_TIMEOUT_PERIOD) << BIT_SHIFT_TXCMD_TIMEOUT_PERIOD)


//2 REG_MISC_CTRL

#define BIT_SHIFT_DIS_SECONDARY_CCA 0
#define BIT_MASK_DIS_SECONDARY_CCA 0x3
#define BIT_DIS_SECONDARY_CCA(x) (((x) & BIT_MASK_DIS_SECONDARY_CCA) << BIT_SHIFT_DIS_SECONDARY_CCA)


//2 REG_TSFTR

#define BIT_SHIFT_TSF_TIMER 0
#define BIT_MASK_TSF_TIMER 0xffffffffffffffffL
#define BIT_TSF_TIMER(x) (((x) & BIT_MASK_TSF_TIMER) << BIT_SHIFT_TSF_TIMER)


//2 REG_PS_TIMER

#define BIT_SHIFT_PSTIMER 5
#define BIT_MASK_PSTIMER 0x7ffffff
#define BIT_PSTIMER(x) (((x) & BIT_MASK_PSTIMER) << BIT_SHIFT_PSTIMER)


//2 REG_TIMER0

#define BIT_SHIFT_TIMER0_INT 5
#define BIT_MASK_TIMER0_INT 0x7ffffff
#define BIT_TIMER0_INT(x) (((x) & BIT_MASK_TIMER0_INT) << BIT_SHIFT_TIMER0_INT)


//2 REG_TIMER1

#define BIT_SHIFT_TIMER1_INT 5
#define BIT_MASK_TIMER1_INT 0x7ffffff
#define BIT_TIMER1_INT(x) (((x) & BIT_MASK_TIMER1_INT) << BIT_SHIFT_TIMER1_INT)


//2 REG_TBTT_CTN_AREA

#define BIT_SHIFT_TBTT_CTN_AREA 0
#define BIT_MASK_TBTT_CTN_AREA 0xff
#define BIT_TBTT_CTN_AREA(x) (((x) & BIT_MASK_TBTT_CTN_AREA) << BIT_SHIFT_TBTT_CTN_AREA)


//2 REG_FORCE_BCN_IFS

#define BIT_SHIFT_FORCE_BCN_IFS 0
#define BIT_MASK_FORCE_BCN_IFS 0xff
#define BIT_FORCE_BCN_IFS(x) (((x) & BIT_MASK_FORCE_BCN_IFS) << BIT_SHIFT_FORCE_BCN_IFS)


//2 REG_DRVERLYINT

#define BIT_SHIFT_PRE_BCN_DMATIM 0
#define BIT_MASK_PRE_BCN_DMATIM 0xff
#define BIT_PRE_BCN_DMATIM(x) (((x) & BIT_MASK_PRE_BCN_DMATIM) << BIT_SHIFT_PRE_BCN_DMATIM)


//2 REG_TXOP_MIN
#define BIT_NAV_BLK_HGQ_8710C BIT(15)
#define BIT_NAV_BLK_MGQ_8710C BIT(14)

#define BIT_SHIFT_TXOP_MIN 0
#define BIT_MASK_TXOP_MIN 0x3fff
#define BIT_TXOP_MIN(x) (((x) & BIT_MASK_TXOP_MIN) << BIT_SHIFT_TXOP_MIN)


//2 REG_PRE_BKF_TIME

#define BIT_SHIFT_PRE_BKF_TIME 0
#define BIT_MASK_PRE_BKF_TIME 0xff
#define BIT_PRE_BKF_TIME(x) (((x) & BIT_MASK_PRE_BKF_TIME) << BIT_SHIFT_PRE_BKF_TIME)


//2 REG_CROSS_TXOP_CTRL

#define BIT_SHIFT_PRETX_US 3
#define BIT_MASK_PRETX_US 0xf
#define BIT_PRETX_US(x) (((x) & BIT_MASK_PRETX_US) << BIT_SHIFT_PRETX_US)

#define BIT_DTIM_BYPASS_8710C BIT(2)
#define BIT_RTS_NAV_TXOP_8710C BIT(1)
#define BIT_NOT_CROSS_TXOP_8710C BIT(0)

//2 REG_RX_TBTT_SHIFT_SEL

#define BIT_SHIFT_RX_TBTT_SHIFT_SEL 0
#define BIT_MASK_RX_TBTT_SHIFT_SEL 0x7
#define BIT_RX_TBTT_SHIFT_SEL(x) (((x) & BIT_MASK_RX_TBTT_SHIFT_SEL) << BIT_SHIFT_RX_TBTT_SHIFT_SEL)


//2 REG_RX_TBTT_SHIFT
#define BIT_RX_TBTT_SHIFT_RW_FLAG_8710C BIT(15)

#define BIT_SHIFT_RX_TBTT_SHIFT_OFFSET 0
#define BIT_MASK_RX_TBTT_SHIFT_OFFSET 0xfff
#define BIT_RX_TBTT_SHIFT_OFFSET(x) (((x) & BIT_MASK_RX_TBTT_SHIFT_OFFSET) << BIT_SHIFT_RX_TBTT_SHIFT_OFFSET)


//2 REG_ATIMWND2

#define BIT_SHIFT_ATIMWND2 0
#define BIT_MASK_ATIMWND2 0xff
#define BIT_ATIMWND2(x) (((x) & BIT_MASK_ATIMWND2) << BIT_SHIFT_ATIMWND2)


#define BIT_SHIFT_ATIMWND3 0
#define BIT_MASK_ATIMWND3 0xff
#define BIT_ATIMWND3(x) (((x) & BIT_MASK_ATIMWND3) << BIT_SHIFT_ATIMWND3)


//2 REG_ATIMWND4

#define BIT_SHIFT_ATIMWND4 0
#define BIT_MASK_ATIMWND4 0xff
#define BIT_ATIMWND4(x) (((x) & BIT_MASK_ATIMWND4) << BIT_SHIFT_ATIMWND4)


//2 REG_ATIMWND5

#define BIT_SHIFT_ATIMWND5 0
#define BIT_MASK_ATIMWND5 0xff
#define BIT_ATIMWND5(x) (((x) & BIT_MASK_ATIMWND5) << BIT_SHIFT_ATIMWND5)


//2 REG_ATIMWND6

#define BIT_SHIFT_ATIMWND6 0
#define BIT_MASK_ATIMWND6 0xff
#define BIT_ATIMWND6(x) (((x) & BIT_MASK_ATIMWND6) << BIT_SHIFT_ATIMWND6)


//2 REG_ATIMWND7

#define BIT_SHIFT_ATIMWND7 0
#define BIT_MASK_ATIMWND7 0xff
#define BIT_ATIMWND7(x) (((x) & BIT_MASK_ATIMWND7) << BIT_SHIFT_ATIMWND7)


//2 REG_ATIMUGT

#define BIT_SHIFT_ATIM_URGENT 0
#define BIT_MASK_ATIM_URGENT 0xff
#define BIT_ATIM_URGENT(x) (((x) & BIT_MASK_ATIM_URGENT) << BIT_SHIFT_ATIM_URGENT)


//2 REG_HIQ_NO_LMT_EN
#define BIT_HIQ_NO_LMT_EN_VAP7_8710C BIT(7)
#define BIT_HIQ_NO_LMT_EN_VAP6_8710C BIT(6)
#define BIT_HIQ_NO_LMT_EN_VAP5_8710C BIT(5)
#define BIT_HIQ_NO_LMT_EN_VAP4_8710C BIT(4)
#define BIT_HIQ_NO_LMT_EN_VAP3_8710C BIT(3)
#define BIT_HIQ_NO_LMT_EN_VAP2_8710C BIT(2)
#define BIT_HIQ_NO_LMT_EN_VAP1_8710C BIT(1)
#define BIT_HIQ_NO_LMT_EN_ROOT_8710C BIT(0)

//2 REG_DTIM_COUNTER_ROOT

#define BIT_SHIFT_DTIM_COUNT_ROOT 0
#define BIT_MASK_DTIM_COUNT_ROOT 0xff
#define BIT_DTIM_COUNT_ROOT(x) (((x) & BIT_MASK_DTIM_COUNT_ROOT) << BIT_SHIFT_DTIM_COUNT_ROOT)


//2 REG_DTIM_COUNTER_VAP1

#define BIT_SHIFT_DTIM_COUNT_VAP1 0
#define BIT_MASK_DTIM_COUNT_VAP1 0xff
#define BIT_DTIM_COUNT_VAP1(x) (((x) & BIT_MASK_DTIM_COUNT_VAP1) << BIT_SHIFT_DTIM_COUNT_VAP1)


//2 REG_DTIM_COUNTER_VAP2

#define BIT_SHIFT_DTIM_COUNT_VAP2 0
#define BIT_MASK_DTIM_COUNT_VAP2 0xff
#define BIT_DTIM_COUNT_VAP2(x) (((x) & BIT_MASK_DTIM_COUNT_VAP2) << BIT_SHIFT_DTIM_COUNT_VAP2)


//2 REG_DTIM_COUNTER_VAP3

#define BIT_SHIFT_DTIM_COUNT_VAP3 0
#define BIT_MASK_DTIM_COUNT_VAP3 0xff
#define BIT_DTIM_COUNT_VAP3(x) (((x) & BIT_MASK_DTIM_COUNT_VAP3) << BIT_SHIFT_DTIM_COUNT_VAP3)


//2 REG_DTIM_COUNTER_VAP4

#define BIT_SHIFT_DTIM_COUNT_VAP4 0
#define BIT_MASK_DTIM_COUNT_VAP4 0xff
#define BIT_DTIM_COUNT_VAP4(x) (((x) & BIT_MASK_DTIM_COUNT_VAP4) << BIT_SHIFT_DTIM_COUNT_VAP4)


//2 REG_DTIM_COUNTER_VAP5

#define BIT_SHIFT_DTIM_COUNT_VAP5 0
#define BIT_MASK_DTIM_COUNT_VAP5 0xff
#define BIT_DTIM_COUNT_VAP5(x) (((x) & BIT_MASK_DTIM_COUNT_VAP5) << BIT_SHIFT_DTIM_COUNT_VAP5)


//2 REG_DTIM_COUNTER_VAP6

#define BIT_SHIFT_DTIM_COUNT_VAP6 0
#define BIT_MASK_DTIM_COUNT_VAP6 0xff
#define BIT_DTIM_COUNT_VAP6(x) (((x) & BIT_MASK_DTIM_COUNT_VAP6) << BIT_SHIFT_DTIM_COUNT_VAP6)


//2 REG_DTIM_COUNTER_VAP7

#define BIT_SHIFT_DTIM_COUNT_VAP7 0
#define BIT_MASK_DTIM_COUNT_VAP7 0xff
#define BIT_DTIM_COUNT_VAP7(x) (((x) & BIT_MASK_DTIM_COUNT_VAP7) << BIT_SHIFT_DTIM_COUNT_VAP7)


//2 REG_DIS_ATIM
#define BIT_DIS_ATIM_VAP7_8710C BIT(7)
#define BIT_DIS_ATIM_VAP6_8710C BIT(6)
#define BIT_DIS_ATIM_VAP5_8710C BIT(5)
#define BIT_DIS_ATIM_VAP4_8710C BIT(4)
#define BIT_DIS_ATIM_VAP3_8710C BIT(3)
#define BIT_DIS_ATIM_VAP2_8710C BIT(2)
#define BIT_DIS_ATIM_VAP1_8710C BIT(1)
#define BIT_DIS_ATIM_ROOT_8710C BIT(0)

//2 REG_EARLY_128US

#define BIT_SHIFT_EARLY_128US_2ST 3
#define BIT_MASK_EARLY_128US_2ST 0x7
#define BIT_EARLY_128US_2ST(x) (((x) & BIT_MASK_EARLY_128US_2ST) << BIT_SHIFT_EARLY_128US_2ST)


#define BIT_SHIFT_EARLY_128US 0
#define BIT_MASK_EARLY_128US 0x7
#define BIT_EARLY_128US(x) (((x) & BIT_MASK_EARLY_128US) << BIT_SHIFT_EARLY_128US)


//2 REG_NOT_VALID
#define BIT_DIS_BCN_3RD_8710C BIT(7)
#define BIT_DIS_BCN_2ST_8710C BIT(6)
#define BIT_DIS_BCN_1ST_8710C BIT(5)

#define BIT_SHIFT_TBTT_HOLD_PREDICT_P1 0
#define BIT_MASK_TBTT_HOLD_PREDICT_P1 0x1f
#define BIT_TBTT_HOLD_PREDICT_P1(x) (((x) & BIT_MASK_TBTT_HOLD_PREDICT_P1) << BIT_SHIFT_TBTT_HOLD_PREDICT_P1)


//2 REG_NOT_VALID
#define BIT_TSFTR3_SYNC_EN_8710C BIT(7)

//2 REG_NOT_VALID
#define BIT_TSFTR2_SYNC_EN_8710C BIT(5)
#define BIT_TSFTR2_RST_8710C BIT(4)

#define BIT_SHIFT_MULTI_BCN_CS 0
#define BIT_MASK_MULTI_BCN_CS 0xf
#define BIT_MULTI_BCN_CS(x) (((x) & BIT_MASK_MULTI_BCN_CS) << BIT_SHIFT_MULTI_BCN_CS)


//2 REG_32K_SRC_SEL
#define BIT_SLEEP_32K_EN_8710C BIT(0)

//2 REG_NOT_VALID

//2 REG_P2POFF_DIS_TXTIME

#define BIT_SHIFT_P2POFF_DIS_TXTIME 0
#define BIT_MASK_P2POFF_DIS_TXTIME 0xff
#define BIT_P2POFF_DIS_TXTIME(x) (((x) & BIT_MASK_P2POFF_DIS_TXTIME) << BIT_SHIFT_P2POFF_DIS_TXTIME)


//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_ACMHWCTRL
#define BIT_BEQ_ACM_STATUS_8710C BIT(7)
#define BIT_VIQ_ACM_STATUS_8710C BIT(6)
#define BIT_VOQ_ACM_STATUS_8710C BIT(5)

//2 REG_NOT_VALID
#define BIT_BEQ_ACM_EN_8710C BIT(3)
#define BIT_VIQ_ACM_EN_8710C BIT(2)
#define BIT_VOQ_ACM_EN_8710C BIT(1)
#define BIT_ACMHWEN_8710C BIT(0)

//2 REG_ACMRSTCTRL
#define BIT_BE_ACM_RESET_USED_TIME_8710C BIT(2)
#define BIT_VI_ACM_RESET_USED_TIME_8710C BIT(1)
#define BIT_VO_ACM_RESET_USED_TIME_8710C BIT(0)

//2 REG_ACMAVG

#define BIT_SHIFT_AVGPERIOD 0
#define BIT_MASK_AVGPERIOD 0xffff
#define BIT_AVGPERIOD(x) (((x) & BIT_MASK_AVGPERIOD) << BIT_SHIFT_AVGPERIOD)


//2 REG_VO_ADMTIME

#define BIT_SHIFT_VO_ADMITTED_TIME 0
#define BIT_MASK_VO_ADMITTED_TIME 0xffff
#define BIT_VO_ADMITTED_TIME(x) (((x) & BIT_MASK_VO_ADMITTED_TIME) << BIT_SHIFT_VO_ADMITTED_TIME)


//2 REG_VI_ADMTIME

#define BIT_SHIFT_VI_ADMITTED_TIME 0
#define BIT_MASK_VI_ADMITTED_TIME 0xffff
#define BIT_VI_ADMITTED_TIME(x) (((x) & BIT_MASK_VI_ADMITTED_TIME) << BIT_SHIFT_VI_ADMITTED_TIME)


//2 REG_BE_ADMTIME

#define BIT_SHIFT_BE_ADMITTED_TIME 0
#define BIT_MASK_BE_ADMITTED_TIME 0xffff
#define BIT_BE_ADMITTED_TIME(x) (((x) & BIT_MASK_BE_ADMITTED_TIME) << BIT_SHIFT_BE_ADMITTED_TIME)


//2 REG_EDCA_RANDOM_GEN

#define BIT_SHIFT_RANDOM_GEN 0
#define BIT_MASK_RANDOM_GEN 0xffffff
#define BIT_RANDOM_GEN(x) (((x) & BIT_MASK_RANDOM_GEN) << BIT_SHIFT_RANDOM_GEN)


//2 REG_TXCMD_NOA_SEL

#define BIT_SHIFT_EVTQ_EARLY 5
#define BIT_MASK_EVTQ_EARLY 0x7
#define BIT_EVTQ_EARLY(x) (((x) & BIT_MASK_EVTQ_EARLY) << BIT_SHIFT_EVTQ_EARLY)

#define BIT_NOA_SEL_8710C BIT(4)

#define BIT_SHIFT_TXCMD_SEG_SEL 0
#define BIT_MASK_TXCMD_SEG_SEL 0xf
#define BIT_TXCMD_SEG_SEL(x) (((x) & BIT_MASK_TXCMD_SEG_SEL) << BIT_SHIFT_TXCMD_SEG_SEL)


//2 REG_DRVERLYINT2

#define BIT_SHIFT_DRVERLYITV2 0
#define BIT_MASK_DRVERLYITV2 0xff
#define BIT_DRVERLYITV2(x) (((x) & BIT_MASK_DRVERLYITV2) << BIT_SHIFT_DRVERLYITV2)


//2 REG_TXPAUSE1

#define BIT_SHIFT_TXPAUSE1 0
#define BIT_MASK_TXPAUSE1 0xff
#define BIT_TXPAUSE1(x) (((x) & BIT_MASK_TXPAUSE1) << BIT_SHIFT_TXPAUSE1)


//2 REG_TSFDIFF

#define BIT_SHIFT_TSF_DIFF_P1P2 0
#define BIT_MASK_TSF_DIFF_P1P2 0xffff
#define BIT_TSF_DIFF_P1P2(x) (((x) & BIT_MASK_TSF_DIFF_P1P2) << BIT_SHIFT_TSF_DIFF_P1P2)


//2 REG_NAN_SETTING
#define BIT_EN_MULTI_BCN_8710C BIT(31)
#define BIT_ENP2P_DW_AREA_8710C BIT(30)

#define BIT_SHIFT_TBTT_PROHIBIT_HOLD_P2 18
#define BIT_MASK_TBTT_PROHIBIT_HOLD_P2 0xfff
#define BIT_TBTT_PROHIBIT_HOLD_P2(x) (((x) & BIT_MASK_TBTT_PROHIBIT_HOLD_P2) << BIT_SHIFT_TBTT_PROHIBIT_HOLD_P2)


#define BIT_SHIFT_BCN_PORT_PRI 16
#define BIT_MASK_BCN_PORT_PRI 0x3
#define BIT_BCN_PORT_PRI(x) (((x) & BIT_MASK_BCN_PORT_PRI) << BIT_SHIFT_BCN_PORT_PRI)


#define BIT_SHIFT_DRVERLYITV1 8
#define BIT_MASK_DRVERLYITV1 0xff
#define BIT_DRVERLYITV1(x) (((x) & BIT_MASK_DRVERLYITV1) << BIT_SHIFT_DRVERLYITV1)


//2 REG_NOT_VALID
#define BIT_DIS_RX_BSSID_FIT2_8710C BIT(6)

//2 REG_NOT_VALID
#define BIT_DIS_TSF2_UDT_8710C BIT(4)
#define BIT_EN_BCN2_FUNCTION_8710C BIT(3)

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_MBSSID_BCN_SPACE2

#define BIT_SHIFT_BCN_SPACE4 16
#define BIT_MASK_BCN_SPACE4 0xffff
#define BIT_BCN_SPACE4(x) (((x) & BIT_MASK_BCN_SPACE4) << BIT_SHIFT_BCN_SPACE4)


#define BIT_SHIFT_BCN_SPACE3 0
#define BIT_MASK_BCN_SPACE3 0xffff
#define BIT_BCN_SPACE3(x) (((x) & BIT_MASK_BCN_SPACE3) << BIT_SHIFT_BCN_SPACE3)


//2 REG_NOT_VALID

#define BIT_SHIFT_SYNCBCN_RXNUM 27
#define BIT_MASK_SYNCBCN_RXNUM 0x1f
#define BIT_SYNCBCN_RXNUM(x) (((x) & BIT_MASK_SYNCBCN_RXNUM) << BIT_SHIFT_SYNCBCN_RXNUM)

#define BIT_DW_END_EARLY_8710C BIT(26)

#define BIT_SHIFT_NAN_ROLE 24
#define BIT_MASK_NAN_ROLE 0x3
#define BIT_NAN_ROLE(x) (((x) & BIT_MASK_NAN_ROLE) << BIT_SHIFT_NAN_ROLE)


#define BIT_SHIFT_MSLOT_EVTQ 16
#define BIT_MASK_MSLOT_EVTQ 0xff
#define BIT_MSLOT_EVTQ(x) (((x) & BIT_MASK_MSLOT_EVTQ) << BIT_SHIFT_MSLOT_EVTQ)


#define BIT_SHIFT_MDW_EVTQ 8
#define BIT_MASK_MDW_EVTQ 0xff
#define BIT_MDW_EVTQ(x) (((x) & BIT_MASK_MDW_EVTQ) << BIT_SHIFT_MDW_EVTQ)


#define BIT_SHIFT_HC 0
#define BIT_MASK_HC 0xff
#define BIT_HC(x) (((x) & BIT_MASK_HC) << BIT_SHIFT_HC)


//2 REG_NOA_PARAM

#define BIT_SHIFT_NOA_COUNT (96 & CPU_OPT_WIDTH)
#define BIT_MASK_NOA_COUNT 0xff
#define BIT_NOA_COUNT(x) (((x) & BIT_MASK_NOA_COUNT) << BIT_SHIFT_NOA_COUNT)


#define BIT_SHIFT_NOA_START_TIME (64 & CPU_OPT_WIDTH)
#define BIT_MASK_NOA_START_TIME 0xffffffffL
#define BIT_NOA_START_TIME(x) (((x) & BIT_MASK_NOA_START_TIME) << BIT_SHIFT_NOA_START_TIME)


#define BIT_SHIFT_NOA_INTERVAL (32 & CPU_OPT_WIDTH)
#define BIT_MASK_NOA_INTERVAL 0xffffffffL
#define BIT_NOA_INTERVAL(x) (((x) & BIT_MASK_NOA_INTERVAL) << BIT_SHIFT_NOA_INTERVAL)


#define BIT_SHIFT_NOA_DURATION 0
#define BIT_MASK_NOA_DURATION 0xffffffffL
#define BIT_NOA_DURATION(x) (((x) & BIT_MASK_NOA_DURATION) << BIT_SHIFT_NOA_DURATION)


//2 REG_NOA_SUBIE
#define BIT_MORE_NOA_DESC_8710C BIT(19)
#define BIT_NOA_DESC1_VALID_8710C BIT(18)
#define BIT_NOA_DESC0_VALID_8710C BIT(17)
#define BIT_NOA_HEAD_VALID_8710C BIT(16)
#define BIT_NOA_OPP_PS_8710C BIT(15)

#define BIT_SHIFT_NOA_CTW 8
#define BIT_MASK_NOA_CTW 0x7f
#define BIT_NOA_CTW(x) (((x) & BIT_MASK_NOA_CTW) << BIT_SHIFT_NOA_CTW)


#define BIT_SHIFT_NOA_INDEX 0
#define BIT_MASK_NOA_INDEX 0xff
#define BIT_NOA_INDEX(x) (((x) & BIT_MASK_NOA_INDEX) << BIT_SHIFT_NOA_INDEX)


//2 REG_ EXTEND _TXPAUSE
//#define BIT_MAC_STOPCPUMGQ_8710C BIT(0)

//2 REG_NOT_VALID

//2 REG_SCH_DBG

#define BIT_SHIFT_SCH_DBG 0
#define BIT_MASK_SCH_DBG 0xffffffffL
#define BIT_SCH_DBG(x) (((x) & BIT_MASK_SCH_DBG) << BIT_SHIFT_SCH_DBG)


//2 REG_SCH_TXCMD

#define BIT_SHIFT_SCH_TXCMD 0
#define BIT_MASK_SCH_TXCMD 0xffffffffL
#define BIT_SCH_TXCMD(x) (((x) & BIT_MASK_SCH_TXCMD) << BIT_SHIFT_SCH_TXCMD)


//2 REG_PAGE5_DUMMY

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_WMAC_CR (WMAC CR REGISTER)
#define BIT_APSDOFF_STATUS_8710C BIT(7)
#define BIT_APSDOFF_8710C BIT(6)
#define BIT_STANDBY_STATUS_8710C BIT(5)
#define BIT_IC_MACPHY_M_8710C BIT(0)

//2 REG_TCR (TRANSMISSION CONFIGURATION REGISTER)
#define BIT_WMAC_TCRPWRMGT_HWCTL_EN_8710C BIT(27)
#define BIT_WMAC_TCRPWRMGT_HWCTL_V1_8710C BIT(26)
#define BIT_BF_SEL_8710C BIT(25)
#define BIT_RXLEN_SEL_8710C BIT(24)

#define BIT_SHIFT_TSFT_CMP 20
#define BIT_MASK_TSFT_CMP 0xf
#define BIT_TSFT_CMP(x) (((x) & BIT_MASK_TSFT_CMP) << BIT_SHIFT_TSFT_CMP)


#define BIT_SHIFT_TSFT_CMP_CCK 16
#define BIT_MASK_TSFT_CMP_CCK 0xf
#define BIT_TSFT_CMP_CCK(x) (((x) & BIT_MASK_TSFT_CMP_CCK) << BIT_SHIFT_TSFT_CMP_CCK)

#define BIT_WMAC_TCR_ERRSTEN_3_8710C BIT(15)
#define BIT_WMAC_TCR_ERRSTEN_2_8710C BIT(14)
#define BIT_WMAC_TCR_ERRSTEN_1_8710C BIT(13)
#define BIT_WMAC_TCR_ERRSTEN_0_8710C BIT(12)
#define BIT_WMAC_TCR_TXSK_PERPKT_8710C BIT(11)
#define BIT_ICV_8710C BIT(10)
#define BIT_CFEND_FORMAT_8710C BIT(9)
#define BIT_CRC_8710C BIT(8)
#define BIT_WMAC_TCRPWRMGT_HWDATA_EN_8710C BIT(7)
#define BIT_PWR_ST_8710C BIT(6)
#define BIT_WMAC_TCR_UPD_TIMIE_8710C BIT(5)
#define BIT_WMAC_TCR_UPD_HGQMD_8710C BIT(4)
#define BIT_VHTSIGA1_TXPS_8710C BIT(3)
#define BIT_PAD_SEL_8710C BIT(2)
#define BIT_DIS_GCLK_8710C BIT(1)
#define BIT_WMAC_TCRPWRMGT_HWACT_EN_8710C BIT(0)

//2 REG_RCR (RECEIVE CONFIGURATION REGISTER)
#define BIT_APP_FCS_8710C BIT(31)
#define BIT_APP_MIC_8710C BIT(30)
#define BIT_APP_ICV_8710C BIT(29)
#define BIT_APP_PHYSTS_8710C BIT(28)
#define BIT_APP_BASSN_8710C BIT(27)
#define BIT_VHT_DACK_8710C BIT(26)
#define BIT_TCPOFLD_EN_8710C BIT(25)
#define BIT_ENMBID_8710C BIT(24)
#define BIT_LSIGEN_8710C BIT(23)
#define BIT_MFBEN_8710C BIT(22)
#define BIT_DISCHKPPDLLEN_8710C BIT(21)
#define BIT_PKTCTL_DLEN_8710C BIT(20)
#define BIT_DISGCLK_8710C BIT(19)
#define BIT_TIM_PARSER_EN_8710C BIT(18)
#define BIT_BM_DATA_EN_8710C BIT(17)
#define BIT_UC_DATA_EN_8710C BIT(16)
#define BIT_RXSK_PERPKT_8710C BIT(15)
#define BIT_HTC_LOC_CTRL_8710C BIT(14)
#define BIT_AMF_8710C BIT(13)
#define BIT_ACF_8710C BIT(12)
#define BIT_ADF_8710C BIT(11)
#define BIT_DISDECMYPKT_8710C BIT(10)
#define BIT_AICV_8710C BIT(9)
#define BIT_ACRC32_8710C BIT(8)
#define BIT_CBSSID_BCN_8710C BIT(7)
#define BIT_CBSSID_DATA_8710C BIT(6)
#define BIT_APWRMGT_8710C BIT(5)
#define BIT_ADD3_8710C BIT(4)
#define BIT_AB_8710C BIT(3)
#define BIT_AM_8710C BIT(2)
#define BIT_APM_8710C BIT(1)
#define BIT_AAP_8710C BIT(0)

//2 REG_RX_DRVINFO_SZ (RX DRIVER INFO SIZE REGISTER)
#define BIT_APP_PHYSTS_PER_SUBMPDU_8710C BIT(7)
#define BIT_APP_MH_SHIFT_VAL_8710C BIT(6)
#define BIT_WMAC_ENSHIFT_8710C BIT(5)

#define BIT_SHIFT_DRVINFO_SZ 0
#define BIT_MASK_DRVINFO_SZ 0xf
#define BIT_DRVINFO_SZ(x) (((x) & BIT_MASK_DRVINFO_SZ) << BIT_SHIFT_DRVINFO_SZ)


//2 REG_RX_DLK_TIME (RX DEADLOCK TIME REGISTER)

#define BIT_SHIFT_RX_DLK_TIME 0
#define BIT_MASK_RX_DLK_TIME 0xff
#define BIT_RX_DLK_TIME(x) (((x) & BIT_MASK_RX_DLK_TIME) << BIT_SHIFT_RX_DLK_TIME)


//2 REG_RX_PKT_LIMIT (RX PACKET LENGTH LIMIT REGISTER)

#define BIT_SHIFT_RXPKTLMT 0
#define BIT_MASK_RXPKTLMT 0x3f
#define BIT_RXPKTLMT(x) (((x) & BIT_MASK_RXPKTLMT) << BIT_SHIFT_RXPKTLMT)


//2 REG_MACID (MAC ID REGISTER)

#define BIT_SHIFT_MACID 0
#define BIT_MASK_MACID 0xffffffffffffL
#define BIT_MACID(x) (((x) & BIT_MASK_MACID) << BIT_SHIFT_MACID)


//2 REG_BSSID (BSSID REGISTER)

#define BIT_SHIFT_BSSID 0
#define BIT_MASK_BSSID 0xffffffffffffL
#define BIT_BSSID(x) (((x) & BIT_MASK_BSSID) << BIT_SHIFT_BSSID)


//2 REG_MAR (MULTICAST ADDRESS REGISTER)

#define BIT_SHIFT_MAR 0
#define BIT_MASK_MAR 0xffffffffffffffffL
#define BIT_MAR(x) (((x) & BIT_MASK_MAR) << BIT_SHIFT_MAR)


//2 REG_MBIDCAMCFG_1 (MBSSID CAM CONFIGURATION REGISTER)

#define BIT_SHIFT_MBIDCAM_RWDATA_L 0
#define BIT_MASK_MBIDCAM_RWDATA_L 0xffffffffL
#define BIT_MBIDCAM_RWDATA_L(x) (((x) & BIT_MASK_MBIDCAM_RWDATA_L) << BIT_SHIFT_MBIDCAM_RWDATA_L)


//2 REG_MBIDCAMCFG_2 (MBSSID CAM CONFIGURATION REGISTER)
#define BIT_MBIDCAM_POLL_8710C BIT(31)
#define BIT_MBIDCAM_WT_EN_8710C BIT(30)

#define BIT_SHIFT_MBIDCAM_ADDR 24
#define BIT_MASK_MBIDCAM_ADDR 0x1f
#define BIT_MBIDCAM_ADDR(x) (((x) & BIT_MASK_MBIDCAM_ADDR) << BIT_SHIFT_MBIDCAM_ADDR)

#define BIT_MBIDCAM_VALID_8710C BIT(23)
#define BIT_LSIC_TXOP_EN_8710C BIT(17)
#define BIT_CTS_EN_8710C BIT(16)

#define BIT_SHIFT_MBIDCAM_RWDATA_H 0
#define BIT_MASK_MBIDCAM_RWDATA_H 0xffff
#define BIT_MBIDCAM_RWDATA_H(x) (((x) & BIT_MASK_MBIDCAM_RWDATA_H) << BIT_SHIFT_MBIDCAM_RWDATA_H)


//2 REG_MCU_TEST_1

#define BIT_SHIFT_MCU_RSVD 0
#define BIT_MASK_MCU_RSVD 0xffffffffL
#define BIT_MCU_RSVD(x) (((x) & BIT_MASK_MCU_RSVD) << BIT_SHIFT_MCU_RSVD)


//2 REG_MCU_TEST_2

#define BIT_SHIFT_MCU_RSVD_2 0
#define BIT_MASK_MCU_RSVD_2 0xffffffffL
#define BIT_MCU_RSVD_2(x) (((x) & BIT_MASK_MCU_RSVD_2) << BIT_SHIFT_MCU_RSVD_2)


//2 REG_MAC_SPEC_SIFS (SPECIFICATION SIFS REGISTER)

#define BIT_SHIFT_SPEC_SIFS_OFDM 8
#define BIT_MASK_SPEC_SIFS_OFDM 0xff
#define BIT_SPEC_SIFS_OFDM(x) (((x) & BIT_MASK_SPEC_SIFS_OFDM) << BIT_SHIFT_SPEC_SIFS_OFDM)


#define BIT_SHIFT_SPEC_SIFS_CCK 0
#define BIT_MASK_SPEC_SIFS_CCK 0xff
#define BIT_SPEC_SIFS_CCK(x) (((x) & BIT_MASK_SPEC_SIFS_CCK) << BIT_SHIFT_SPEC_SIFS_CCK)


//2 REG_NOT_VALID

//2 REG_USTIME_EDCA (US TIME TUNING FOR EDCA REGISTER)

#define BIT_SHIFT_USTIME_EDCA 0
#define BIT_MASK_USTIME_EDCA 0xff
#define BIT_USTIME_EDCA(x) (((x) & BIT_MASK_USTIME_EDCA) << BIT_SHIFT_USTIME_EDCA)


//2 REG_RESP_SIFS_OFDM (RESPONSE SIFS FOR OFDM REGISTER)

#define BIT_SHIFT_SIFS_R2T_OFDM 8
#define BIT_MASK_SIFS_R2T_OFDM 0xff
#define BIT_SIFS_R2T_OFDM(x) (((x) & BIT_MASK_SIFS_R2T_OFDM) << BIT_SHIFT_SIFS_R2T_OFDM)


#define BIT_SHIFT_SIFS_T2T_OFDM 0
#define BIT_MASK_SIFS_T2T_OFDM 0xff
#define BIT_SIFS_T2T_OFDM(x) (((x) & BIT_MASK_SIFS_T2T_OFDM) << BIT_SHIFT_SIFS_T2T_OFDM)


//2 REG_RESP_SIFS_CCK (RESPONSE SIFS FOR CCK REGISTER)

#define BIT_SHIFT_SIFS_R2T_CCK 8
#define BIT_MASK_SIFS_R2T_CCK 0xff
#define BIT_SIFS_R2T_CCK(x) (((x) & BIT_MASK_SIFS_R2T_CCK) << BIT_SHIFT_SIFS_R2T_CCK)


#define BIT_SHIFT_SIFS_T2T_CCK 0
#define BIT_MASK_SIFS_T2T_CCK 0xff
#define BIT_SIFS_T2T_CCK(x) (((x) & BIT_MASK_SIFS_T2T_CCK) << BIT_SHIFT_SIFS_T2T_CCK)


//2 REG_EIFS (EIFS REGISTER)

#define BIT_SHIFT_EIFS 0
#define BIT_MASK_EIFS 0xffff
#define BIT_EIFS(x) (((x) & BIT_MASK_EIFS) << BIT_SHIFT_EIFS)


//2 REG_CTS2TO (CTS2 TIMEOUT REGISTER)

#define BIT_SHIFT_CTS2TO 0
#define BIT_MASK_CTS2TO 0xff
#define BIT_CTS2TO(x) (((x) & BIT_MASK_CTS2TO) << BIT_SHIFT_CTS2TO)


//2 REG_ACKTO (ACK TIMEOUT REGISTER)

#define BIT_SHIFT_ACKTO 0
#define BIT_MASK_ACKTO 0xff
#define BIT_ACKTO(x) (((x) & BIT_MASK_ACKTO) << BIT_SHIFT_ACKTO)


//2 REG_NOT_VALID

//2 REG_NAV_CTRL (NAV CONTROL REGISTER)

#define BIT_SHIFT_NAV_UPPER 16
#define BIT_MASK_NAV_UPPER 0xff
#define BIT_NAV_UPPER(x) (((x) & BIT_MASK_NAV_UPPER) << BIT_SHIFT_NAV_UPPER)


#define BIT_SHIFT_RXMYRTS_NAV 8
#define BIT_MASK_RXMYRTS_NAV 0xf
#define BIT_RXMYRTS_NAV(x) (((x) & BIT_MASK_RXMYRTS_NAV) << BIT_SHIFT_RXMYRTS_NAV)


#define BIT_SHIFT_RTSRST 0
#define BIT_MASK_RTSRST 0xff
#define BIT_RTSRST(x) (((x) & BIT_MASK_RTSRST) << BIT_SHIFT_RTSRST)


//2 REG_BACAMCMD (BLOCK ACK CAM COMMAND REGISTER)
#define BIT_BACAM_POLL_8710C BIT(31)
#define BIT_BACAM_RST_8710C BIT(17)
#define BIT_BACAM_RW_8710C BIT(16)

#define BIT_SHIFT_TXSBM 14
#define BIT_MASK_TXSBM 0x3
#define BIT_TXSBM(x) (((x) & BIT_MASK_TXSBM) << BIT_SHIFT_TXSBM)


#define BIT_SHIFT_BACAM_ADDR 0
#define BIT_MASK_BACAM_ADDR 0x3f
#define BIT_BACAM_ADDR(x) (((x) & BIT_MASK_BACAM_ADDR) << BIT_SHIFT_BACAM_ADDR)


//2 REG_BACAMCONTENT (BLOCK ACK CAM CONTENT REGISTER)

#define BIT_SHIFT_BA_CONTENT_H (32 & CPU_OPT_WIDTH)
#define BIT_MASK_BA_CONTENT_H 0xffffffffL
#define BIT_BA_CONTENT_H(x) (((x) & BIT_MASK_BA_CONTENT_H) << BIT_SHIFT_BA_CONTENT_H)


#define BIT_SHIFT_BA_CONTENT_L 0
#define BIT_MASK_BA_CONTENT_L 0xffffffffL
#define BIT_BA_CONTENT_L(x) (((x) & BIT_MASK_BA_CONTENT_L) << BIT_SHIFT_BA_CONTENT_L)


//2 REG_WMAC_BITMAP_CTL
#define BIT_BITMAP_VO_8710C BIT(7)
#define BIT_BITMAP_VI_8710C BIT(6)
#define BIT_BITMAP_BE_8710C BIT(5)
#define BIT_BITMAP_BK_8710C BIT(4)

#define BIT_SHIFT_BITMAP_CONDITION 2
#define BIT_MASK_BITMAP_CONDITION 0x3
#define BIT_BITMAP_CONDITION(x) (((x) & BIT_MASK_BITMAP_CONDITION) << BIT_SHIFT_BITMAP_CONDITION)

#define BIT_BITMAP_SSNBK_COUNTER_CLR_8710C BIT(1)
#define BIT_BITMAP_FORCE_8710C BIT(0)

//2 REG_TX_RX STATUS

#define BIT_SHIFT_RXPKT_TYPE 2
#define BIT_MASK_RXPKT_TYPE 0x3f
#define BIT_RXPKT_TYPE(x) (((x) & BIT_MASK_RXPKT_TYPE) << BIT_SHIFT_RXPKT_TYPE)

#define BIT_TXACT_IND_8710C BIT(1)
#define BIT_RXACT_IND_8710C BIT(0)

//2 REG_NOT_VALID

#define BIT_SHIFT_BITMAP_SSNBK_COUNTER 2
#define BIT_MASK_BITMAP_SSNBK_COUNTER 0x3f
#define BIT_BITMAP_SSNBK_COUNTER(x) (((x) & BIT_MASK_BITMAP_SSNBK_COUNTER) << BIT_SHIFT_BITMAP_SSNBK_COUNTER)

#define BIT_BITMAP_EN_8710C BIT(1)

//2 REG_LBDLY (LOOPBACK DELAY REGISTER)

#define BIT_SHIFT_LBDLY 0
#define BIT_MASK_LBDLY 0x1f
#define BIT_LBDLY(x) (((x) & BIT_MASK_LBDLY) << BIT_SHIFT_LBDLY)


//2 REG_RXERR_RPT (RX ERROR REPORT REGISTER)

#define BIT_SHIFT_RXERR_RPT_SEL_V1_3_0 28
#define BIT_MASK_RXERR_RPT_SEL_V1_3_0 0xf
#define BIT_RXERR_RPT_SEL_V1_3_0(x) (((x) & BIT_MASK_RXERR_RPT_SEL_V1_3_0) << BIT_SHIFT_RXERR_RPT_SEL_V1_3_0)

#define BIT_RXERR_RPT_RST_8710C BIT(27)
#define BIT_RXERR_RPT_SEL_V1_4_8710C BIT(26)
#define BIT_W1S_8710C BIT(23)
#define BIT_UD_SELECT_BSSID_8710C BIT(22)

#define BIT_SHIFT_UD_SUB_TYPE 18
#define BIT_MASK_UD_SUB_TYPE 0xf
#define BIT_UD_SUB_TYPE(x) (((x) & BIT_MASK_UD_SUB_TYPE) << BIT_SHIFT_UD_SUB_TYPE)


#define BIT_SHIFT_UD_TYPE 16
#define BIT_MASK_UD_TYPE 0x3
#define BIT_UD_TYPE(x) (((x) & BIT_MASK_UD_TYPE) << BIT_SHIFT_UD_TYPE)


#define BIT_SHIFT_RPT_COUNTER 0
#define BIT_MASK_RPT_COUNTER 0xffff
#define BIT_RPT_COUNTER(x) (((x) & BIT_MASK_RPT_COUNTER) << BIT_SHIFT_RPT_COUNTER)


//2 REG_WMAC_TRXPTCL_CTL (WMAC TX/RX PROTOCOL CONTROL REGISTER)

#define BIT_SHIFT_ACKBA_TYPSEL (60 & CPU_OPT_WIDTH)
#define BIT_MASK_ACKBA_TYPSEL 0xf
#define BIT_ACKBA_TYPSEL(x) (((x) & BIT_MASK_ACKBA_TYPSEL) << BIT_SHIFT_ACKBA_TYPSEL)


#define BIT_SHIFT_ACKBA_ACKPCHK (56 & CPU_OPT_WIDTH)
#define BIT_MASK_ACKBA_ACKPCHK 0xf
#define BIT_ACKBA_ACKPCHK(x) (((x) & BIT_MASK_ACKBA_ACKPCHK) << BIT_SHIFT_ACKBA_ACKPCHK)


#define BIT_SHIFT_ACKBAR_TYPESEL (48 & CPU_OPT_WIDTH)
#define BIT_MASK_ACKBAR_TYPESEL 0xff
#define BIT_ACKBAR_TYPESEL(x) (((x) & BIT_MASK_ACKBAR_TYPESEL) << BIT_SHIFT_ACKBAR_TYPESEL)


#define BIT_SHIFT_ACKBAR_ACKPCHK (44 & CPU_OPT_WIDTH)
#define BIT_MASK_ACKBAR_ACKPCHK 0xf
#define BIT_ACKBAR_ACKPCHK(x) (((x) & BIT_MASK_ACKBAR_ACKPCHK) << BIT_SHIFT_ACKBAR_ACKPCHK)

#define BIT_RXBA_IGNOREA2_8710C BIT(42)
#define BIT_EN_SAVE_ALL_TXOPADDR_8710C BIT(41)
#define BIT_EN_TXCTS_TO_TXOPOWNER_INRXNAV_8710C BIT(40)
#define BIT_DIS_TXBA_AMPDUFCSERR_8710C BIT(39)
#define BIT_DIS_TXBA_RXBARINFULL_8710C BIT(38)
#define BIT_DIS_TXCFE_INFULL_8710C BIT(37)
#define BIT_DIS_TXCTS_INFULL_8710C BIT(36)
#define BIT_EN_TXACKBA_IN_TX_RDG_8710C BIT(35)
#define BIT_EN_TXACKBA_IN_TXOP_8710C BIT(34)
#define BIT_EN_TXCTS_IN_RXNAV_8710C BIT(33)
#define BIT_EN_TXCTS_INTXOP_8710C BIT(32)
#define BIT_BLK_EDCA_BBSLP_8710C BIT(31)
#define BIT_BLK_EDCA_BBSBY_8710C BIT(30)
#define BIT_ACKTO_BLOCK_SCH_EN_8710C BIT(27)
#define BIT_EIFS_BLOCK_SCH_EN_8710C BIT(26)
#define BIT_PLCPCHK_RST_EIFS_8710C BIT(25)
#define BIT_CCA_RST_EIFS_8710C BIT(24)
#define BIT_DIS_UPD_MYRXPKTNAV_8710C BIT(23)
#define BIT_EARLY_TXBA_8710C BIT(22)

#define BIT_SHIFT_RESP_CHNBUSY 20
#define BIT_MASK_RESP_CHNBUSY 0x3
#define BIT_RESP_CHNBUSY(x) (((x) & BIT_MASK_RESP_CHNBUSY) << BIT_SHIFT_RESP_CHNBUSY)

#define BIT_RESP_DCTS_EN_8710C BIT(19)
#define BIT_RESP_DCFE_EN_8710C BIT(18)
#define BIT_RESP_SPLCPEN_8710C BIT(17)
#define BIT_RESP_SGIEN_8710C BIT(16)
#define BIT_RESP_LDPC_EN_8710C BIT(15)
#define BIT_DIS_RESP_ACKINCCA_8710C BIT(14)
#define BIT_DIS_RESP_CTSINCCA_8710C BIT(13)

#define BIT_SHIFT_R_WMAC_SECOND_CCA_TIMER 10
#define BIT_MASK_R_WMAC_SECOND_CCA_TIMER 0x7
#define BIT_R_WMAC_SECOND_CCA_TIMER(x) (((x) & BIT_MASK_R_WMAC_SECOND_CCA_TIMER) << BIT_SHIFT_R_WMAC_SECOND_CCA_TIMER)


#define BIT_SHIFT_RFMOD 7
#define BIT_MASK_RFMOD 0x3
#define BIT_RFMOD(x) (((x) & BIT_MASK_RFMOD) << BIT_SHIFT_RFMOD)


#define BIT_SHIFT_RESP_CTS_DYNBW_SEL 5
#define BIT_MASK_RESP_CTS_DYNBW_SEL 0x3
#define BIT_RESP_CTS_DYNBW_SEL(x) (((x) & BIT_MASK_RESP_CTS_DYNBW_SEL) << BIT_SHIFT_RESP_CTS_DYNBW_SEL)

#define BIT_DLY_TX_WAIT_RXANTSEL_8710C BIT(4)
#define BIT_TXRESP_BY_RXANTSEL_8710C BIT(3)
#define BIT_RESP_EARLY_TXACK_RWEPTKIP_8710C BIT(2)

#define BIT_SHIFT_ORIG_DCTS_CHK 0
#define BIT_MASK_ORIG_DCTS_CHK 0x3
#define BIT_ORIG_DCTS_CHK(x) (((x) & BIT_MASK_ORIG_DCTS_CHK) << BIT_SHIFT_ORIG_DCTS_CHK)


//2 REG_CAMCMD (CAM COMMAND REGISTER)
#define BIT_SECCAM_POLLING_8710C BIT(31)
#define BIT_SECCAM_CLR_8710C BIT(30)
#define BIT_MFBCAM_CLR_8710C BIT(29)
#define BIT_SECCAM_WE_8710C BIT(16)

#define BIT_SHIFT_SECCAM_ADDR_V1 0
#define BIT_MASK_SECCAM_ADDR_V1 0xff
#define BIT_SECCAM_ADDR_V1(x) (((x) & BIT_MASK_SECCAM_ADDR_V1) << BIT_SHIFT_SECCAM_ADDR_V1)


//2 REG_CAMWRITE (CAM WRITE REGISTER)

#define BIT_SHIFT_CAMW_DATA 0
#define BIT_MASK_CAMW_DATA 0xffffffffL
#define BIT_CAMW_DATA(x) (((x) & BIT_MASK_CAMW_DATA) << BIT_SHIFT_CAMW_DATA)


//2 REG_CAMREAD (CAM READ REGISTER)

#define BIT_SHIFT_CAMR_DATA 0
#define BIT_MASK_CAMR_DATA 0xffffffffL
#define BIT_CAMR_DATA(x) (((x) & BIT_MASK_CAMR_DATA) << BIT_SHIFT_CAMR_DATA)


//2 REG_CAMDBG (CAM DEBUG REGISTER)
#define BIT_SECCAM_INFO_8710C BIT(31)
#define BIT_SEC_KEYFOUND_8710C BIT(15)

#define BIT_SHIFT_CAMDBG_SEC_TYPE 12
#define BIT_MASK_CAMDBG_SEC_TYPE 0x7
#define BIT_CAMDBG_SEC_TYPE(x) (((x) & BIT_MASK_CAMDBG_SEC_TYPE) << BIT_SHIFT_CAMDBG_SEC_TYPE)


#define BIT_SHIFT_CAMDBG_MIC_KEY_IDX 5
#define BIT_MASK_CAMDBG_MIC_KEY_IDX 0x1f
#define BIT_CAMDBG_MIC_KEY_IDX(x) (((x) & BIT_MASK_CAMDBG_MIC_KEY_IDX) << BIT_SHIFT_CAMDBG_MIC_KEY_IDX)


#define BIT_SHIFT_CAMDBG_SEC_KEY_IDX 0
#define BIT_MASK_CAMDBG_SEC_KEY_IDX 0x1f
#define BIT_CAMDBG_SEC_KEY_IDX(x) (((x) & BIT_MASK_CAMDBG_SEC_KEY_IDX) << BIT_SHIFT_CAMDBG_SEC_KEY_IDX)


//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_SECCFG (SECURITY CONFIGURATION REGISTER)
#define BIT_RXDEC_BM_MGNT_8710C BIT(19)
#define BIT_TXENC_BM_MGNT_8710C BIT(18)
#define BIT_RXDEC_UNI_MGNT_8710C BIT(17)
#define BIT_TXENC_UNI_MGNT_8710C BIT(16)
#define BIT_DIS_GCLK_WAPI_8710C BIT(15)
#define BIT_DIS_GCLK_AES_8710C BIT(14)
#define BIT_DIS_GCLK_TKIP_8710C BIT(13)
#define BIT_AES_SEL_QC_MIC_8710C BIT(12)
#define BIT_AES_SEL_QC_CTR_8710C BIT(11)
#define BIT_CHK_KEYID_8710C BIT(8)
#define BIT_RXBCUSEDK_8710C BIT(7)
#define BIT_TXBCUSEDK_8710C BIT(6)
#define BIT_NOSKMC_8710C BIT(5)
#define BIT_SKBYA2_8710C BIT(4)
#define BIT_RXDEC_8710C BIT(3)
#define BIT_TXENC_8710C BIT(2)
#define BIT_RXUHUSEDK_8710C BIT(1)
#define BIT_TXUHUSEDK_8710C BIT(0)

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_WMMPS_UAPSD_TID (WMM POWER SAVE UAPSD TID REGISTER)
#define BIT_WMMPS_UAPSD_TID7_8710C BIT(7)
#define BIT_WMMPS_UAPSD_TID6_8710C BIT(6)
#define BIT_WMMPS_UAPSD_TID5_8710C BIT(5)
#define BIT_WMMPS_UAPSD_TID4_8710C BIT(4)
#define BIT_WMMPS_UAPSD_TID3_8710C BIT(3)
#define BIT_WMMPS_UAPSD_TID2_8710C BIT(2)
#define BIT_WMMPS_UAPSD_TID1_8710C BIT(1)
#define BIT_WMMPS_UAPSD_TID0_8710C BIT(0)

//2 REG_PS_RX_INFO (POWER SAVE RX INFORMATION REGISTER)
#define BIT_RXCTRLIN0_8710C BIT(4)
#define BIT_RXMGTIN0_8710C BIT(3)
#define BIT_RXDATAIN2_8710C BIT(2)
#define BIT_RXDATAIN1_8710C BIT(1)
#define BIT_RXDATAIN0_8710C BIT(0)

//2 REG_NOT_VALID

//2 REG_WOW_CTRL (WAKE ON WLAN CONTROL REGISTER)

#define BIT_SHIFT_PSF_BSSIDSEL 6
#define BIT_MASK_PSF_BSSIDSEL 0x3
#define BIT_PSF_BSSIDSEL(x) (((x) & BIT_MASK_PSF_BSSIDSEL) << BIT_SHIFT_PSF_BSSIDSEL)

#define BIT_WOWHCI_8710C BIT(5)
#define BIT_PSF_BSSIDSEL_8710C BIT(4)
#define BIT_UWF_8710C BIT(3)
#define BIT_MAGIC_8710C BIT(2)
#define BIT_WOWEN_8710C BIT(1)
#define BIT_FORCE_WAKEUP_8710C BIT(0)

//2 REG_LPNAV_CTRL (LOW POWER NAV CONTROL REGISTER)
#define BIT_LPNAV_EN_8710C BIT(31)

#define BIT_SHIFT_LPNAV_EARLY 16
#define BIT_MASK_LPNAV_EARLY 0x7fff
#define BIT_LPNAV_EARLY(x) (((x) & BIT_MASK_LPNAV_EARLY) << BIT_SHIFT_LPNAV_EARLY)


#define BIT_SHIFT_LPNAV_TH 0
#define BIT_MASK_LPNAV_TH 0xffff
#define BIT_LPNAV_TH(x) (((x) & BIT_MASK_LPNAV_TH) << BIT_SHIFT_LPNAV_TH)


//2 REG_WKFMCAM_NUM (WAKEUP FRAME CAM NUMBER REGISTER)

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

#define BIT_SHIFT_WKFCAM_NUM 0
#define BIT_MASK_WKFCAM_NUM 0xff
#define BIT_WKFCAM_NUM_8710C(x) (((x) & BIT_MASK_WKFCAM_NUM) << BIT_SHIFT_WKFCAM_NUM)


//2 REG_NOT_VALID

//2 REG_RXFLTMAP1 (RX FILTER MAP GROUP 1)
#define BIT_CTRLFLT15EN_8710C BIT(15)
#define BIT_CTRLFLT14EN_8710C BIT(14)
#define BIT_CTRLFLT13EN_8710C BIT(13)
#define BIT_CTRLFLT12EN_8710C BIT(12)
#define BIT_CTRLFLT11EN_8710C BIT(11)
#define BIT_CTRLFLT10EN_8710C BIT(10)
#define BIT_CTRLFLT9EN_8710C BIT(9)
#define BIT_CTRLFLT8EN_8710C BIT(8)
#define BIT_CTRLFLT7EN_8710C BIT(7)
#define BIT_CTRLFLT6EN_8710C BIT(6)
#define BIT_CTRLFLT5EN_8710C BIT(5)
#define BIT_CTRLFLT4EN_8710C BIT(4)
#define BIT_CTRLFLT3EN_8710C BIT(3)
#define BIT_CTRLFLT2EN_8710C BIT(2)
#define BIT_CTRLFLT1EN_8710C BIT(1)
#define BIT_CTRLFLT0EN_8710C BIT(0)

//2 REG_RXFLTMAP0 (RX FILTER MAP GROUP 0)
#define BIT_MGTFLT15EN_8710C BIT(15)
#define BIT_MGTFLT14EN_8710C BIT(14)
#define BIT_MGTFLT13EN_8710C BIT(13)
#define BIT_MGTFLT12EN_8710C BIT(12)
#define BIT_MGTFLT11EN_8710C BIT(11)
#define BIT_MGTFLT10EN_8710C BIT(10)
#define BIT_MGTFLT9EN_8710C BIT(9)
#define BIT_MGTFLT8EN_8710C BIT(8)
#define BIT_MGTFLT7EN_8710C BIT(7)
#define BIT_MGTFLT6EN_8710C BIT(6)
#define BIT_MGTFLT5EN_8710C BIT(5)
#define BIT_MGTFLT4EN_8710C BIT(4)
#define BIT_MGTFLT3EN_8710C BIT(3)
#define BIT_MGTFLT2EN_8710C BIT(2)
#define BIT_MGTFLT1EN_8710C BIT(1)
#define BIT_MGTFLT0EN_8710C BIT(0)

//2 REG_NOT_VALID

//2 REG_RXFLTMAP (RX FILTER MAP GROUP 2)
#define BIT_DATAFLT15EN_8710C BIT(15)
#define BIT_DATAFLT14EN_8710C BIT(14)
#define BIT_DATAFLT13EN_8710C BIT(13)
#define BIT_DATAFLT12EN_8710C BIT(12)
#define BIT_DATAFLT11EN_8710C BIT(11)
#define BIT_DATAFLT10EN_8710C BIT(10)
#define BIT_DATAFLT9EN_8710C BIT(9)
#define BIT_DATAFLT8EN_8710C BIT(8)
#define BIT_DATAFLT7EN_8710C BIT(7)
#define BIT_DATAFLT6EN_8710C BIT(6)
#define BIT_DATAFLT5EN_8710C BIT(5)
#define BIT_DATAFLT4EN_8710C BIT(4)
#define BIT_DATAFLT3EN_8710C BIT(3)
#define BIT_DATAFLT2EN_8710C BIT(2)
#define BIT_DATAFLT1EN_8710C BIT(1)
#define BIT_DATAFLT0EN_8710C BIT(0)

//2 REG_BCN_PSR_RPT (BEACON PARSER REPORT REGISTER)

#define BIT_SHIFT_DTIM_CNT 24
#define BIT_MASK_DTIM_CNT 0xff
#define BIT_DTIM_CNT(x) (((x) & BIT_MASK_DTIM_CNT) << BIT_SHIFT_DTIM_CNT)


#define BIT_SHIFT_DTIM_PERIOD 16
#define BIT_MASK_DTIM_PERIOD 0xff
#define BIT_DTIM_PERIOD(x) (((x) & BIT_MASK_DTIM_PERIOD) << BIT_SHIFT_DTIM_PERIOD)

#define BIT_DTIM_8710C BIT(15)
#define BIT_TIM_8710C BIT(14)

#define BIT_SHIFT_PS_AID_0 0
#define BIT_MASK_PS_AID_0 0x7ff
#define BIT_PS_AID_0(x) (((x) & BIT_MASK_PS_AID_0) << BIT_SHIFT_PS_AID_0)


//2 REG_FLC_TRPC (TIMER OF FLC_RPC)
#define BIT_FLC_RPCT_V1_8710C BIT(7)
#define BIT_MODE_8710C BIT(6)

#define BIT_SHIFT_TRPCD 0
#define BIT_MASK_TRPCD 0x3f
#define BIT_TRPCD(x) (((x) & BIT_MASK_TRPCD) << BIT_SHIFT_TRPCD)


//2 REG_FLC_PTS (PKT TYPE SELECTION OF FLC_RPC T)
#define BIT_CMF_8710C BIT(2)
#define BIT_CCF_8710C BIT(1)
#define BIT_CDF_8710C BIT(0)

//2 REG_FLC_RPCT (FLC_RPC THRESHOLD)

#define BIT_SHIFT_FLC_RPCT 0
#define BIT_MASK_FLC_RPCT 0xff
#define BIT_FLC_RPCT(x) (((x) & BIT_MASK_FLC_RPCT) << BIT_SHIFT_FLC_RPCT)


//2 REG_FLC_RPC (FW LPS CONDITION -- RX PKT COUNTER)

#define BIT_SHIFT_FLC_RPC 0
#define BIT_MASK_FLC_RPC 0xff
#define BIT_FLC_RPC(x) (((x) & BIT_MASK_FLC_RPC) << BIT_SHIFT_FLC_RPC)


//2 REG_RXPKTMON_CTRL

#define BIT_SHIFT_RXBKQPKT_SEQ 20
#define BIT_MASK_RXBKQPKT_SEQ 0xf
#define BIT_RXBKQPKT_SEQ(x) (((x) & BIT_MASK_RXBKQPKT_SEQ) << BIT_SHIFT_RXBKQPKT_SEQ)


#define BIT_SHIFT_RXBEQPKT_SEQ 16
#define BIT_MASK_RXBEQPKT_SEQ 0xf
#define BIT_RXBEQPKT_SEQ(x) (((x) & BIT_MASK_RXBEQPKT_SEQ) << BIT_SHIFT_RXBEQPKT_SEQ)


#define BIT_SHIFT_RXVIQPKT_SEQ 12
#define BIT_MASK_RXVIQPKT_SEQ 0xf
#define BIT_RXVIQPKT_SEQ(x) (((x) & BIT_MASK_RXVIQPKT_SEQ) << BIT_SHIFT_RXVIQPKT_SEQ)


#define BIT_SHIFT_RXVOQPKT_SEQ 8
#define BIT_MASK_RXVOQPKT_SEQ 0xf
#define BIT_RXVOQPKT_SEQ(x) (((x) & BIT_MASK_RXVOQPKT_SEQ) << BIT_SHIFT_RXVOQPKT_SEQ)

#define BIT_RXBKQPKT_ERR_8710C BIT(7)
#define BIT_RXBEQPKT_ERR_8710C BIT(6)
#define BIT_RXVIQPKT_ERR_8710C BIT(5)
#define BIT_RXVOQPKT_ERR_8710C BIT(4)
#define BIT_RXDMA_MON_EN_8710C BIT(2)
#define BIT_RXPKT_MON_RST_8710C BIT(1)
#define BIT_RXPKT_MON_EN_8710C BIT(0)

//2 REG_STATE_MON

#define BIT_SHIFT_STATE_SEL 24
#define BIT_MASK_STATE_SEL 0x1f
#define BIT_STATE_SEL(x) (((x) & BIT_MASK_STATE_SEL) << BIT_SHIFT_STATE_SEL)


#define BIT_SHIFT_STATE_INFO 8
#define BIT_MASK_STATE_INFO 0xff
#define BIT_STATE_INFO(x) (((x) & BIT_MASK_STATE_INFO) << BIT_SHIFT_STATE_INFO)

#define BIT_UPD_NXT_STATE_8710C BIT(7)

#define BIT_SHIFT_CUR_STATE 0
#define BIT_MASK_CUR_STATE 0x7f
#define BIT_CUR_STATE(x) (((x) & BIT_MASK_CUR_STATE) << BIT_SHIFT_CUR_STATE)


//2 REG_NOT_VALID
#define BIT_MACRX_ERR_1_8710C BIT(17)
#define BIT_MACRX_ERR_0_8710C BIT(16)
#define BIT_MACTX_ERR_3_8710C BIT(3)
#define BIT_MACTX_ERR_2_8710C BIT(2)
#define BIT_MACTX_ERR_1_8710C BIT(1)
#define BIT_MACTX_ERR_0_8710C BIT(0)

//2 REG_NOT_VALID

//2 REG_BT_COEX_TABLE (BT-COEXISTENCE CONTROL REGISTER)
#define BIT_PRI_MASK_RX_RESP_8710C BIT(126)
#define BIT_PRI_MASK_RXOFDM_8710C BIT(125)
#define BIT_PRI_MASK_RXCCK_8710C BIT(124)

#define BIT_SHIFT_PRI_MASK_TXAC (117 & CPU_OPT_WIDTH)
#define BIT_MASK_PRI_MASK_TXAC 0x7f
#define BIT_PRI_MASK_TXAC(x) (((x) & BIT_MASK_PRI_MASK_TXAC) << BIT_SHIFT_PRI_MASK_TXAC)


#define BIT_SHIFT_PRI_MASK_NAV (109 & CPU_OPT_WIDTH)
#define BIT_MASK_PRI_MASK_NAV 0xff
#define BIT_PRI_MASK_NAV(x) (((x) & BIT_MASK_PRI_MASK_NAV) << BIT_SHIFT_PRI_MASK_NAV)

#define BIT_PRI_MASK_CCK_8710C BIT(108)
#define BIT_PRI_MASK_OFDM_8710C BIT(107)
#define BIT_PRI_MASK_RTY_8710C BIT(106)

#define BIT_SHIFT_PRI_MASK_NUM (102 & CPU_OPT_WIDTH)
#define BIT_MASK_PRI_MASK_NUM 0xf
#define BIT_PRI_MASK_NUM_8710C(x) (((x) & BIT_MASK_PRI_MASK_NUM) << BIT_SHIFT_PRI_MASK_NUM)


#define BIT_SHIFT_PRI_MASK_TYPE (98 & CPU_OPT_WIDTH)
#define BIT_MASK_PRI_MASK_TYPE 0xf
#define BIT_PRI_MASK_TYPE(x) (((x) & BIT_MASK_PRI_MASK_TYPE) << BIT_SHIFT_PRI_MASK_TYPE)

#define BIT_OOB_8710C BIT(97)
#define BIT_ANT_SEL_8710C BIT(96)

#define BIT_SHIFT_BREAK_TABLE_2 (80 & CPU_OPT_WIDTH)
#define BIT_MASK_BREAK_TABLE_2 0xffff
#define BIT_BREAK_TABLE_2(x) (((x) & BIT_MASK_BREAK_TABLE_2) << BIT_SHIFT_BREAK_TABLE_2)


#define BIT_SHIFT_BREAK_TABLE_1 (64 & CPU_OPT_WIDTH)
#define BIT_MASK_BREAK_TABLE_1 0xffff
#define BIT_BREAK_TABLE_1(x) (((x) & BIT_MASK_BREAK_TABLE_1) << BIT_SHIFT_BREAK_TABLE_1)


#define BIT_SHIFT_COEX_TABLE_2 (32 & CPU_OPT_WIDTH)
#define BIT_MASK_COEX_TABLE_2 0xffffffffL
#define BIT_COEX_TABLE_2(x) (((x) & BIT_MASK_COEX_TABLE_2) << BIT_SHIFT_COEX_TABLE_2)


#define BIT_SHIFT_COEX_TABLE_1 0
#define BIT_MASK_COEX_TABLE_1 0xffffffffL
#define BIT_COEX_TABLE_1(x) (((x) & BIT_MASK_COEX_TABLE_1) << BIT_SHIFT_COEX_TABLE_1)


//2 REG_RXCMD_0
#define BIT_RXCMD_EN_8710C BIT(31)

#define BIT_SHIFT_RXCMD_INFO 0
#define BIT_MASK_RXCMD_INFO 0x7fffffffL
#define BIT_RXCMD_INFO(x) (((x) & BIT_MASK_RXCMD_INFO) << BIT_SHIFT_RXCMD_INFO)


//2 REG_RXCMD_1

#define BIT_SHIFT_RXCMD_PRD 0
#define BIT_MASK_RXCMD_PRD 0xffff
#define BIT_RXCMD_PRD(x) (((x) & BIT_MASK_RXCMD_PRD) << BIT_SHIFT_RXCMD_PRD)


//2 REG_NOT_VALID

//2 REG_WMAC_RESP_TXINFO (RESPONSE TXINFO REGISTER)
#define BIT_RSP_SMOOTH_VAL_8710C BIT(21)

#define BIT_SHIFT_RESP_TXPOWER 18
#define BIT_MASK_RESP_TXPOWER 0x7
#define BIT_RESP_TXPOWER(x) (((x) & BIT_MASK_RESP_TXPOWER) << BIT_SHIFT_RESP_TXPOWER)


#define BIT_SHIFT_RESP_TXAGC_B 13
#define BIT_MASK_RESP_TXAGC_B 0x1f
#define BIT_RESP_TXAGC_B(x) (((x) & BIT_MASK_RESP_TXAGC_B) << BIT_SHIFT_RESP_TXAGC_B)


#define BIT_SHIFT_RESP_TXAGC_A 8
#define BIT_MASK_RESP_TXAGC_A 0x1f
#define BIT_RESP_TXAGC_A(x) (((x) & BIT_MASK_RESP_TXAGC_A) << BIT_SHIFT_RESP_TXAGC_A)

#define BIT_RESP_ANTSEL_B_8710C BIT(7)
#define BIT_RESP_ANTSEL_A_8710C BIT(6)

//2 REG_BBPSF_CTRL
#define BIT_BBPSF_MPDUCHKEN_8710C BIT(5)
#define BIT_BBPSF_MHCHKEN_8710C BIT(4)
#define BIT_BBPSF_ERRCHKEN_8710C BIT(3)

#ifndef __HAL_COMMON_REG_H__
#define BIT_SHIFT_BBPSF_ERRTHR 0
#define BIT_MASK_BBPSF_ERRTHR 0x7
#define BIT_BBPSF_ERRTHR(x) (((x) & BIT_MASK_BBPSF_ERRTHR) << BIT_SHIFT_BBPSF_ERRTHR)
#endif

//2 REG_NOT_VALID

//2 REG_P2P_RX_BCN_NOA (P2P RX BEACON NOA REGISTER)
#define BIT_NOA_PARSER_EN_8710C BIT(15)
#define BIT_BSSID_SEL_8710C BIT(14)

#define BIT_SHIFT_P2P_OUI_TYPE 0
#define BIT_MASK_P2P_OUI_TYPE 0xff
#define BIT_P2P_OUI_TYPE(x) (((x) & BIT_MASK_P2P_OUI_TYPE) << BIT_SHIFT_P2P_OUI_TYPE)


//2 REG_ASSOCIATED_BFMER0_INFO (ASSOCIATED BEAMFORMER0 INFO REGISTER)

#define BIT_SHIFT_R_WMAC_TXCSI_AID0 (48 & CPU_OPT_WIDTH)
#define BIT_MASK_R_WMAC_TXCSI_AID0 0x1ff
#define BIT_R_WMAC_TXCSI_AID0(x) (((x) & BIT_MASK_R_WMAC_TXCSI_AID0) << BIT_SHIFT_R_WMAC_TXCSI_AID0)


#define BIT_SHIFT_R_WMAC_SOUNDING_RXADD_R0 0
#define BIT_MASK_R_WMAC_SOUNDING_RXADD_R0 0xffffffffffffL
#define BIT_R_WMAC_SOUNDING_RXADD_R0(x) (((x) & BIT_MASK_R_WMAC_SOUNDING_RXADD_R0) << BIT_SHIFT_R_WMAC_SOUNDING_RXADD_R0)


//2 REG_ASSOCIATED_BFMER1_INFO (ASSOCIATED BEAMFORMER1 INFO REGISTER)

#define BIT_SHIFT_R_WMAC_TXCSI_AID1 (48 & CPU_OPT_WIDTH)
#define BIT_MASK_R_WMAC_TXCSI_AID1 0x1ff
#define BIT_R_WMAC_TXCSI_AID1(x) (((x) & BIT_MASK_R_WMAC_TXCSI_AID1) << BIT_SHIFT_R_WMAC_TXCSI_AID1)


#define BIT_SHIFT_R_WMAC_SOUNDING_RXADD_R1 0
#define BIT_MASK_R_WMAC_SOUNDING_RXADD_R1 0xffffffffffffL
#define BIT_R_WMAC_SOUNDING_RXADD_R1(x) (((x) & BIT_MASK_R_WMAC_SOUNDING_RXADD_R1) << BIT_SHIFT_R_WMAC_SOUNDING_RXADD_R1)


//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_NOT_VALID

//2 REG_TX_CSI_RPT_PARAM_BW20 (TX CSI REPORT PARAMETER_BW20 REGISTER)

#define BIT_SHIFT_R_WMAC_BFINFO_20M_1 16
#define BIT_MASK_R_WMAC_BFINFO_20M_1 0xfff
#define BIT_R_WMAC_BFINFO_20M_1(x) (((x) & BIT_MASK_R_WMAC_BFINFO_20M_1) << BIT_SHIFT_R_WMAC_BFINFO_20M_1)


#define BIT_SHIFT_R_WMAC_BFINFO_20M_0 0
#define BIT_MASK_R_WMAC_BFINFO_20M_0 0xfff
#define BIT_R_WMAC_BFINFO_20M_0(x) (((x) & BIT_MASK_R_WMAC_BFINFO_20M_0) << BIT_SHIFT_R_WMAC_BFINFO_20M_0)


//2 REG_TX_CSI_RPT_PARAM_BW40 (TX CSI REPORT PARAMETER_BW40 REGISTER)

#define BIT_SHIFT_R_WMAC_BFINFO_40M_1 16
#define BIT_MASK_R_WMAC_BFINFO_40M_1 0xfff
#define BIT_R_WMAC_BFINFO_40M_1(x) (((x) & BIT_MASK_R_WMAC_BFINFO_40M_1) << BIT_SHIFT_R_WMAC_BFINFO_40M_1)


#define BIT_SHIFT_R_WMAC_BFINFO_40M_0 0
#define BIT_MASK_R_WMAC_BFINFO_40M_0 0xfff
#define BIT_R_WMAC_BFINFO_40M_0(x) (((x) & BIT_MASK_R_WMAC_BFINFO_40M_0) << BIT_SHIFT_R_WMAC_BFINFO_40M_0)


//2 REG_TX_CSI_RPT_PARAM_BW80 (TX CSI REPORT PARAMETER_BW80 REGISTER)

#define BIT_SHIFT_R_WMAC_BFINFO_80M_1 16
#define BIT_MASK_R_WMAC_BFINFO_80M_1 0xfff
#define BIT_R_WMAC_BFINFO_80M_1(x) (((x) & BIT_MASK_R_WMAC_BFINFO_80M_1) << BIT_SHIFT_R_WMAC_BFINFO_80M_1)


#define BIT_SHIFT_R_WMAC_BFINFO_80M_0 0
#define BIT_MASK_R_WMAC_BFINFO_80M_0 0xfff
#define BIT_R_WMAC_BFINFO_80M_0(x) (((x) & BIT_MASK_R_WMAC_BFINFO_80M_0) << BIT_SHIFT_R_WMAC_BFINFO_80M_0)


//2 REG_NOT_VALID

//2 REG_MACID1

//2 REG_NOT_VALID

//2 REG_BCN_PSR_RPT1

//2 REG_ASSOCIATED_BFMEE_SEL

#define BIT_SHIFT_RD_BF_SEL 29
#define BIT_MASK_RD_BF_SEL 0x7
#define BIT_RD_BF_SEL(x) (((x) & BIT_MASK_RD_BF_SEL) << BIT_SHIFT_RD_BF_SEL)

#define BIT_TXUSER_ID1_8710C BIT(25)

#define BIT_SHIFT_AID1 16
#define BIT_MASK_AID1 0x1ff
#define BIT_AID1(x) (((x) & BIT_MASK_AID1) << BIT_SHIFT_AID1)

#define BIT_TXUSER_ID0_8710C BIT(9)

#define BIT_SHIFT_AID0 0
#define BIT_MASK_AID0 0x1ff
#define BIT_AID0(x) (((x) & BIT_MASK_AID0) << BIT_SHIFT_AID0)


//2 REG_SND_PTCL_CTRL

#define BIT_SHIFT_R_WMAC_VHT_CATEGORY 8
#define BIT_MASK_R_WMAC_VHT_CATEGORY 0xff
#define BIT_R_WMAC_VHT_CATEGORY(x) (((x) & BIT_MASK_R_WMAC_VHT_CATEGORY) << BIT_SHIFT_R_WMAC_VHT_CATEGORY)


//2 REG_RX_CSI_RPT_INFO

//2 REG_NS_ARP_CTRL

//2 REG_NS_ARP_INFO

//2 REG_NS_ARP_IPADDR

//2 REG_BEAMFORMING_INFO_NSARP

#define BIT_SHIFT_BEAMFORMING_INFO 0
#define BIT_MASK_BEAMFORMING_INFO 0xffffffffL
#define BIT_BEAMFORMING_INFO(x) (((x) & BIT_MASK_BEAMFORMING_INFO) << BIT_SHIFT_BEAMFORMING_INFO)


//2 REG_NOT_VALID

//2 REG_WMAC RTX CTX SUBTYPE

//2 REG_NOT_VALID

#define BIT_SHIFT_R_WMAC_CTX_SUBTYPE 4
#define BIT_MASK_R_WMAC_CTX_SUBTYPE 0xf
#define BIT_R_WMAC_CTX_SUBTYPE(x) (((x) & BIT_MASK_R_WMAC_CTX_SUBTYPE) << BIT_SHIFT_R_WMAC_CTX_SUBTYPE)


//2 REG_SW AES CONFIGURE

//2 REG_BT_COEX_V2
#define BIT_GNT_BT_POLARITY_8710C BIT(12)
#define BIT_GNT_BT_BYPASS_PRIORITY_8710C BIT(8)

#define BIT_SHIFT_TIMER 0
#define BIT_MASK_TIMER 0xff
#define BIT_TIMER(x) (((x) & BIT_MASK_TIMER) << BIT_SHIFT_TIMER)


//2 REG_BT_COEX

//2 REG_WLAN_ACT_MSK_CTRL

//2 REG_BT_STATISTICS_CTRL

//2 REG_BT_COEX_ENH_INTF_CTRL

//2 REG_BT_ACT_STATISTICS

//2 REG_BT_STATISTICS_OTH_CTRL

//2 REG_BT_CMD_ID

//2 REG_BT__STATUS_RPT

//2 REG_BT_DATA

//2 REG_WLAN_RPT_ PKT

//2 REG_BT_ISR_CTRL

//2 REG_WLAN_RPT_TO_CTR

//2 REG_BT_ISOLATION_TABLE

//2 REG_BT_ISR_STA

//2 REG_TDMA_TIME_AND_RPT_SAM_SET

//2 REG_BT_CH_INFO

//2 REG_BT_STATIC_INFO_EXT

//2 REG_LTR_IDLE_LATENCY

//2 REG_LTR_ACTIVE_LATENCY

//2 REG_OBFF_CTRL

//2 REG_LTR_CTRL

//2 REG_LTR_CTRL2

//2 REG_ANTTRN_CTRL

//2 REG_WMAC_PKTCNT_RWD

#define BIT_SHIFT_PKTCNT_BSSIDMAP 4
#define BIT_MASK_PKTCNT_BSSIDMAP 0xf
#define BIT_PKTCNT_BSSIDMAP(x) (((x) & BIT_MASK_PKTCNT_BSSIDMAP) << BIT_SHIFT_PKTCNT_BSSIDMAP)

#define BIT_PKTCNT_CNTRST_8710C BIT(1)
#define BIT_PKTCNT_CNTEN_8710C BIT(0)

//2 REG_WMAC_PKTCNT_CTRL
#define BIT_WMAC_PKTCNT_TRST_8710C BIT(9)
#define BIT_WMAC_PKTCNT_FEN_8710C BIT(8)

#define BIT_SHIFT_WMAC_PKTCNT_CFGAD 0
#define BIT_MASK_WMAC_PKTCNT_CFGAD 0xff
#define BIT_WMAC_PKTCNT_CFGAD(x) (((x) & BIT_MASK_WMAC_PKTCNT_CFGAD) << BIT_SHIFT_WMAC_PKTCNT_CFGAD)


//2 REG_WL2LTECOEX_INDIRECT_ACCESS_CTRL
#define BIT_LTECOEX_ACCESS_START_8710C BIT(31)
#define BIT_LTECOEX_WRITE_MODE_8710C BIT(30)
#define BIT_LTECOEX_READY_BIT_8710C BIT(29)

#define BIT_SHIFT_WRITE_BYTE_EN 16
#define BIT_MASK_WRITE_BYTE_EN 0xf
#define BIT_WRITE_BYTE_EN(x) (((x) & BIT_MASK_WRITE_BYTE_EN) << BIT_SHIFT_WRITE_BYTE_EN)


#define BIT_SHIFT_LTECOEX_REG_ADDR 0
#define BIT_MASK_LTECOEX_REG_ADDR 0xffff
#define BIT_LTECOEX_REG_ADDR(x) (((x) & BIT_MASK_LTECOEX_REG_ADDR) << BIT_SHIFT_LTECOEX_REG_ADDR)


//2 REG_WL2LTECOEX_INDIRECT_ACCESS_WRITE_DATA

#define BIT_SHIFT_LTECOEX_W_DATA 0
#define BIT_MASK_LTECOEX_W_DATA 0xffffffffL
#define BIT_LTECOEX_W_DATA(x) (((x) & BIT_MASK_LTECOEX_W_DATA) << BIT_SHIFT_LTECOEX_W_DATA)


//2 REG_WL2LTECOEX_INDIRECT_ACCESS_READ_DATA

#define BIT_SHIFT_LTECOEX_R_DATA 0
#define BIT_MASK_LTECOEX_R_DATA 0xffffffffL
#define BIT_LTECOEX_R_DATA(x) (((x) & BIT_MASK_LTECOEX_R_DATA) << BIT_SHIFT_LTECOEX_R_DATA)


//2 REG_WMAC_FTM_CTL

#define BIT_SHIFT_RX_STOPRXDMA_RXPOINT 16
#define BIT_MASK_RX_STOPRXDMA_RXPOINT 0xffff
#define BIT_RX_STOPRXDMA_RXPOINT(x) (((x) & BIT_MASK_RX_STOPRXDMA_RXPOINT) << BIT_SHIFT_RX_STOPRXDMA_RXPOINT)

#define BIT_RXFTM_TXACK_SC_8710C BIT(6)
#define BIT_RXFTM_TXACK_BW_8710C BIT(5)
#define BIT_RXFTM_STOPRXDMAEN_8710C BIT(4)
#define BIT_RXFTM_EN_8710C BIT(3)
#define BIT_RXFTMREQ_STOPRXDMAEN_8710C BIT(2)
#define BIT_RXFTMREQ_EN_8710C BIT(1)
#define BIT_FTM_EN_8710C BIT(0)

//2 REG_OFDM_CCK_LEN_MASK

#define BIT_SHIFT_R_OFDM_LEN 16
#define BIT_MASK_R_OFDM_LEN 0xffff
#define BIT_R_OFDM_LEN(x) (((x) & BIT_MASK_R_OFDM_LEN) << BIT_SHIFT_R_OFDM_LEN)


#define BIT_SHIFT_R_CCK_LEN 0
#define BIT_MASK_R_CCK_LEN 0xffff
#define BIT_R_CCK_LEN(x) (((x) & BIT_MASK_R_CCK_LEN) << BIT_SHIFT_R_CCK_LEN)


//2 REG_FA_FILTER1
#define BIT_R_WMAC_FIL_SECERR_8710C BIT(13)
#define BIT_R_WMAC_FIL_CTLPKTLEN_8710C BIT(12)
#define BIT_R_WMAC_FIL_FCTYPE_8710C BIT(11)
#define BIT_R_WMAC_FIL_FCPROVER_8710C BIT(10)
#define BIT_R_WMAC_CHK_OFDM_LEN_8710C BIT(1)
#define BIT_R_WMAC_CHK_CCK_LEN_8710C BIT(0)

//2 REG_FA_FILTER2
#define BIT_DEL_MESH_TYPE_8710C BIT(17)

#define BIT_SHIFT_R_WMAC_RX_FIL_LEN 0
#define BIT_MASK_R_WMAC_RX_FIL_LEN 0xffff
#define BIT_R_WMAC_RX_FIL_LEN(x) (((x) & BIT_MASK_R_WMAC_RX_FIL_LEN) << BIT_SHIFT_R_WMAC_RX_FIL_LEN)


//2 REG_NAN_FUN

//2 REG_NAN_CTL

//2 REG_NAN_ADDR

//2 REG_NAN_ADDR

//2 REG_RXA1_MASK

#endif

